{
    "metadata": {},
    "endpoints": [
        {
            "when": [
                [
                    "region",
                    "starts-with",
                    "cn-"
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com.cn"
            }
        },
        {
            "when": [
                [
                    "region",
                    "not-equals",
                    null
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com"
            }
        }
    ],
    "operations": {
        "CreateCluster": {
            "documentation": "<p>Creates a new Amazon ECS cluster. By default, your account will receive a <code>default</code> cluster when you launch your first container instance. However, you can create your own cluster with a unique name with the <code>CreateCluster</code> action.</p>",
            "input": {
                "shape": "CreateClusterRequest"
            },
            "output": {
                "shape": "CreateClusterResponse"
            }
        },
        "CreateService": {
            "documentation": "<p>Runs and maintains a desired number of tasks from a specified task definition. If the number of tasks running in a service drops below <code>desiredCount</code>, Amazon ECS will spawn another instantiation of the task in the specified cluster.</p>",
            "input": {
                "shape": "CreateServiceRequest"
            },
            "output": {
                "shape": "CreateServiceResponse"
            }
        },
        "DeleteCluster": {
            "documentation": "<p>Deletes the specified cluster. You must deregister all container instances from this cluster before you may delete it. You can list the container instances in a cluster with <a>ListContainerInstances</a> and deregister them with <a>DeregisterContainerInstance</a>.</p>",
            "input": {
                "shape": "DeleteClusterRequest"
            },
            "output": {
                "shape": "DeleteClusterResponse"
            }
        },
        "DeleteService": {
            "documentation": "<p>Deletes a specified service within a cluster.</p>",
            "input": {
                "shape": "DeleteServiceRequest"
            },
            "output": {
                "shape": "DeleteServiceResponse"
            }
        },
        "DeregisterContainerInstance": {
            "documentation": "<p>Deregisters an Amazon ECS container instance from the specified cluster. This instance will no longer be available to run tasks.</p> <p>If you intend to use the container instance for some other purpose after deregistration, you should stop all of the tasks running on the container instance before deregistration to avoid any orphaned tasks from consuming resources.</p> <p>Deregistering a container instance removes the instance from a cluster, but it does not terminate the EC2 instance; if you are finished using the instance, be sure to terminate it in the Amazon EC2 console to stop billing.</p> <note><p>When you terminate a container instance, it is automatically deregistered from your cluster.</p></note>",
            "input": {
                "shape": "DeregisterContainerInstanceRequest"
            },
            "output": {
                "shape": "DeregisterContainerInstanceResponse"
            }
        },
        "DeregisterTaskDefinition": {
            "documentation": "<p>Deregisters the specified task definition by family and revision. Upon deregistration, the task definition is marked as <code>INACTIVE</code>. Existing tasks and services that reference an <code>INACTIVE</code> task definition continue to run without disruption. Existing services that reference an <code>INACTIVE</code> task definition can still scale up or down by modifying the service's desired count.</p> <p>You cannot use an <code>INACTIVE</code> task definition to run new tasks or create new services, and you cannot update an existing service to reference an <code>INACTIVE</code> task definition (although there may be up to a 10 minute window following deregistration where these restrictions have not yet taken effect).</p>",
            "input": {
                "shape": "DeregisterTaskDefinitionRequest"
            },
            "output": {
                "shape": "DeregisterTaskDefinitionResponse"
            }
        },
        "DescribeClusters": {
            "documentation": "<p>Describes one or more of your clusters.</p>",
            "input": {
                "shape": "DescribeClustersRequest"
            },
            "output": {
                "shape": "DescribeClustersResponse"
            }
        },
        "DescribeContainerInstances": {
            "documentation": "<p>Describes Amazon EC2 Container Service container instances. Returns metadata about registered and remaining resources on each container instance requested.</p>",
            "input": {
                "shape": "DescribeContainerInstancesRequest"
            },
            "output": {
                "shape": "DescribeContainerInstancesResponse"
            }
        },
        "DescribeServices": {
            "documentation": "<p>Describes the specified services running in your cluster.</p>",
            "input": {
                "shape": "DescribeServicesRequest"
            },
            "output": {
                "shape": "DescribeServicesResponse"
            }
        },
        "DescribeTaskDefinition": {
            "documentation": "<p>Describes a task definition. You can specify a <code>family</code> and <code>revision</code> to find information on a specific task definition, or you can simply specify the family to find the latest <code>ACTIVE</code> revision in that family.</p> <note> <p>You can only describe <code>INACTIVE</code> task definitions while an active task or service references them.</p> </note>",
            "input": {
                "shape": "DescribeTaskDefinitionRequest"
            },
            "output": {
                "shape": "DescribeTaskDefinitionResponse"
            }
        },
        "DescribeTasks": {
            "documentation": "<p>Describes a specified task or tasks.</p>",
            "input": {
                "shape": "DescribeTasksRequest"
            },
            "output": {
                "shape": "DescribeTasksResponse"
            }
        },
        "DiscoverPollEndpoint": {
            "documentation": "<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Returns an endpoint for the Amazon EC2 Container Service agent to poll for updates.</p>",
            "input": {
                "shape": "DiscoverPollEndpointRequest"
            },
            "output": {
                "shape": "DiscoverPollEndpointResponse"
            }
        },
        "ListClusters": {
            "documentation": "<p>Returns a list of existing clusters.</p>",
            "input": {
                "shape": "ListClustersRequest"
            },
            "output": {
                "shape": "ListClustersResponse"
            }
        },
        "ListContainerInstances": {
            "documentation": "<p>Returns a list of container instances in a specified cluster.</p>",
            "input": {
                "shape": "ListContainerInstancesRequest"
            },
            "output": {
                "shape": "ListContainerInstancesResponse"
            }
        },
        "ListServices": {
            "documentation": "<p>Lists the services that are running in a specified cluster.</p>",
            "input": {
                "shape": "ListServicesRequest"
            },
            "output": {
                "shape": "ListServicesResponse"
            }
        },
        "ListTaskDefinitionFamilies": {
            "documentation": "<p>Returns a list of task definition families that are registered to your account (which may include task definition families that no longer have any <code>ACTIVE</code> task definitions). You can filter the results with the <code>familyPrefix</code> parameter.</p>",
            "input": {
                "shape": "ListTaskDefinitionFamiliesRequest"
            },
            "output": {
                "shape": "ListTaskDefinitionFamiliesResponse"
            }
        },
        "ListTaskDefinitions": {
            "documentation": "<p>Returns a list of task definitions that are registered to your account. You can filter the results by family name with the <code>familyPrefix</code> parameter or by status with the <code>status</code> parameter.</p>",
            "input": {
                "shape": "ListTaskDefinitionsRequest"
            },
            "output": {
                "shape": "ListTaskDefinitionsResponse"
            }
        },
        "ListTasks": {
            "documentation": "<p>Returns a list of tasks for a specified cluster. You can filter the results by family name, by a particular container instance, or by the desired status of the task with the <code>family</code>, <code>containerInstance</code>, and <code>desiredStatus</code> parameters.</p>",
            "input": {
                "shape": "ListTasksRequest"
            },
            "output": {
                "shape": "ListTasksResponse"
            }
        },
        "RegisterContainerInstance": {
            "documentation": "<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Registers an Amazon EC2 instance into the specified cluster. This instance will become available to place containers on.</p>",
            "input": {
                "shape": "RegisterContainerInstanceRequest"
            },
            "output": {
                "shape": "RegisterContainerInstanceResponse"
            }
        },
        "RegisterTaskDefinition": {
            "documentation": "<p>Registers a new task definition from the supplied <code>family</code> and <code>containerDefinitions</code>. Optionally, you can add data volumes to your containers with the <code>volumes</code> parameter. For more information on task definition parameters and defaults, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>",
            "input": {
                "shape": "RegisterTaskDefinitionRequest"
            },
            "output": {
                "shape": "RegisterTaskDefinitionResponse"
            }
        },
        "RunTask": {
            "documentation": "<p>Start a task using random placement and the default Amazon ECS scheduler. If you want to use your own scheduler or place a task on a specific container instance, use <code>StartTask</code> instead.</p> <important> <p>The <code>count</code> parameter is limited to 10 tasks per call.</p> </important>",
            "input": {
                "shape": "RunTaskRequest"
            },
            "output": {
                "shape": "RunTaskResponse"
            }
        },
        "StartTask": {
            "documentation": "<p>Starts a new task from the specified task definition on the specified container instance or instances. If you want to use the default Amazon ECS scheduler to place your task, use <code>RunTask</code> instead.</p> <important> <p>The list of container instances to start tasks on is limited to 10.</p> </important>",
            "input": {
                "shape": "StartTaskRequest"
            },
            "output": {
                "shape": "StartTaskResponse"
            }
        },
        "StopTask": {
            "documentation": "<p>Stops a running task.</p>",
            "input": {
                "shape": "StopTaskRequest"
            },
            "output": {
                "shape": "StopTaskResponse"
            }
        },
        "SubmitContainerStateChange": {
            "documentation": "<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Sent to acknowledge that a container changed states.</p>",
            "input": {
                "shape": "SubmitContainerStateChangeRequest"
            },
            "output": {
                "shape": "SubmitContainerStateChangeResponse"
            }
        },
        "SubmitTaskStateChange": {
            "documentation": "<note><p>This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent.</p></note> <p>Sent to acknowledge that a task changed states.</p>",
            "input": {
                "shape": "SubmitTaskStateChangeRequest"
            },
            "output": {
                "shape": "SubmitTaskStateChangeResponse"
            }
        },
        "UpdateContainerAgent": {
            "documentation": "<p>Updates the Amazon ECS container agent on a specified container instance. Updating the Amazon ECS container agent does not interrupt running tasks or services on the container instance. The process for updating the agent differs depending on whether your container instance was launched with the Amazon ECS-optimized AMI or another operating system.</p> <p><code>UpdateContainerAgent</code> requires the Amazon ECS-optimized AMI or Amazon Linux with the <code>ecs-init</code> service installed and running. For help updating the Amazon ECS container agent on other operating systems, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html#manually_update_agent\">Manually Updating the Amazon ECS Container Agent</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>",
            "input": {
                "shape": "UpdateContainerAgentRequest"
            },
            "output": {
                "shape": "UpdateContainerAgentResponse"
            }
        },
        "UpdateService": {
            "documentation": "<p>Modify the desired count or task definition used in a service.</p> <p>You can add to or subtract from the number of instantiations of a task definition in a service by specifying the cluster that the service is running in and a new <code>desiredCount</code> parameter.</p> <p>You can use <code>UpdateService</code> to modify your task definition and deploy a new version of your service, one task at a time. If you modify the task definition with <code>UpdateService</code>, Amazon ECS spawns a task with the new version of the task definition and then stops an old task after the new version is running. Because <code>UpdateService</code> starts a new version of the task before stopping an old version, your cluster must have capacity to support one more instantiation of the task when <code>UpdateService</code> is run. If your cluster cannot support another instantiation of the task used in your service, you can reduce the desired count of your service by one before modifying the task definition.</p>",
            "input": {
                "shape": "UpdateServiceRequest"
            },
            "output": {
                "shape": "UpdateServiceResponse"
            }
        }
    },
    "shapes": {
        "AgentUpdateStatus": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "BoxedBoolean": {
            "type": "boolean"
        },
        "BoxedInteger": {
            "type": "integer"
        },
        "ClientException": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "String"
                }
            ]
        },
        "Cluster": {
            "type": "structure",
            "members": [
                {
                    "name": "clusterArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the cluster, the AWS account ID of the cluster owner, the <code>cluster</code> namespace, and then the cluster name. For example, arn:aws:ecs:<i>region</i>:<i>012345678910</i>:cluster/<i>test</i>.</p>"
                },
                {
                    "name": "clusterName",
                    "shape": "String",
                    "documentation": "<p>A user-generated string that you can use to identify your cluster.</p>"
                },
                {
                    "name": "status",
                    "shape": "String",
                    "documentation": "<p>The status of the cluster. The valid values are <code>ACTIVE</code> or <code>INACTIVE</code>. <code>ACTIVE</code> indicates that you can register container instances with the cluster and the associated instances can accept tasks.</p>"
                },
                {
                    "name": "registeredContainerInstancesCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of container instances registered into the cluster.</p>"
                },
                {
                    "name": "runningTasksCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks in the cluster that are in the <code>RUNNING</code> state.</p>"
                },
                {
                    "name": "pendingTasksCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks in the cluster that are in the <code>PENDING</code> state.</p>"
                },
                {
                    "name": "activeServicesCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of services that are running on the cluster in an <code>ACTIVE</code> state. You can view these services with <a>ListServices</a>.</p>"
                }
            ]
        },
        "ClusterContainsContainerInstancesException": {
            "type": "structure",
            "members": []
        },
        "ClusterContainsServicesException": {
            "type": "structure",
            "members": []
        },
        "ClusterNotFoundException": {
            "type": "structure",
            "members": []
        },
        "Clusters": {
            "type": "list",
            "of": "Cluster"
        },
        "Container": {
            "type": "structure",
            "members": [
                {
                    "name": "containerArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the container.</p>"
                },
                {
                    "name": "taskArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the task.</p>"
                },
                {
                    "name": "name",
                    "shape": "String",
                    "documentation": "<p>The name of the container.</p>"
                },
                {
                    "name": "lastStatus",
                    "shape": "String",
                    "documentation": "<p>The last known status of the container.</p>"
                },
                {
                    "name": "exitCode",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The exit code returned from the container.</p>"
                },
                {
                    "name": "reason",
                    "shape": "String",
                    "documentation": "<p>A short (255 max characters) human-readable string to provide additional detail about a running or stopped container.</p>"
                },
                {
                    "name": "networkBindings",
                    "shape": "NetworkBindings",
                    "documentation": "<p>The network bindings associated with the container.</p>"
                }
            ]
        },
        "ContainerDefinition": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "String",
                    "documentation": "<p>The name of a container. If you are linking multiple containers together in a task definition, the <code>name</code> of one container can be entered in the <code>links</code> of another container to connect the containers.</p>"
                },
                {
                    "name": "image",
                    "shape": "String",
                    "documentation": "<p>The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with <code><i>repository-url</i>/<i>image</i>:<i>tag</i></code>.</p>"
                },
                {
                    "name": "cpu",
                    "shape": "Integer",
                    "documentation": "<p>The number of <code>cpu</code> units reserved for the container. A container instance has 1,024 <code>cpu</code> units for every CPU core. This parameter specifies the minimum amount of CPU to reserve for a container, and containers share unallocated CPU units with other containers on the instance with the same ratio as their allocated amount.</p> <p>For example, if you run a single-container task on a single-core instance type with 512 CPU units specified for that container, and that is the only task running on the container instance, that container could use the full 1,024 CPU unit share at any given time. However, if you launched another copy of the same task on that container instance, each task would be guaranteed a minimum of 512 CPU units when needed, and each container could float to higher CPU usage if the other container was not using it, but if both tasks were 100% active all of the time, they would be limited to 512 CPU units.</p> <p>The Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for running containers. For more information, see <a href=\"https://docs.docker.com/reference/run/#cpu-share-constraint\">CPU share constraint</a> in the Docker documentation. The minimum valid CPU share value that the Linux kernel will allow is 2; however, the CPU parameter is not required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null), the behavior varies based on your Amazon ECS container agent version:</p> <ul> <li> <b>Agent versions less than or equal to 1.1.0:</b> Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are passed to Docker as 1, which the Linux kernel converts to 2 CPU shares.</li> <li> <b>Agent versions greater than or equal to 1.2.0:</b> Null, zero, and CPU values of 1 are passed to Docker as 2.</li> </ul>"
                },
                {
                    "name": "memory",
                    "shape": "Integer",
                    "documentation": "<p>The number of MiB of memory reserved for the container. If your container attempts to exceed the memory allocated here, the container is killed.</p>"
                },
                {
                    "name": "links",
                    "shape": "StringList",
                    "documentation": "<p>The <code>link</code> parameter allows containers to communicate with each other without the need for port mappings, using the <code>name</code> parameter. The <code>name:internalName</code> construct is analogous to <code>name:alias</code> in Docker links. For more information on linking Docker containers, see <a href=\"https://docs.docker.com/userguide/dockerlinks/\">https://docs.docker.com/userguide/dockerlinks/</a>.</p> <important> <p>Containers that are collocated on a single container instance may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved on the container instance using security groups and VPC settings.</p> </important>"
                },
                {
                    "name": "portMappings",
                    "shape": "PortMappingList",
                    "documentation": "<p>The list of port mappings for the container.</p>"
                },
                {
                    "name": "essential",
                    "shape": "BoxedBoolean",
                    "documentation": "<p>If the <code>essential</code> parameter of a container is marked as <code>true</code>, the failure of that container will stop the task. If the <code>essential</code> parameter of a container is marked as <code>false</code>, then its failure will not affect the rest of the containers in a task. If this parameter is omitted, a container is assumed to be essential.</p> <note> <p>All tasks must have at least one essential container.</p> </note>"
                },
                {
                    "name": "entryPoint",
                    "shape": "StringList",
                    "documentation": "<important> <p>Early versions of the Amazon ECS container agent do not properly handle <code>entryPoint</code> parameters. If you have problems using <code>entryPoint</code>, update your container agent or enter your commands and arguments as <code>command</code> array items instead.</p> </important> <p>The <code>ENTRYPOINT</code> that is passed to the container. For more information on the Docker <code>ENTRYPOINT</code> parameter, see <a href=\"https://docs.docker.com/reference/builder/#entrypoint\">https://docs.docker.com/reference/builder/#entrypoint</a>.</p>"
                },
                {
                    "name": "command",
                    "shape": "StringList",
                    "documentation": "<p>The <code>CMD</code> that is passed to the container. For more information on the Docker <code>CMD</code> parameter, see <a href=\"https://docs.docker.com/reference/builder/#cmd\">https://docs.docker.com/reference/builder/#cmd</a>.</p>"
                },
                {
                    "name": "environment",
                    "shape": "EnvironmentVariables",
                    "documentation": "<p>The environment variables to pass to a container.</p>"
                },
                {
                    "name": "mountPoints",
                    "shape": "MountPointList",
                    "documentation": "<p>The mount points for data volumes in your container.</p>"
                },
                {
                    "name": "volumesFrom",
                    "shape": "VolumeFromList",
                    "documentation": "<p>Data volumes to mount from another container.</p>"
                }
            ]
        },
        "ContainerDefinitions": {
            "type": "list",
            "of": "ContainerDefinition"
        },
        "ContainerInstance": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstanceArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the <code>container-instance</code> namespace, and then the container instance UUID. For example, arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_UUID</i>.</p>"
                },
                {
                    "name": "ec2InstanceId",
                    "shape": "String",
                    "documentation": "<p>The Amazon EC2 instance ID of the container instance.</p>"
                },
                {
                    "name": "versionInfo",
                    "shape": "VersionInfo",
                    "documentation": "<p>The version information for the Amazon ECS container agent and Docker daemon running on the container instance.</p>"
                },
                {
                    "name": "remainingResources",
                    "shape": "Resources",
                    "documentation": "<p>The remaining resources of the container instance that are available for new tasks.</p>"
                },
                {
                    "name": "registeredResources",
                    "shape": "Resources",
                    "documentation": "<p>The registered resources on the container instance that are in use by current tasks.</p>"
                },
                {
                    "name": "status",
                    "shape": "String",
                    "documentation": "<p>The status of the container instance. The valid values are <code>ACTIVE</code> or <code>INACTIVE</code>. <code>ACTIVE</code> indicates that the container instance can accept tasks.</p>"
                },
                {
                    "name": "agentConnected",
                    "shape": "Boolean",
                    "documentation": "<p>This parameter returns <code>true</code> if the agent is actually connected to Amazon ECS. Registered instances with an agent that may be unhealthy or stopped will return <code>false</code>, and instances without a connected agent cannot accept placement request.</p>"
                },
                {
                    "name": "runningTasksCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks on the container instance that are in the <code>RUNNING</code> status.</p>"
                },
                {
                    "name": "pendingTasksCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks on the container instance that are in the <code>PENDING</code> status.</p>"
                },
                {
                    "name": "agentUpdateStatus",
                    "shape": "AgentUpdateStatus",
                    "documentation": "<p>The status of the most recent agent update. If an update has never been requested, this value is <code>NULL</code>.</p>"
                }
            ]
        },
        "ContainerInstances": {
            "type": "list",
            "of": "ContainerInstance"
        },
        "ContainerOverride": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "String",
                    "documentation": "<p>The name of the container that receives the override.</p>"
                },
                {
                    "name": "command",
                    "shape": "StringList",
                    "documentation": "<p>The command to send to the container that overrides the default command from the Docker image or the task definition.</p>"
                },
                {
                    "name": "environment",
                    "shape": "EnvironmentVariables",
                    "documentation": "<p>The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition.</p>"
                }
            ]
        },
        "ContainerOverrides": {
            "type": "list",
            "of": "ContainerOverride"
        },
        "Containers": {
            "type": "list",
            "of": "Container"
        },
        "CreateClusterRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "clusterName",
                    "shape": "String",
                    "documentation": "<p>The name of your cluster. If you do not specify a name for your cluster, you will create a cluster named <code>default</code>. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.</p>"
                }
            ]
        },
        "CreateClusterResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "Cluster",
                    "documentation": "<p>The full description of your new cluster.</p>"
                }
            ]
        },
        "CreateServiceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that you want to run your service on. If you do not specify a cluster, the default cluster is assumed.</p>"
                },
                {
                    "name": "serviceName",
                    "shape": "String",
                    "documentation": "<p>The name of your service. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. Service names must be unique within a cluster, but you can have similarly named services in multiple clusters within a region or across multiple regions.</p>"
                },
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition that you want to run in your service. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used.</p>"
                },
                {
                    "name": "loadBalancers",
                    "shape": "LoadBalancers",
                    "documentation": "<p>A list of load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer.</p>"
                },
                {
                    "name": "desiredCount",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The number of instantiations of the specified task definition that you would like to place and keep running on your cluster.</p>"
                },
                {
                    "name": "clientToken",
                    "shape": "String",
                    "documentation": "<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. Up to 32 ASCII characters are allowed.</p>"
                },
                {
                    "name": "role",
                    "shape": "String",
                    "documentation": "<p>The name or full Amazon Resource Name (ARN) of the IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf. This parameter is only required if you are using a load balancer with your service.</p>"
                }
            ]
        },
        "CreateServiceResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "service",
                    "shape": "Service",
                    "documentation": "<p>The full description of your service following the create call.</p>"
                }
            ]
        },
        "DeleteClusterRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that you want to delete.</p>"
                }
            ]
        },
        "DeleteClusterResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "Cluster",
                    "documentation": "<p>The full description of the deleted cluster.</p>"
                }
            ]
        },
        "DeleteServiceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The name of the cluster that hosts the service you want to delete.</p>"
                },
                {
                    "name": "service",
                    "shape": "String",
                    "documentation": "<p>The name of the service you want to delete.</p>"
                }
            ]
        },
        "DeleteServiceResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "service",
                    "shape": "Service"
                }
            ]
        },
        "Deployment": {
            "type": "structure",
            "members": [
                {
                    "name": "id",
                    "shape": "String",
                    "documentation": "<p>The ID of the deployment.</p>"
                },
                {
                    "name": "status",
                    "shape": "String",
                    "documentation": "<p>The status of the deployment. Valid values are <code>PRIMARY</code> (for the most recent deployment), <code>ACTIVE</code> (for previous deployments that still have tasks running, but are being replaced with the <code>PRIMARY</code> deployment), and <code>INACTIVE</code> (for deployments that have been completely replaced).</p>"
                },
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The most recent task definition that was specified for the service to use.</p>"
                },
                {
                    "name": "desiredCount",
                    "shape": "Integer",
                    "documentation": "<p>The most recent desired count of tasks that was specified for the service to deploy and/or maintain.</p>"
                },
                {
                    "name": "pendingCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks in the deployment that are in the <code>PENDING</code> status.</p>"
                },
                {
                    "name": "runningCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks in the deployment that are in the <code>RUNNING</code> status.</p>"
                },
                {
                    "name": "createdAt",
                    "shape": "Timestamp",
                    "documentation": "<p>The Unix time in seconds and milliseconds when the service was created.</p>"
                },
                {
                    "name": "updatedAt",
                    "shape": "Timestamp",
                    "documentation": "<p>The Unix time in seconds and milliseconds when the service was last updated.</p>"
                }
            ]
        },
        "Deployments": {
            "type": "list",
            "of": "Deployment"
        },
        "DeregisterContainerInstanceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instance you want to deregister. If you do not specify a cluster, the default cluster is assumed.</p>"
                },
                {
                    "name": "containerInstance",
                    "shape": "String",
                    "documentation": "<p>The container instance UUID or full Amazon Resource Name (ARN) of the container instance you want to deregister. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the <code>container-instance</code> namespace, and then the container instance UUID. For example, arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_UUID</i>.</p>"
                },
                {
                    "name": "force",
                    "shape": "BoxedBoolean",
                    "documentation": "<p>Force the deregistration of the container instance. If you have tasks running on the container instance when you deregister it with the <code>force</code> option, these tasks remain running and they will continue to pass Elastic Load Balancing load balancer health checks until you terminate the instance or the tasks stop through some other means, but they are orphaned (no longer monitored or accounted for by Amazon ECS). If an orphaned task on your container instance is part of an Amazon ECS service, then the service scheduler will start another copy of that task on a different container instance if possible.</p>"
                }
            ]
        },
        "DeregisterContainerInstanceResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstance",
                    "shape": "ContainerInstance"
                }
            ]
        },
        "DeregisterTaskDefinitionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition that you want to deregister. You must specify a <code>revision</code>.</p>"
                }
            ]
        },
        "DeregisterTaskDefinitionResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinition",
                    "shape": "TaskDefinition",
                    "documentation": "<p>The full description of the deregistered task.</p>"
                }
            ]
        },
        "DescribeClustersRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "clusters",
                    "shape": "StringList",
                    "documentation": "<p>A space-separated list of cluster names or full cluster Amazon Resource Name (ARN) entries. If you do not specify a cluster, the default cluster is assumed.</p>"
                }
            ]
        },
        "DescribeClustersResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "clusters",
                    "shape": "Clusters",
                    "documentation": "<p>The list of clusters.</p>"
                },
                {
                    "name": "failures",
                    "shape": "Failures"
                }
            ]
        },
        "DescribeContainerInstancesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instances you want to describe. If you do not specify a cluster, the default cluster is assumed.</p>"
                },
                {
                    "name": "containerInstances",
                    "shape": "StringList",
                    "documentation": "<p>A space-separated list of container instance UUIDs or full Amazon Resource Name (ARN) entries.</p>"
                }
            ]
        },
        "DescribeContainerInstancesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstances",
                    "shape": "ContainerInstances",
                    "documentation": "<p>The list of container instances.</p>"
                },
                {
                    "name": "failures",
                    "shape": "Failures"
                }
            ]
        },
        "DescribeServicesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The name of the cluster that hosts the service you want to describe.</p>"
                },
                {
                    "name": "services",
                    "shape": "StringList",
                    "documentation": "<p>A list of services you want to describe.</p>"
                }
            ]
        },
        "DescribeServicesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "services",
                    "shape": "Services",
                    "documentation": "<p>The list of services described.</p>"
                },
                {
                    "name": "failures",
                    "shape": "Failures",
                    "documentation": "<p>Any failures associated with the call.</p>"
                }
            ]
        },
        "DescribeTaskDefinitionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The <code>family</code> for the latest <code>ACTIVE</code> revision, <code>family</code> and <code>revision</code> (<code>family:revision</code>) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition that you want to describe.</p>"
                }
            ]
        },
        "DescribeTaskDefinitionResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinition",
                    "shape": "TaskDefinition",
                    "documentation": "<p>The full task definition description.</p>"
                }
            ]
        },
        "DescribeTasksRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task you want to describe. If you do not specify a cluster, the default cluster is assumed.</p>"
                },
                {
                    "name": "tasks",
                    "shape": "StringList",
                    "documentation": "<p>A space-separated list of task UUIDs or full Amazon Resource Name (ARN) entries.</p>"
                }
            ]
        },
        "DescribeTasksResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "tasks",
                    "shape": "Tasks",
                    "documentation": "<p>The list of tasks.</p>"
                },
                {
                    "name": "failures",
                    "shape": "Failures"
                }
            ]
        },
        "DesiredStatus": {
            "type": "string"
        },
        "DiscoverPollEndpointRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstance",
                    "shape": "String",
                    "documentation": "<p>The container instance UUID or full Amazon Resource Name (ARN) of the container instance. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the container instance, the AWS account ID of the container instance owner, the <code>container-instance</code> namespace, and then the container instance UUID. For example, arn:aws:ecs:<i>region</i>:<i>aws_account_id</i>:container-instance/<i>container_instance_UUID</i>.</p>"
                },
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The cluster that the container instance belongs to.</p>"
                }
            ]
        },
        "DiscoverPollEndpointResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "endpoint",
                    "shape": "String",
                    "documentation": "<p>The endpoint for the Amazon ECS agent to poll.</p>"
                },
                {
                    "name": "telemetryEndpoint",
                    "shape": "String",
                    "documentation": "<p>The telemetry endpoint for the Amazon ECS agent.</p>"
                }
            ]
        },
        "Double": {
            "type": "double"
        },
        "EnvironmentVariables": {
            "type": "list",
            "of": "KeyValuePair"
        },
        "Failure": {
            "type": "structure",
            "members": [
                {
                    "name": "arn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the failed resource.</p>"
                },
                {
                    "name": "reason",
                    "shape": "String",
                    "documentation": "<p>The reason for the failure.</p>"
                }
            ]
        },
        "Failures": {
            "type": "list",
            "of": "Failure"
        },
        "HostVolumeProperties": {
            "type": "structure",
            "members": [
                {
                    "name": "sourcePath",
                    "shape": "String",
                    "documentation": "<p>The path on the host container instance that is presented to the container. If this parameter is empty, then the Docker daemon has assigned a host path for you.</p>"
                }
            ]
        },
        "Integer": {
            "type": "integer"
        },
        "InvalidParameterException": {
            "type": "structure",
            "members": []
        },
        "KeyValuePair": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "String",
                    "documentation": "<p>The name of the key value pair. For environment variables, this is the name of the environment variable.</p>"
                },
                {
                    "name": "value",
                    "shape": "String",
                    "documentation": "<p>The value of the key value pair. For environment variables, this is the value of the environment variable.</p>"
                }
            ]
        },
        "ListClustersRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListClusters</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
                },
                {
                    "name": "maxResults",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The maximum number of cluster results returned by <code>ListClusters</code> in paginated output. When this parameter is used, <code>ListClusters</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListClusters</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListClusters</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
                }
            ]
        },
        "ListClustersResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "clusterArns",
                    "shape": "StringList",
                    "documentation": "<p>The list of full Amazon Resource Name (ARN) entries for each cluster associated with your account.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListClusters</code> request. When the results of a <code>ListClusters</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
                }
            ]
        },
        "ListContainerInstancesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container instances you want to list. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListContainerInstances</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
                },
                {
                    "name": "maxResults",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The maximum number of container instance results returned by <code>ListContainerInstances</code> in paginated output. When this parameter is used, <code>ListContainerInstances</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListContainerInstances</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListContainerInstances</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
                }
            ]
        },
        "ListContainerInstancesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstanceArns",
                    "shape": "StringList",
                    "documentation": "<p>The list of container instance full Amazon Resource Name (ARN) entries for each container instance associated with the specified cluster.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListContainerInstances</code> request. When the results of a <code>ListContainerInstances</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
                }
            ]
        },
        "ListServicesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the services you want to list. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListServices</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
                },
                {
                    "name": "maxResults",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The maximum number of container instance results returned by <code>ListServices</code> in paginated output. When this parameter is used, <code>ListServices</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListServices</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListServices</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
                }
            ]
        },
        "ListServicesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "serviceArns",
                    "shape": "StringList",
                    "documentation": "<p>The list of full Amazon Resource Name (ARN) entries for each service associated with the specified cluster.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListServices</code> request. When the results of a <code>ListServices</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
                }
            ]
        },
        "ListTaskDefinitionFamiliesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "familyPrefix",
                    "shape": "String",
                    "documentation": "<p>The <code>familyPrefix</code> is a string that is used to filter the results of <code>ListTaskDefinitionFamilies</code>. If you specify a <code>familyPrefix</code>, only task definition family names that begin with the <code>familyPrefix</code> string are returned.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitionFamilies</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
                },
                {
                    "name": "maxResults",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The maximum number of task definition family results returned by <code>ListTaskDefinitionFamilies</code> in paginated output. When this parameter is used, <code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTaskDefinitionFamilies</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitionFamilies</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
                }
            ]
        },
        "ListTaskDefinitionFamiliesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "families",
                    "shape": "StringList",
                    "documentation": "<p>The list of task definition family names that match the <code>ListTaskDefinitionFamilies</code> request.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListTaskDefinitionFamilies</code> request. When the results of a <code>ListTaskDefinitionFamilies</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
                }
            ]
        },
        "ListTaskDefinitionsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "familyPrefix",
                    "shape": "String",
                    "documentation": "<p>The full family name that you want to filter the <code>ListTaskDefinitions</code> results with. Specifying a <code>familyPrefix</code> will limit the listed task definitions to task definition revisions that belong to that family.</p>"
                },
                {
                    "name": "status",
                    "shape": "TaskDefinitionStatus",
                    "documentation": "<p>The task definition status that you want to filter the <code>ListTaskDefinitions</code> results with. By default, only <code>ACTIVE</code> task definitions are listed. By setting this parameter to <code>INACTIVE</code>, you can view task definitions that are <code>INACTIVE</code> as long as an active task or service still references them. If you paginate the resulting output, be sure to keep the <code>status</code> value constant in each subsequent request.</p>"
                },
                {
                    "name": "sort",
                    "shape": "SortOrder",
                    "documentation": "<p>The order in which to sort the results. Valid values are <code>ASC</code> and <code>DESC</code>. By default (<code>ASC</code>), task definitions are listed lexicographically by family name and in ascending numerical order by revision so that the newest task definitions in a family are listed last. Setting this parameter to <code>DESC</code> reverses the sort order on family name and revision so that the newest task definitions in a family are listed first.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListTaskDefinitions</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
                },
                {
                    "name": "maxResults",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The maximum number of task definition results returned by <code>ListTaskDefinitions</code> in paginated output. When this parameter is used, <code>ListTaskDefinitions</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTaskDefinitions</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTaskDefinitions</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
                }
            ]
        },
        "ListTaskDefinitionsResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinitionArns",
                    "shape": "StringList",
                    "documentation": "<p>The list of task definition Amazon Resource Name (ARN) entries for the <code>ListTaskDefintions</code> request.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListTaskDefinitions</code> request. When the results of a <code>ListTaskDefinitions</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
                }
            ]
        },
        "ListTasksRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the tasks you want to list. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "containerInstance",
                    "shape": "String",
                    "documentation": "<p>The container instance UUID or full Amazon Resource Name (ARN) of the container instance that you want to filter the <code>ListTasks</code> results with. Specifying a <code>containerInstance</code> will limit the results to tasks that belong to that container instance.</p>"
                },
                {
                    "name": "family",
                    "shape": "String",
                    "documentation": "<p>The name of the family that you want to filter the <code>ListTasks</code> results with. Specifying a <code>family</code> will limit the results to tasks that belong to that family.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListTasks</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>"
                },
                {
                    "name": "maxResults",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The maximum number of task results returned by <code>ListTasks</code> in paginated output. When this parameter is used, <code>ListTasks</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListTasks</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListTasks</code> returns up to 100 results and a <code>nextToken</code> value if applicable.</p>"
                },
                {
                    "name": "startedBy",
                    "shape": "String",
                    "documentation": "<p>The <code>startedBy</code> value that you want to filter the task results with. Specifying a <code>startedBy</code> value will limit the results to tasks that were started with that value.</p>"
                },
                {
                    "name": "serviceName",
                    "shape": "String",
                    "documentation": "<p>The name of the service that you want to filter the <code>ListTasks</code> results with. Specifying a <code>serviceName</code> will limit the results to tasks that belong to that service.</p>"
                },
                {
                    "name": "desiredStatus",
                    "shape": "DesiredStatus",
                    "documentation": "<p>The task status that you want to filter the <code>ListTasks</code> results with. Specifying a <code>desiredStatus</code> of <code>STOPPED</code> will limit the results to tasks that are in the <code>STOPPED</code> status, which can be useful for debugging tasks that are not starting properly or have died or finished. The default status filter is <code>RUNNING</code>.</p>"
                }
            ]
        },
        "ListTasksResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "taskArns",
                    "shape": "StringList",
                    "documentation": "<p>The list of task Amazon Resource Name (ARN) entries for the <code>ListTasks</code> request.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "String",
                    "documentation": "<p>The <code>nextToken</code> value to include in a future <code>ListTasks</code> request. When the results of a <code>ListTasks</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>"
                }
            ]
        },
        "LoadBalancer": {
            "type": "structure",
            "members": [
                {
                    "name": "loadBalancerName",
                    "shape": "String",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "containerName",
                    "shape": "String",
                    "documentation": "<p>The name of the container to associate with the load balancer.</p>"
                },
                {
                    "name": "containerPort",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The port on the container to associate with the load balancer. This port must correspond to a <code>containerPort</code> in the service's task definition. Your container instances must allow ingress traffic on the <code>hostPort</code> of the port mapping.</p>"
                }
            ]
        },
        "LoadBalancers": {
            "type": "list",
            "of": "LoadBalancer"
        },
        "Long": {
            "type": "long"
        },
        "MissingVersionException": {
            "type": "structure",
            "members": []
        },
        "MountPoint": {
            "type": "structure",
            "members": [
                {
                    "name": "sourceVolume",
                    "shape": "String",
                    "documentation": "<p>The name of the volume to mount.</p>"
                },
                {
                    "name": "containerPath",
                    "shape": "String",
                    "documentation": "<p>The path on the container to mount the host volume at.</p>"
                },
                {
                    "name": "readOnly",
                    "shape": "BoxedBoolean",
                    "documentation": "<p>If this value is <code>true</code>, the container has read-only access to the volume. If this value is <code>false</code>, then the container can write to the volume. The default value is <code>false</code>.</p>"
                }
            ]
        },
        "MountPointList": {
            "type": "list",
            "of": "MountPoint"
        },
        "NetworkBinding": {
            "type": "structure",
            "members": [
                {
                    "name": "bindIP",
                    "shape": "String",
                    "documentation": "<p>The IP address that the container is bound to on the container instance.</p>"
                },
                {
                    "name": "containerPort",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The port number on the container that is be used with the network binding.</p>"
                },
                {
                    "name": "hostPort",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The port number on the host that is used with the network binding.</p>"
                },
                {
                    "name": "protocol",
                    "shape": "TransportProtocol",
                    "documentation": "<p>The protocol used for the network binding.</p>"
                }
            ]
        },
        "NetworkBindings": {
            "type": "list",
            "of": "NetworkBinding"
        },
        "NoUpdateAvailableException": {
            "type": "structure",
            "members": []
        },
        "PortMapping": {
            "type": "structure",
            "members": [
                {
                    "name": "containerPort",
                    "shape": "Integer",
                    "documentation": "<p>The port number on the container that is bound to the user-specified or automatically assigned host port. If you specify a container port and not a host port, your container will automatically receive a host port in the ephemeral port range (for more information, see <code>hostPort</code>).</p>"
                },
                {
                    "name": "hostPort",
                    "shape": "Integer",
                    "documentation": "<p>The port number on the container instance to reserve for your container. You can specify a non-reserved host port for your container port mapping, or you can omit the <code>hostPort</code> (or set it to <code>0</code>) while specifying a <code>containerPort</code> and your container will automatically receive a port in the ephemeral port range for your container instance operating system and Docker version.</p> <p>The default ephemeral port range is 49153 to 65535, and this range is used for Docker versions prior to 1.6.0. For Docker version 1.6.0 and later, the Docker daemon tries to read the ephemeral port range from <code>/proc/sys/net/ipv4/ip_local_port_range</code>; if this kernel parameter is unavailable, the default ephemeral port range is used. You should not attempt to specify a host port in the ephemeral port range, since these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range.</p> <p>The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS Container Agent port 51678. Any host port that was previously specified in a running task is also reserved while the task is running (once a task stops, the host port is released).The current reserved ports are displayed in the <code>remainingResources</code> of <a>DescribeContainerInstances</a> output, and a container instance may have up to 50 reserved ports at a time, including the default reserved ports (automatically assigned ports do not count toward this limit).</p>"
                },
                {
                    "name": "protocol",
                    "shape": "TransportProtocol",
                    "documentation": "<p>The protocol used for the port mapping. Valid values are <code>tcp</code> and <code>udp</code>. The default is <code>tcp</code>.</p>"
                }
            ]
        },
        "PortMappingList": {
            "type": "list",
            "of": "PortMapping"
        },
        "RegisterContainerInstanceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that you want to register your container instance with. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "instanceIdentityDocument",
                    "shape": "String",
                    "documentation": "<p>The instance identity document for the Amazon EC2 instance to register. This document can be found by running the following command from the instance: <code>curl http://169.254.169.254/latest/dynamic/instance-identity/document/</code></p>"
                },
                {
                    "name": "instanceIdentityDocumentSignature",
                    "shape": "String",
                    "documentation": "<p>The instance identity document signature for the Amazon EC2 instance to register. This signature can be found by running the following command from the instance: <code>curl http://169.254.169.254/latest/dynamic/instance-identity/signature/</code></p>"
                },
                {
                    "name": "totalResources",
                    "shape": "Resources",
                    "documentation": "<p>The resources available on the instance.</p>"
                },
                {
                    "name": "versionInfo",
                    "shape": "VersionInfo",
                    "documentation": "<p>The version information for the Amazon ECS container agent and Docker daemon running on the container instance.</p>"
                },
                {
                    "name": "containerInstanceArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the container instance (if it was previously registered).</p>"
                }
            ]
        },
        "RegisterContainerInstanceResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstance",
                    "shape": "ContainerInstance"
                }
            ]
        },
        "RegisterTaskDefinitionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "family",
                    "shape": "String",
                    "documentation": "<p>You must specify a <code>family</code> for a task definition, which allows you to track multiple versions of the same task definition. You can think of the <code>family</code> as a name for your task definition. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.</p>"
                },
                {
                    "name": "containerDefinitions",
                    "shape": "ContainerDefinitions",
                    "documentation": "<p>A list of container definitions in JSON format that describe the different containers that make up your task.</p>"
                },
                {
                    "name": "volumes",
                    "shape": "VolumeList",
                    "documentation": "<p>A list of volume definitions in JSON format that containers in your task may use.</p>"
                }
            ]
        },
        "RegisterTaskDefinitionResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinition",
                    "shape": "TaskDefinition"
                }
            ]
        },
        "Resource": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "String",
                    "documentation": "<p>The name of the resource, such as <code>CPU</code>, <code>MEMORY</code>, <code>PORTS</code>, or a user-defined resource.</p>"
                },
                {
                    "name": "type",
                    "shape": "String",
                    "documentation": "<p>The type of the resource, such as <code>INTEGER</code>, <code>DOUBLE</code>, <code>LONG</code>, or <code>STRINGSET</code>.</p>"
                },
                {
                    "name": "doubleValue",
                    "shape": "Double",
                    "documentation": "<p>When the <code>doubleValue</code> type is set, the value of the resource must be a double precision floating-point type.</p>"
                },
                {
                    "name": "longValue",
                    "shape": "Long",
                    "documentation": "<p>When the <code>longValue</code> type is set, the value of the resource must be an extended precision floating-point type.</p>"
                },
                {
                    "name": "integerValue",
                    "shape": "Integer",
                    "documentation": "<p>When the <code>integerValue</code> type is set, the value of the resource must be an integer.</p>"
                },
                {
                    "name": "stringSetValue",
                    "shape": "StringList",
                    "documentation": "<p>When the <code>stringSetValue</code> type is set, the value of the resource must be a string type.</p>"
                }
            ]
        },
        "Resources": {
            "type": "list",
            "of": "Resource"
        },
        "RunTaskRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that you want to run your task on. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition that you want to run. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used.</p>"
                },
                {
                    "name": "overrides",
                    "shape": "TaskOverride",
                    "documentation": "<p>A list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that is specified in the task definition or Docker image) with a <code>command</code> override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an <code>environment</code> override.</p> <note> <p>A total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.</p> </note>"
                },
                {
                    "name": "count",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The number of instantiations of the specified task that you would like to place on your cluster.</p> <important> <p>The <code>count</code> parameter is limited to 10 tasks per call.</p> </important>"
                },
                {
                    "name": "startedBy",
                    "shape": "String",
                    "documentation": "<p>An optional tag specified when a task is started. For example if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the <code>startedBy</code> parameter. You can then identify which tasks belong to that job by filtering the results of a <a>ListTasks</a> call with the <code>startedBy</code> value.</p> <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
                }
            ]
        },
        "RunTaskResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "tasks",
                    "shape": "Tasks",
                    "documentation": "<p>A full description of the tasks that were run. Each task that was successfully placed on your cluster will be described here.</p>"
                },
                {
                    "name": "failures",
                    "shape": "Failures",
                    "documentation": "<p>Any failed tasks from your <code>RunTask</code> action are listed here.</p>"
                }
            ]
        },
        "ServerException": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "String"
                }
            ]
        },
        "Service": {
            "type": "structure",
            "members": [
                {
                    "name": "serviceArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) that identifies the service. The ARN contains the <code>arn:aws:ecs</code> namespace, followed by the region of the service, the AWS account ID of the service owner, the <code>service</code> namespace, and then the service name. For example, arn:aws:ecs:<i>region</i>:<i>012345678910</i>:service/<i>my-service</i>.</p>"
                },
                {
                    "name": "serviceName",
                    "shape": "String",
                    "documentation": "<p>A user-generated string that you can use to identify your service.</p>"
                },
                {
                    "name": "clusterArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the of the cluster that hosts the service.</p>"
                },
                {
                    "name": "loadBalancers",
                    "shape": "LoadBalancers",
                    "documentation": "<p>A list of load balancer objects, containing the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer.</p>"
                },
                {
                    "name": "status",
                    "shape": "String",
                    "documentation": "<p>The status of the service. The valid values are <code>ACTIVE</code>, <code>DRAINING</code>, or <code>INACTIVE</code>.</p>"
                },
                {
                    "name": "desiredCount",
                    "shape": "Integer",
                    "documentation": "<p>The desired number of instantiations of the task definition to keep running on the service. This value is specified when the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.</p>"
                },
                {
                    "name": "runningCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks in the cluster that are in the <code>RUNNING</code> state.</p>"
                },
                {
                    "name": "pendingCount",
                    "shape": "Integer",
                    "documentation": "<p>The number of tasks in the cluster that are in the <code>PENDING</code> state.</p>"
                },
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The task definition to use for tasks in the service. This value is specified when the service is created with <a>CreateService</a>, and it can be modified with <a>UpdateService</a>.</p>"
                },
                {
                    "name": "deployments",
                    "shape": "Deployments",
                    "documentation": "<p>The current state of deployments for the service.</p>"
                },
                {
                    "name": "roleArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM role associated with the service that allows the Amazon ECS container agent to register container instances with a load balancer. </p>"
                },
                {
                    "name": "events",
                    "shape": "ServiceEvents",
                    "documentation": "<p>The event stream for your service. A maximum of 100 of the latest events are displayed.</p>"
                }
            ]
        },
        "ServiceEvent": {
            "type": "structure",
            "members": [
                {
                    "name": "id",
                    "shape": "String",
                    "documentation": "<p>The ID string of the event.</p>"
                },
                {
                    "name": "createdAt",
                    "shape": "Timestamp",
                    "documentation": "<p>The Unix time in seconds and milliseconds when the event was triggered.</p>"
                },
                {
                    "name": "message",
                    "shape": "String",
                    "documentation": "<p>The event message.</p>"
                }
            ]
        },
        "ServiceEvents": {
            "type": "list",
            "of": "ServiceEvent"
        },
        "ServiceNotActiveException": {
            "type": "structure",
            "members": []
        },
        "ServiceNotFoundException": {
            "type": "structure",
            "members": []
        },
        "Services": {
            "type": "list",
            "of": "Service"
        },
        "SortOrder": {
            "type": "string"
        },
        "StartTaskRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that you want to start your task on. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition that you want to start. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used.</p>"
                },
                {
                    "name": "overrides",
                    "shape": "TaskOverride",
                    "documentation": "<p>A list of container overrides in JSON format that specify the name of a container in the specified task definition and the overrides it should receive. You can override the default command for a container (that is specified in the task definition or Docker image) with a <code>command</code> override. You can also override existing environment variables (that are specified in the task definition or Docker image) on a container or add new environment variables to it with an <code>environment</code> override.</p> <note> <p>A total of 8192 characters are allowed for overrides. This limit includes the JSON formatting characters of the override structure.</p> </note>"
                },
                {
                    "name": "containerInstances",
                    "shape": "StringList",
                    "documentation": "<p>The container instance UUIDs or full Amazon Resource Name (ARN) entries for the container instances on which you would like to place your task.</p> <important> <p>The list of container instances to start tasks on is limited to 10.</p> </important>"
                },
                {
                    "name": "startedBy",
                    "shape": "String",
                    "documentation": "<p>An optional tag specified when a task is started. For example if you automatically trigger a task to run a batch process job, you could apply a unique identifier for that job to your task with the <code>startedBy</code> parameter. You can then identify which tasks belong to that job by filtering the results of a <a>ListTasks</a> call with the <code>startedBy</code> value.</p> <p>If a task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
                }
            ]
        },
        "StartTaskResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "tasks",
                    "shape": "Tasks",
                    "documentation": "<p>A full description of the tasks that were started. Each task that was successfully placed on your container instances will be described here.</p>"
                },
                {
                    "name": "failures",
                    "shape": "Failures",
                    "documentation": "<p>Any failed tasks from your <code>StartTask</code> action are listed here.</p>"
                }
            ]
        },
        "StopTaskRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task you want to stop. If you do not specify a cluster, the default cluster is assumed..</p>"
                },
                {
                    "name": "task",
                    "shape": "String",
                    "documentation": "<p>The task UUIDs or full Amazon Resource Name (ARN) entry of the task you would like to stop.</p>"
                }
            ]
        },
        "StopTaskResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "task",
                    "shape": "Task"
                }
            ]
        },
        "String": {
            "type": "string"
        },
        "StringList": {
            "type": "list",
            "of": "String"
        },
        "SubmitContainerStateChangeRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the container.</p>"
                },
                {
                    "name": "task",
                    "shape": "String",
                    "documentation": "<p>The task UUID or full Amazon Resource Name (ARN) of the task that hosts the container.</p>"
                },
                {
                    "name": "containerName",
                    "shape": "String",
                    "documentation": "<p>The name of the container.</p>"
                },
                {
                    "name": "status",
                    "shape": "String",
                    "documentation": "<p>The status of the state change request.</p>"
                },
                {
                    "name": "exitCode",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The exit code returned for the state change request.</p>"
                },
                {
                    "name": "reason",
                    "shape": "String",
                    "documentation": "<p>The reason for the state change request.</p>"
                },
                {
                    "name": "networkBindings",
                    "shape": "NetworkBindings",
                    "documentation": "<p>The network bindings of the container.</p>"
                }
            ]
        },
        "SubmitContainerStateChangeResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "acknowledgment",
                    "shape": "String",
                    "documentation": "<p>Acknowledgement of the state change.</p>"
                }
            ]
        },
        "SubmitTaskStateChangeRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that hosts the task.</p>"
                },
                {
                    "name": "task",
                    "shape": "String",
                    "documentation": "<p>The task UUID or full Amazon Resource Name (ARN) of the task in the state change request.</p>"
                },
                {
                    "name": "status",
                    "shape": "String",
                    "documentation": "<p>The status of the state change request.</p>"
                },
                {
                    "name": "reason",
                    "shape": "String",
                    "documentation": "<p>The reason for the state change request.</p>"
                }
            ]
        },
        "SubmitTaskStateChangeResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "acknowledgment",
                    "shape": "String",
                    "documentation": "<p>Acknowledgement of the state change.</p>"
                }
            ]
        },
        "Task": {
            "type": "structure",
            "members": [
                {
                    "name": "taskArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the task.</p>"
                },
                {
                    "name": "clusterArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the of the cluster that hosts the task.</p>"
                },
                {
                    "name": "taskDefinitionArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the of the task definition that creates the task.</p>"
                },
                {
                    "name": "containerInstanceArn",
                    "shape": "String",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the container instances that host the task.</p>"
                },
                {
                    "name": "overrides",
                    "shape": "TaskOverride",
                    "documentation": "<p>One or more container overrides.</p>"
                },
                {
                    "name": "lastStatus",
                    "shape": "String",
                    "documentation": "<p>The last known status of the task.</p>"
                },
                {
                    "name": "desiredStatus",
                    "shape": "String",
                    "documentation": "<p>The desired status of the task.</p>"
                },
                {
                    "name": "containers",
                    "shape": "Containers",
                    "documentation": "<p>The containers associated with the task.</p>"
                },
                {
                    "name": "startedBy",
                    "shape": "String",
                    "documentation": "<p>The tag specified when a task is started. If the task is started by an Amazon ECS service, then the <code>startedBy</code> parameter contains the deployment ID of the service that starts it.</p>"
                }
            ]
        },
        "TaskDefinition": {
            "type": "structure",
            "members": [
                {
                    "name": "taskDefinitionArn",
                    "shape": "String",
                    "documentation": "<p>The full Amazon Resource Name (ARN) of the of the task definition.</p>"
                },
                {
                    "name": "containerDefinitions",
                    "shape": "ContainerDefinitions",
                    "documentation": "<p>A list of container definitions in JSON format that describe the different containers that make up your task. For more information on container definition parameters and defaults, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>"
                },
                {
                    "name": "family",
                    "shape": "String",
                    "documentation": "<p>The family of your task definition. You can think of the <code>family</code> as the name of your task definition.</p>"
                },
                {
                    "name": "revision",
                    "shape": "Integer",
                    "documentation": "<p>The revision of the task in a particular family. You can think of the revision as a version number of a task definition in a family. When you register a task definition for the first time, the revision is <code>1</code>, and each time you register a new revision of a task definition in the same family, the revision value always increases by one (even if you have deregistered previous revisions in this family).</p>"
                },
                {
                    "name": "volumes",
                    "shape": "VolumeList",
                    "documentation": "<p>The list of volumes in a task. For more information on volume definition parameters and defaults, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Amazon ECS Task Definitions</a> in the <i>Amazon EC2 Container Service Developer Guide</i>.</p>"
                },
                {
                    "name": "status",
                    "shape": "TaskDefinitionStatus",
                    "documentation": "<p>The status of the task definition.</p>"
                }
            ]
        },
        "TaskDefinitionStatus": {
            "type": "string"
        },
        "TaskOverride": {
            "type": "structure",
            "members": [
                {
                    "name": "containerOverrides",
                    "shape": "ContainerOverrides",
                    "documentation": "<p>One or more container overrides sent to a task.</p>"
                }
            ]
        },
        "Tasks": {
            "type": "list",
            "of": "Task"
        },
        "Timestamp": {
            "type": "timestamp"
        },
        "TransportProtocol": {
            "type": "string"
        },
        "UpdateContainerAgentRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that your container instance is running on. If you do not specify a cluster, the default cluster is assumed.</p>"
                },
                {
                    "name": "containerInstance",
                    "shape": "String",
                    "documentation": "<p>The container instance UUID or full Amazon Resource Name (ARN) entries for the container instance on which you would like to update the Amazon ECS container agent.</p>"
                }
            ]
        },
        "UpdateContainerAgentResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "containerInstance",
                    "shape": "ContainerInstance"
                }
            ]
        },
        "UpdateInProgressException": {
            "type": "structure",
            "members": []
        },
        "UpdateServiceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "cluster",
                    "shape": "String",
                    "documentation": "<p>The short name or full Amazon Resource Name (ARN) of the cluster that your service is running on. If you do not specify a cluster, the default cluster is assumed.</p>"
                },
                {
                    "name": "service",
                    "shape": "String",
                    "documentation": "<p>The name of the service that you want to update.</p>"
                },
                {
                    "name": "desiredCount",
                    "shape": "BoxedInteger",
                    "documentation": "<p>The number of instantiations of the task that you would like to place and keep running in your service.</p>"
                },
                {
                    "name": "taskDefinition",
                    "shape": "String",
                    "documentation": "<p>The <code>family</code> and <code>revision</code> (<code>family:revision</code>) or full Amazon Resource Name (ARN) of the task definition that you want to run in your service. If a <code>revision</code> is not specified, the latest <code>ACTIVE</code> revision is used. If you modify the task definition with <code>UpdateService</code>, Amazon ECS spawns a task with the new version of the task definition and then stops an old task after the new version is running.</p>"
                }
            ]
        },
        "UpdateServiceResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "service",
                    "shape": "Service",
                    "documentation": "<p>The full description of your service following the update call.</p>"
                }
            ]
        },
        "VersionInfo": {
            "type": "structure",
            "members": [
                {
                    "name": "agentVersion",
                    "shape": "String",
                    "documentation": "<p>The version number of the Amazon ECS container agent.</p>"
                },
                {
                    "name": "agentHash",
                    "shape": "String",
                    "documentation": "<p>The Git commit hash for the Amazon ECS container agent build on the <a href=\"https://github.com/aws/amazon-ecs-agent/commits/master\">amazon-ecs-agent </a> GitHub repository.</p>"
                },
                {
                    "name": "dockerVersion",
                    "shape": "String",
                    "documentation": "<p>The Docker version running on the container instance.</p>"
                }
            ]
        },
        "Volume": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "String",
                    "documentation": "<p>The name of the volume. This name is referenced in the <code>sourceVolume</code> parameter of container definition <code>mountPoints</code>.</p>"
                },
                {
                    "name": "host",
                    "shape": "HostVolumeProperties",
                    "documentation": "<p>The path on the host container instance that is presented to the containers which access the volume. If this parameter is empty, then the Docker daemon assigns a host path for you.</p>"
                }
            ]
        },
        "VolumeFrom": {
            "type": "structure",
            "members": [
                {
                    "name": "sourceContainer",
                    "shape": "String",
                    "documentation": "<p>The name of the container to mount volumes from.</p>"
                },
                {
                    "name": "readOnly",
                    "shape": "BoxedBoolean",
                    "documentation": "<p>If this value is <code>true</code>, the container has read-only access to the volume. If this value is <code>false</code>, then the container can write to the volume. The default value is <code>false</code>.</p>"
                }
            ]
        },
        "VolumeFromList": {
            "type": "list",
            "of": "VolumeFrom"
        },
        "VolumeList": {
            "type": "list",
            "of": "Volume"
        }
    }
}