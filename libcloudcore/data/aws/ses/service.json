{
    "metadata": {
        "namespaces": {
            "": "http://ses.amazonaws.com/doc/2010-12-01/"
        }
    },
    "operations": {
        "DeleteIdentity": {
            "documentation": "<p>Deletes the specified identity (email address or domain) from the list of verified identities.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "DeleteIdentityRequest"
            },
            "output": {
                "shape": "DeleteIdentityResponse"
            }
        },
        "DeleteIdentityPolicy": {
            "documentation": "<p>Deletes the specified sending authorization policy for the given identity (email address or domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "DeleteIdentityPolicyRequest"
            },
            "output": {
                "shape": "DeleteIdentityPolicyResponse"
            }
        },
        "DeleteVerifiedEmailAddress": {
            "documentation": "<p>Deletes the specified email address from the list of verified addresses.</p> <important>The DeleteVerifiedEmailAddress action is deprecated as of the May 15, 2012 release of Domain Verification. The DeleteIdentity action is now preferred.</important> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "DeleteVerifiedEmailAddressRequest"
            }
        },
        "GetIdentityDkimAttributes": {
            "documentation": "<p>Returns the current status of Easy DKIM signing for an entity. For domain name identities, this action also returns the DKIM tokens that are required for Easy DKIM signing, and whether Amazon SES has successfully verified that these tokens have been published.</p> <p>This action takes a list of identities as input and returns the following information for each:</p> <ul> <li>Whether Easy DKIM signing is enabled or disabled.</li> <li>A set of DKIM tokens that represent the identity. If the identity is an email address, the tokens represent the domain of that address.</li> <li>Whether Amazon SES has successfully verified the DKIM tokens published in the domain's DNS. This information is only returned for domain name identities, not for email addresses.</li> </ul> <p>This action is throttled at one request per second and can only get DKIM attributes for up to 100 identities at a time.</p> <p>For more information about creating DNS records using DKIM tokens, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html\">Amazon SES Developer Guide</a>.</p>",
            "input": {
                "shape": "GetIdentityDkimAttributesRequest"
            },
            "output": {
                "shape": "GetIdentityDkimAttributesResponse"
            }
        },
        "GetIdentityNotificationAttributes": {
            "documentation": "<p>Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes.</p> <p>This action is throttled at one request per second and can only get notification attributes for up to 100 identities at a time.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>",
            "input": {
                "shape": "GetIdentityNotificationAttributesRequest"
            },
            "output": {
                "shape": "GetIdentityNotificationAttributesResponse"
            }
        },
        "GetIdentityPolicies": {
            "documentation": "<p>Returns the requested sending authorization policies for the given identity (email address or domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.</p> <note>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "GetIdentityPoliciesRequest"
            },
            "output": {
                "shape": "GetIdentityPoliciesResponse"
            }
        },
        "GetIdentityVerificationAttributes": {
            "documentation": "<p>Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity.</p> <p>This action is throttled at one request per second and can only get verification attributes for up to 100 identities at a time.</p>",
            "input": {
                "shape": "GetIdentityVerificationAttributesRequest"
            },
            "output": {
                "shape": "GetIdentityVerificationAttributesResponse"
            }
        },
        "GetSendQuota": {
            "documentation": "<p>Returns the user's current sending limits.</p> <p>This action is throttled at one request per second.</p>",
            "output": {
                "shape": "GetSendQuotaResponse"
            }
        },
        "GetSendStatistics": {
            "documentation": "<p>Returns the user's sending statistics. The result is a list of data points, representing the last two weeks of sending activity. </p> <p>Each data point in the list contains statistics for a 15-minute interval.</p> <p>This action is throttled at one request per second.</p>",
            "output": {
                "shape": "GetSendStatisticsResponse"
            }
        },
        "ListIdentities": {
            "documentation": "<p>Returns a list containing all of the identities (email addresses and domains) for a specific AWS Account, regardless of verification status.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "ListIdentitiesRequest"
            },
            "output": {
                "shape": "ListIdentitiesResponse"
            }
        },
        "ListIdentityPolicies": {
            "documentation": "<p>Returns a list of sending authorization policies that are attached to the given identity (email address or domain). This API returns only a list. If you want the actual policy content, you can use <code>GetIdentityPolicies</code>.</p> <note>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "ListIdentityPoliciesRequest"
            },
            "output": {
                "shape": "ListIdentityPoliciesResponse"
            }
        },
        "ListVerifiedEmailAddresses": {
            "documentation": "<p>Returns a list containing all of the email addresses that have been verified.</p> <important>The ListVerifiedEmailAddresses action is deprecated as of the May 15, 2012 release of Domain Verification. The ListIdentities action is now preferred.</important> <p>This action is throttled at one request per second.</p>",
            "output": {
                "shape": "ListVerifiedEmailAddressesResponse"
            }
        },
        "PutIdentityPolicy": {
            "documentation": "<p>Adds or updates a sending authorization policy for the specified identity (email address or domain).</p> <note>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "PutIdentityPolicyRequest"
            },
            "output": {
                "shape": "PutIdentityPolicyResponse"
            }
        },
        "SendEmail": {
            "documentation": "<p>Composes an email message based on input data, and then immediately queues the message for sending. </p> <p>There are several important points to know about <code>SendEmail</code>:</p> <ul> <li>You can only send email from verified email addresses and domains; otherwise, you will get an \"Email address not verified\" error. If your account is still in the Amazon SES sandbox, you must also verify every recipient email address except for the recipients provided by the Amazon SES mailbox simulator. For more information, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Amazon SES Developer Guide</a>.</li> <li>The total size of the message cannot exceed 10 MB. This includes any attachments that are part of the message.</li> <li>Amazon SES has a limit on the total number of recipients per message. The combined number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.</li> <li>For every message that you send, the total number of recipients (To:, CC: and BCC:) is counted against your sending quota - the maximum number of emails you can send in a 24-hour period. For information about your sending quota, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html\">Amazon SES Developer Guide</a>.</li> </ul>",
            "input": {
                "shape": "SendEmailRequest"
            },
            "output": {
                "shape": "SendEmailResponse"
            }
        },
        "SendRawEmail": {
            "documentation": "<p>Sends an email message, with header and content specified by the client. The <code>SendRawEmail</code> action is useful for sending multipart MIME emails. The raw text of the message must comply with Internet email standards; otherwise, the message cannot be sent. </p> <p>There are several important points to know about <code>SendRawEmail</code>:</p> <ul> <li>You can only send email from verified email addresses and domains; otherwise, you will get an \"Email address not verified\" error. If your account is still in the Amazon SES sandbox, you must also verify every recipient email address except for the recipients provided by the Amazon SES mailbox simulator. For more information, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Amazon SES Developer Guide</a>.</li> <li>The total size of the message cannot exceed 10 MB. This includes any attachments that are part of the message.</li> <li>Amazon SES has a limit on the total number of recipients per message. The combined number of To:, CC: and BCC: email addresses cannot exceed 50. If you need to send an email message to a larger audience, you can divide your recipient list into groups of 50 or fewer, and then call Amazon SES repeatedly to send the message to each group.</li> <li>The To:, CC:, and BCC: headers in the raw message can contain a group list. Note that each recipient in a group list counts towards the 50-recipient limit.</li> <li>For every message that you send, the total number of recipients (To:, CC: and BCC:) is counted against your sending quota - the maximum number of emails you can send in a 24-hour period. For information about your sending quota, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/manage-sending-limits.html\">Amazon SES Developer Guide</a>.</li> <li>If you are using sending authorization to send on behalf of another user, <code>SendRawEmail</code> enables you to specify the cross-account identity for the email's \"Source,\" \"From,\" and \"Return-Path\" parameters in one of two ways: you can pass optional parameters <code>SourceArn</code>, <code>FromArn</code>, and/or <code>ReturnPathArn</code> to the API, or you can include the following X-headers in the header of your raw email: <ul> <li><code>X-SES-SOURCE-ARN</code></li> <li><code>X-SES-FROM-ARN</code></li> <li><code>X-SES-RETURN-PATH-ARN</code></li> </ul> <important>Do not include these X-headers in the DKIM signature, because they are removed by Amazon SES before sending the email.</important> For the most common sending authorization use case, we recommend that you specify the <code>SourceIdentityArn</code> and do not specify either the <code>FromIdentityArn</code> or <code>ReturnPathIdentityArn</code>. (The same note applies to the corresponding X-headers.) If you only specify the <code>SourceIdentityArn</code>, Amazon SES will simply set the \"From\" address and the \"Return Path\" address to the identity specified in <code>SourceIdentityArn</code>. For more information about sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</li> </ul>",
            "input": {
                "shape": "SendRawEmailRequest"
            },
            "output": {
                "shape": "SendRawEmailResponse"
            }
        },
        "SetIdentityDkimEnabled": {
            "documentation": "<p>Enables or disables Easy DKIM signing of email sent from an identity:</p> <ul> <li>If Easy DKIM signing is enabled for a domain name identity (e.g., <code>example.com</code>), then Amazon SES will DKIM-sign all email sent by addresses under that domain name (e.g., <code>user@example.com</code>).</li> <li>If Easy DKIM signing is enabled for an email address, then Amazon SES will DKIM-sign all email sent by that email address.</li> </ul> <p>For email addresses (e.g., <code>user@example.com</code>), you can only enable Easy DKIM signing if the corresponding domain (e.g., <code>example.com</code>) has been set up for Easy DKIM using the AWS Console or the <code>VerifyDomainDkim</code> action.</p> <p>This action is throttled at one request per second.</p> <p>For more information about Easy DKIM signing, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">Amazon SES Developer Guide</a>.</p>",
            "input": {
                "shape": "SetIdentityDkimEnabledRequest"
            },
            "output": {
                "shape": "SetIdentityDkimEnabledResponse"
            }
        },
        "SetIdentityFeedbackForwardingEnabled": {
            "documentation": "<p>Given an identity (email address or domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email. Feedback forwarding can only be disabled when Amazon Simple Notification Service (Amazon SNS) topics are specified for both bounces and complaints.</p> <note>Feedback forwarding does not apply to delivery notifications. Delivery notifications are only available through Amazon SNS.</note> <p>This action is throttled at one request per second.</p> <p>For more information about using notifications with Amazon SES, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>",
            "input": {
                "shape": "SetIdentityFeedbackForwardingEnabledRequest"
            },
            "output": {
                "shape": "SetIdentityFeedbackForwardingEnabledResponse"
            }
        },
        "SetIdentityNotificationTopic": {
            "documentation": "<p>Given an identity (email address or domain), sets the Amazon Simple Notification Service (Amazon SNS) topic to which Amazon SES will publish bounce, complaint, and/or delivery notifications for emails sent with that identity as the <code>Source</code>.</p> <note>Unless feedback forwarding is enabled, you must specify Amazon SNS topics for bounce and complaint notifications. For more information, see <code>SetIdentityFeedbackForwardingEnabled</code>. </note> <p>This action is throttled at one request per second.</p> <p>For more information about feedback notification, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/notifications.html\">Amazon SES Developer Guide</a>.</p>",
            "input": {
                "shape": "SetIdentityNotificationTopicRequest"
            },
            "output": {
                "shape": "SetIdentityNotificationTopicResponse"
            }
        },
        "VerifyDomainDkim": {
            "documentation": "<p>Returns a set of DKIM tokens for a domain. DKIM <i>tokens</i> are character strings that represent your domain's identity. Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign email originating from that domain.</p> <p>This action is throttled at one request per second.</p> <p>To enable or disable Easy DKIM signing for a domain, use the <code>SetIdentityDkimEnabled</code> action.</p> <p>For more information about creating DNS records using DKIM tokens, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html\">Amazon SES Developer Guide</a>.</p>",
            "input": {
                "shape": "VerifyDomainDkimRequest"
            },
            "output": {
                "shape": "VerifyDomainDkimResponse"
            }
        },
        "VerifyDomainIdentity": {
            "documentation": "<p>Verifies a domain.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "VerifyDomainIdentityRequest"
            },
            "output": {
                "shape": "VerifyDomainIdentityResponse"
            }
        },
        "VerifyEmailAddress": {
            "documentation": "<p>Verifies an email address. This action causes a confirmation email message to be sent to the specified address.</p> <important>The VerifyEmailAddress action is deprecated as of the May 15, 2012 release of Domain Verification. The VerifyEmailIdentity action is now preferred.</important> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "VerifyEmailAddressRequest"
            }
        },
        "VerifyEmailIdentity": {
            "documentation": "<p>Verifies an email address. This action causes a confirmation email message to be sent to the specified address.</p> <p>This action is throttled at one request per second.</p>",
            "input": {
                "shape": "VerifyEmailIdentityRequest"
            },
            "output": {
                "shape": "VerifyEmailIdentityResponse"
            }
        }
    },
    "shapes": {
        "Address": {
            "type": "string"
        },
        "AddressList": {
            "type": "list",
            "of": "Address"
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "Body": {
            "type": "structure",
            "members": [
                {
                    "name": "Text",
                    "shape": "Content",
                    "documentation": "<p>The content of the message, in text format. Use this for text-based email clients, or clients on high-latency networks (such as mobile devices). </p>"
                },
                {
                    "name": "Html",
                    "shape": "Content",
                    "documentation": "<p>The content of the message, in HTML format. Use this for email clients that can process HTML. You can include clickable links, formatted text, and much more in an HTML message. </p>"
                }
            ]
        },
        "Charset": {
            "type": "string"
        },
        "Content": {
            "type": "structure",
            "members": [
                {
                    "name": "Data",
                    "shape": "MessageData",
                    "documentation": "<p>The textual data of the content.</p>"
                },
                {
                    "name": "Charset",
                    "shape": "Charset",
                    "documentation": "<p>The character set of the content.</p>"
                }
            ]
        },
        "Counter": {
            "type": "long"
        },
        "DeleteIdentityPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity that is associated with the policy that you want to delete. You can specify the identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the policy to be deleted.</p>"
                }
            ]
        },
        "DeleteIdentityPolicyResponse": {
            "type": "structure",
            "members": []
        },
        "DeleteIdentityRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity to be removed from the list of identities for the AWS Account.</p>"
                }
            ]
        },
        "DeleteIdentityResponse": {
            "type": "structure",
            "members": []
        },
        "DeleteVerifiedEmailAddressRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "EmailAddress",
                    "shape": "Address",
                    "documentation": "<p>An email address to be removed from the list of verified addresses.</p>"
                }
            ]
        },
        "Destination": {
            "type": "structure",
            "members": [
                {
                    "name": "ToAddresses",
                    "shape": "AddressList",
                    "documentation": "<p>The To: field(s) of the message.</p>"
                },
                {
                    "name": "CcAddresses",
                    "shape": "AddressList",
                    "documentation": "<p>The CC: field(s) of the message.</p>"
                },
                {
                    "name": "BccAddresses",
                    "shape": "AddressList",
                    "documentation": "<p>The BCC: field(s) of the message.</p>"
                }
            ]
        },
        "DkimAttributes": {
            "type": "map"
        },
        "Domain": {
            "type": "string"
        },
        "Enabled": {
            "type": "boolean"
        },
        "GetIdentityDkimAttributesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identities",
                    "shape": "IdentityList",
                    "documentation": "<p>A list of one or more verified identities - email addresses, domains, or both.</p>"
                }
            ]
        },
        "GetIdentityDkimAttributesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "DkimAttributes",
                    "shape": "DkimAttributes",
                    "documentation": "<p>The DKIM attributes for an email address or a domain. </p>"
                }
            ]
        },
        "GetIdentityNotificationAttributesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identities",
                    "shape": "IdentityList",
                    "documentation": "<p>A list of one or more identities. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>"
                }
            ]
        },
        "GetIdentityNotificationAttributesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "NotificationAttributes",
                    "shape": "NotificationAttributes",
                    "documentation": "<p>A map of Identity to IdentityNotificationAttributes.</p>"
                }
            ]
        },
        "GetIdentityPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity for which the policies will be retrieved. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>"
                },
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNameList",
                    "documentation": "<p>A list of the names of policies to be retrieved. You can retrieve a maximum of 20 policies at a time. If you do not know the names of the policies that are attached to the identity, you can use <code>ListIdentityPolicies</code>.</p>"
                }
            ]
        },
        "GetIdentityPoliciesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "Policies",
                    "shape": "PolicyMap",
                    "documentation": "<p>A map of policy names to policies.</p>"
                }
            ]
        },
        "GetIdentityVerificationAttributesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identities",
                    "shape": "IdentityList",
                    "documentation": "<p>A list of identities.</p>"
                }
            ]
        },
        "GetIdentityVerificationAttributesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "VerificationAttributes",
                    "shape": "VerificationAttributes",
                    "documentation": "<p>A map of Identities to IdentityVerificationAttributes objects.</p>"
                }
            ]
        },
        "GetSendQuotaResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "Max24HourSend",
                    "shape": "Max24HourSend",
                    "documentation": "<p>The maximum number of emails the user is allowed to send in a 24-hour interval. A value of -1 signifies an unlimited quota.</p>"
                },
                {
                    "name": "MaxSendRate",
                    "shape": "MaxSendRate",
                    "documentation": "<p>The maximum number of emails that Amazon SES can accept from the user's account per second.</p> <note>The rate at which Amazon SES accepts the user's messages might be less than the maximum send rate.</note>"
                },
                {
                    "name": "SentLast24Hours",
                    "shape": "SentLast24Hours",
                    "documentation": "<p>The number of emails sent during the previous 24 hours.</p>"
                }
            ]
        },
        "GetSendStatisticsResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "SendDataPoints",
                    "shape": "SendDataPointList",
                    "documentation": "<p>A list of data points, each of which represents 15 minutes of activity.</p>"
                }
            ]
        },
        "Identity": {
            "type": "string"
        },
        "IdentityDkimAttributes": {
            "type": "structure",
            "members": [
                {
                    "name": "DkimEnabled",
                    "shape": "Enabled",
                    "documentation": "<p>True if DKIM signing is enabled for email sent from the identity; false otherwise.</p>"
                },
                {
                    "name": "DkimVerificationStatus",
                    "shape": "VerificationStatus",
                    "documentation": "<p>Describes whether Amazon SES has successfully verified the DKIM DNS records (tokens) published in the domain name's DNS. (This only applies to domain identities, not email address identities.)</p>"
                },
                {
                    "name": "DkimTokens",
                    "shape": "VerificationTokenList",
                    "documentation": "<p>A set of character strings that represent the domain's identity. Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign email originating from that domain. (This only applies to domain identities, not email address identities.)</p> <p>For more information about creating DNS records using DKIM tokens, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html\">Amazon SES Developer Guide</a>.</p>"
                }
            ]
        },
        "IdentityList": {
            "type": "list",
            "of": "Identity"
        },
        "IdentityNotificationAttributes": {
            "type": "structure",
            "members": [
                {
                    "name": "BounceTopic",
                    "shape": "NotificationTopic",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish bounce notifications.</p>"
                },
                {
                    "name": "ComplaintTopic",
                    "shape": "NotificationTopic",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish complaint notifications.</p>"
                },
                {
                    "name": "DeliveryTopic",
                    "shape": "NotificationTopic",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic where Amazon SES will publish delivery notifications.</p>"
                },
                {
                    "name": "ForwardingEnabled",
                    "shape": "Enabled",
                    "documentation": "<p>Describes whether Amazon SES will forward bounce and complaint notifications as email. <code>true</code> indicates that Amazon SES will forward bounce and complaint notifications as email, while <code>false</code> indicates that bounce and complaint notifications will be published only to the specified bounce and complaint Amazon SNS topics.</p>"
                }
            ]
        },
        "IdentityType": {
            "type": "string"
        },
        "IdentityVerificationAttributes": {
            "type": "structure",
            "members": [
                {
                    "name": "VerificationStatus",
                    "shape": "VerificationStatus",
                    "documentation": "<p>The verification status of the identity: \"Pending\", \"Success\", \"Failed\", or \"TemporaryFailure\".</p>"
                },
                {
                    "name": "VerificationToken",
                    "shape": "VerificationToken",
                    "documentation": "<p>The verification token for a domain identity. Null for email address identities.</p>"
                }
            ]
        },
        "InvalidPolicyException": {
            "type": "structure",
            "members": []
        },
        "ListIdentitiesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "IdentityType",
                    "shape": "IdentityType",
                    "documentation": "<p>The type of the identities to list. Possible values are \"EmailAddress\" and \"Domain\". If this parameter is omitted, then all identities will be listed.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "NextToken",
                    "documentation": "<p>The token to use for pagination.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "MaxItems",
                    "documentation": "<p>The maximum number of identities per page. Possible values are 1-1000 inclusive.</p>"
                }
            ]
        },
        "ListIdentitiesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "Identities",
                    "shape": "IdentityList",
                    "documentation": "<p>A list of identities.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "NextToken",
                    "documentation": "<p>The token used for pagination.</p>"
                }
            ]
        },
        "ListIdentityPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity that is associated with the policy for which the policies will be listed. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>"
                }
            ]
        },
        "ListIdentityPoliciesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNameList",
                    "documentation": "<p>A list of names of policies that apply to the specified identity.</p>"
                }
            ]
        },
        "ListVerifiedEmailAddressesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "VerifiedEmailAddresses",
                    "shape": "AddressList",
                    "documentation": "<p>A list of email addresses that have been verified.</p>"
                }
            ]
        },
        "Max24HourSend": {
            "type": "double"
        },
        "MaxItems": {
            "type": "integer"
        },
        "MaxSendRate": {
            "type": "double"
        },
        "Message": {
            "type": "structure",
            "members": [
                {
                    "name": "Subject",
                    "shape": "Content",
                    "documentation": "<p>The subject of the message: A short summary of the content, which will appear in the recipient's inbox.</p>"
                },
                {
                    "name": "Body",
                    "shape": "Body",
                    "documentation": "<p>The message body.</p>"
                }
            ]
        },
        "MessageData": {
            "type": "string"
        },
        "MessageId": {
            "type": "string"
        },
        "MessageRejected": {
            "type": "structure",
            "members": []
        },
        "NextToken": {
            "type": "string"
        },
        "NotificationAttributes": {
            "type": "map"
        },
        "NotificationTopic": {
            "type": "string"
        },
        "NotificationType": {
            "type": "string"
        },
        "Policy": {
            "type": "string"
        },
        "PolicyMap": {
            "type": "map"
        },
        "PolicyName": {
            "type": "string"
        },
        "PolicyNameList": {
            "type": "list",
            "of": "PolicyName"
        },
        "PutIdentityPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity to which the policy will apply. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> <p>To successfully call this API, you must own the identity.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>"
                },
                {
                    "name": "Policy",
                    "shape": "Policy",
                    "documentation": "<p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html\">Amazon SES Developer Guide</a>. </p>"
                }
            ]
        },
        "PutIdentityPolicyResponse": {
            "type": "structure",
            "members": []
        },
        "RawMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Data",
                    "shape": "RawMessageData",
                    "documentation": "<p>The raw data of the message. The client must ensure that the message format complies with Internet email standards regarding email header fields, MIME types, MIME encoding, and base64 encoding (if necessary). </p> <p>The To:, CC:, and BCC: headers in the raw message can contain a group list. </p> <p>If you are using <code>SendRawEmail</code> with sending authorization, you can include X-headers in the raw message to specify the \"Source,\" \"From,\" and \"Return-Path\" addresses. For more information, see the documentation for <code>SendRawEmail</code>. </p> <important>Do not include these X-headers in the DKIM signature, because they are removed by Amazon SES before sending the email.</important> <p>For more information, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-raw.html\">Amazon SES Developer Guide</a>. </p>"
                }
            ]
        },
        "RawMessageData": {
            "type": "blob"
        },
        "SendDataPoint": {
            "type": "structure",
            "members": [
                {
                    "name": "Timestamp",
                    "shape": "Timestamp",
                    "documentation": "<p>Time of the data point.</p>"
                },
                {
                    "name": "DeliveryAttempts",
                    "shape": "Counter",
                    "documentation": "<p>Number of emails that have been enqueued for sending.</p>"
                },
                {
                    "name": "Bounces",
                    "shape": "Counter",
                    "documentation": "<p>Number of emails that have bounced.</p>"
                },
                {
                    "name": "Complaints",
                    "shape": "Counter",
                    "documentation": "<p>Number of unwanted emails that were rejected by recipients.</p>"
                },
                {
                    "name": "Rejects",
                    "shape": "Counter",
                    "documentation": "<p>Number of emails rejected by Amazon SES.</p>"
                }
            ]
        },
        "SendDataPointList": {
            "type": "list",
            "of": "SendDataPoint"
        },
        "SendEmailRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Source",
                    "shape": "Address",
                    "documentation": "<p>The email address that is sending the email. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. For information about verifying identities, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-addresses-and-domains.html\">Amazon SES Developer Guide</a>.</p> <p>If you are sending on behalf of another user and have been permitted to do so by a sending authorization policy, then you must also specify the <code>SourceArn</code> parameter. For more information about sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>.</p> <p> In all cases, the email address must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>. For more information, see <a href=\"http://tools.ietf.org/html/rfc2047\">RFC 2047</a>. </p>"
                },
                {
                    "name": "Destination",
                    "shape": "Destination",
                    "documentation": "<p>The destination for this email, composed of To:, CC:, and BCC: fields.</p>"
                },
                {
                    "name": "Message",
                    "shape": "Message",
                    "documentation": "<p>The message to be sent.</p>"
                },
                {
                    "name": "ReplyToAddresses",
                    "shape": "AddressList",
                    "documentation": "<p>The reply-to email address(es) for the message. If the recipient replies to the message, each reply-to address will receive the reply. </p>"
                },
                {
                    "name": "ReturnPath",
                    "shape": "Address",
                    "documentation": "<p>The email address to which bounces and complaints are to be forwarded when feedback forwarding is enabled. If the message cannot be delivered to the recipient, then an error message will be returned from the recipient's ISP; this message will then be forwarded to the email address specified by the <code>ReturnPath</code> parameter. The <code>ReturnPath</code> parameter is never overwritten. This email address must be either individually verified with Amazon SES, or from a domain that has been verified with Amazon SES. </p>"
                },
                {
                    "name": "SourceArn",
                    "shape": "AmazonResourceName",
                    "documentation": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the <code>Source</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to send from <code>user@example.com</code>, then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>Source</code> to be <code>user@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>. </p>"
                },
                {
                    "name": "ReturnPathArn",
                    "shape": "AmazonResourceName",
                    "documentation": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>ReturnPath</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to use <code>feedback@example.com</code>, then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</p> <p>For more information about sending authorization, see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html\">Amazon SES Developer Guide</a>. </p>"
                }
            ]
        },
        "SendEmailResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "MessageId",
                    "shape": "MessageId",
                    "documentation": "<p>The unique message identifier returned from the <code>SendEmail</code> action. </p>"
                }
            ]
        },
        "SendRawEmailRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Source",
                    "shape": "Address",
                    "documentation": "<p>The identity's email address. If you do not provide a value for this parameter, you must specify a \"From\" address in the raw text of the message. (You can also specify both.)</p> <p> By default, the string must be 7-bit ASCII. If the text must contain any other characters, then you must use MIME encoded-word syntax (RFC 2047) instead of a literal string. MIME encoded-word syntax uses the following form: <code>=?charset?encoding?encoded-text?=</code>. For more information, see <a href=\"http://tools.ietf.org/html/rfc2047\">RFC 2047</a>. </p> <note>If you specify the <code>Source</code> parameter and have feedback forwarding enabled, then bounces and complaints will be sent to this email address. This takes precedence over any <i>Return-Path</i> header that you might include in the raw text of the message. </note>"
                },
                {
                    "name": "Destinations",
                    "shape": "AddressList",
                    "documentation": "<p>A list of destinations for the message, consisting of To:, CC:, and BCC: addresses.</p>"
                },
                {
                    "name": "RawMessage",
                    "shape": "RawMessage",
                    "documentation": "<p>The raw text of the message. The client is responsible for ensuring the following:</p> <p> <ul> <li>Message must contain a header and a body, separated by a blank line.</li> <li>All required header fields must be present.</li> <li>Each part of a multipart MIME message must be formatted properly.</li> <li>MIME content types must be among those supported by Amazon SES. For more information, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types.html\">Amazon SES Developer Guide</a>. </li> <li>Content must be base64-encoded, if MIME requires it.</li> </ul> </p>"
                },
                {
                    "name": "FromArn",
                    "shape": "AmazonResourceName",
                    "documentation": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to specify a particular \"From\" address in the header of the raw email.</p> <p>Instead of using this parameter, you can use the X-header <code>X-SES-FROM-ARN</code> in the raw message of the email. If you use both the <code>FromArn</code> parameter and the corresponding X-header, Amazon SES uses the value of the <code>FromArn</code> parameter.</p> <note>For information about when to use this parameter, see the description of <code>SendRawEmail</code> in this guide, or see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html\">Amazon SES Developer Guide</a>. </note>"
                },
                {
                    "name": "SourceArn",
                    "shape": "AmazonResourceName",
                    "documentation": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to send for the email address specified in the <code>Source</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to send from <code>user@example.com</code>, then you would specify the <code>SourceArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>Source</code> to be <code>user@example.com</code>.</p> <p>Instead of using this parameter, you can use the X-header <code>X-SES-SOURCE-ARN</code> in the raw message of the email. If you use both the <code>SourceArn</code> parameter and the corresponding X-header, Amazon SES uses the value of the <code>SourceArn</code> parameter.</p> <note>For information about when to use this parameter, see the description of <code>SendRawEmail</code> in this guide, or see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html\">Amazon SES Developer Guide</a>. </note>"
                },
                {
                    "name": "ReturnPathArn",
                    "shape": "AmazonResourceName",
                    "documentation": "<p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>ReturnPath</code> parameter.</p> <p>For example, if the owner of <code>example.com</code> (which has ARN <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>) attaches a policy to it that authorizes you to use <code>feedback@example.com</code>, then you would specify the <code>ReturnPathArn</code> to be <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>, and the <code>ReturnPath</code> to be <code>feedback@example.com</code>.</p> <p>Instead of using this parameter, you can use the X-header <code>X-SES-RETURN-PATH-ARN</code> in the raw message of the email. If you use both the <code>ReturnPathArn</code> parameter and the corresponding X-header, Amazon SES uses the value of the <code>ReturnPathArn</code> parameter.</p> <note>For information about when to use this parameter, see the description of <code>SendRawEmail</code> in this guide, or see the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-delegate-sender-tasks-email.html\">Amazon SES Developer Guide</a>. </note>"
                }
            ]
        },
        "SendRawEmailResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "MessageId",
                    "shape": "MessageId",
                    "documentation": "<p>The unique message identifier returned from the <code>SendRawEmail</code> action. </p>"
                }
            ]
        },
        "SentLast24Hours": {
            "type": "double"
        },
        "SetIdentityDkimEnabledRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity for which DKIM signing should be enabled or disabled.</p>"
                },
                {
                    "name": "DkimEnabled",
                    "shape": "Enabled",
                    "documentation": "<p>Sets whether DKIM signing is enabled for an identity. Set to <code>true</code> to enable DKIM signing for this identity; <code>false</code> to disable it. </p>"
                }
            ]
        },
        "SetIdentityDkimEnabledResponse": {
            "type": "structure",
            "members": []
        },
        "SetIdentityFeedbackForwardingEnabledRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity for which to set bounce and complaint notification forwarding. Examples: <code>user@example.com</code>, <code>example.com</code>.</p>"
                },
                {
                    "name": "ForwardingEnabled",
                    "shape": "Enabled",
                    "documentation": "<p>Sets whether Amazon SES will forward bounce and complaint notifications as email. <code>true</code> specifies that Amazon SES will forward bounce and complaint notifications as email, in addition to any Amazon SNS topic publishing otherwise specified. <code>false</code> specifies that Amazon SES will publish bounce and complaint notifications only through Amazon SNS. This value can only be set to <code>false</code> when Amazon SNS topics are set for both <code>Bounce</code> and <code>Complaint</code> notification types.</p>"
                }
            ]
        },
        "SetIdentityFeedbackForwardingEnabledResponse": {
            "type": "structure",
            "members": []
        },
        "SetIdentityNotificationTopicRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Identity",
                    "shape": "Identity",
                    "documentation": "<p>The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>"
                },
                {
                    "name": "NotificationType",
                    "shape": "NotificationType",
                    "documentation": "<p>The type of notifications that will be published to the specified Amazon SNS topic.</p>"
                },
                {
                    "name": "SnsTopic",
                    "shape": "NotificationTopic",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing is disabled.</p>"
                }
            ]
        },
        "SetIdentityNotificationTopicResponse": {
            "type": "structure",
            "members": []
        },
        "Timestamp": {
            "type": "timestamp"
        },
        "VerificationAttributes": {
            "type": "map"
        },
        "VerificationStatus": {
            "type": "string"
        },
        "VerificationToken": {
            "type": "string"
        },
        "VerificationTokenList": {
            "type": "list",
            "of": "VerificationToken"
        },
        "VerifyDomainDkimRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Domain",
                    "shape": "Domain",
                    "documentation": "<p>The name of the domain to be verified for Easy DKIM signing.</p>"
                }
            ]
        },
        "VerifyDomainDkimResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "DkimTokens",
                    "shape": "VerificationTokenList",
                    "documentation": "<p>A set of character strings that represent the domain's identity. If the identity is an email address, the tokens represent the domain of that address.</p> <p>Using these tokens, you will need to create DNS CNAME records that point to DKIM public keys hosted by Amazon SES. Amazon Web Services will eventually detect that you have updated your DNS records; this detection process may take up to 72 hours. Upon successful detection, Amazon SES will be able to DKIM-sign emails originating from that domain.</p> <p>For more information about creating DNS records using DKIM tokens, go to the <a href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html\">Amazon SES Developer Guide</a>.</p>"
                }
            ]
        },
        "VerifyDomainIdentityRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Domain",
                    "shape": "Domain",
                    "documentation": "<p>The domain to be verified.</p>"
                }
            ]
        },
        "VerifyDomainIdentityResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "VerificationToken",
                    "shape": "VerificationToken",
                    "documentation": "<p>A TXT record that must be placed in the DNS settings for the domain, in order to complete domain verification.</p>"
                }
            ]
        },
        "VerifyEmailAddressRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "EmailAddress",
                    "shape": "Address",
                    "documentation": "<p>The email address to be verified.</p>"
                }
            ]
        },
        "VerifyEmailIdentityRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "EmailAddress",
                    "shape": "Address",
                    "documentation": "<p>The email address to be verified.</p>"
                }
            ]
        },
        "VerifyEmailIdentityResponse": {
            "type": "structure",
            "members": []
        }
    }
}