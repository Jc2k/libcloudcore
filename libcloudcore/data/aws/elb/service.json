{
    "metadata": {
        "namespaces": {
            "": "http://elasticloadbalancing.amazonaws.com/doc/2012-06-01/"
        }
    },
    "endpoints": [
        {
            "when": [
                [
                    "region",
                    "starts-with",
                    "cn-"
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com.cn"
            }
        },
        {
            "when": [
                [
                    "region",
                    "not-equals",
                    null
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com"
            }
        }
    ],
    "operations": {
        "AddTags": {
            "documentation": "<p>Adds the specified tags to the specified load balancer. Each load balancer can have a maximum of 10 tags.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the load balancer, <code>AddTags</code> updates its value.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/add-remove-tags.html\">Tag Your Load Balancer</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "AddTagsInput"
            },
            "output": {
                "shape": "AddTagsOutput"
            }
        },
        "ApplySecurityGroupsToLoadBalancer": {
            "documentation": "<p>Associates one or more security groups with your load balancer in a virtual private cloud (VPC). The specified security groups override the previously associated security groups.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-security-groups.html#elb-vpc-security-groups\">Security Groups for Load Balancers in a VPC</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "ApplySecurityGroupsToLoadBalancerInput"
            },
            "output": {
                "shape": "ApplySecurityGroupsToLoadBalancerOutput"
            }
        },
        "AttachLoadBalancerToSubnets": {
            "documentation": "<p>Adds one or more subnets to the set of configured subnets for the specified load balancer.</p> <p>The load balancer evenly distributes requests across all registered subnets. For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-manage-subnets.html\">Add or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "AttachLoadBalancerToSubnetsInput"
            },
            "output": {
                "shape": "AttachLoadBalancerToSubnetsOutput"
            }
        },
        "ConfigureHealthCheck": {
            "documentation": "<p>Specifies the health check settings to use when evaluating the health state of your back-end instances.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-healthchecks.html\">Configure Health Checks</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "ConfigureHealthCheckInput"
            },
            "output": {
                "shape": "ConfigureHealthCheckOutput"
            }
        },
        "CreateAppCookieStickinessPolicy": {
            "documentation": "<p>Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>This policy is similar to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except that the lifetime of the special Elastic Load Balancing cookie, <code>AWSELB</code>, follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer only inserts a new stickiness cookie when the application response includes a new application cookie.</p> <p>If the application cookie is explicitly removed or expires, the session stops being sticky until a new application cookie is issued.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-sticky-sessions.html#enable-sticky-sessions-application\">Application-Controlled Session Stickiness</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "CreateAppCookieStickinessPolicyInput"
            },
            "output": {
                "shape": "CreateAppCookieStickinessPolicyOutput"
            }
        },
        "CreateLBCookieStickinessPolicy": {
            "documentation": "<p>Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.</p> <p>When a load balancer implements this policy, the load balancer uses a special cookie to track the back-end server instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm.</p> <p>A cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-sticky-sessions.html#enable-sticky-sessions-duration\">Duration-Based Session Stickiness</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "CreateLBCookieStickinessPolicyInput"
            },
            "output": {
                "shape": "CreateLBCookieStickinessPolicyOutput"
            }
        },
        "CreateLoadBalancer": {
            "documentation": "<p>Creates a load balancer.</p> <p>If the call completes successfully, a new load balancer is created with a unique Domain Name Service (DNS) name. The load balancer receives incoming traffic and routes it to the registered instances. For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/how-elb-works.html\">How Elastic Load Balancing Works</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p> <p>You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-limits.html\">Elastic Load Balancing Limits</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "CreateAccessPointInput"
            },
            "output": {
                "shape": "CreateAccessPointOutput"
            }
        },
        "CreateLoadBalancerListeners": {
            "documentation": "<p>Creates one or more listeners for the specified load balancer. If a listener with the specified port does not already exist, it is created; otherwise, the properties of the new listener must match the properties of the existing listener.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/us-add-listener.html\">Add a Listener to Your Load Balancer</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "CreateLoadBalancerListenerInput"
            },
            "output": {
                "shape": "CreateLoadBalancerListenerOutput"
            }
        },
        "CreateLoadBalancerPolicy": {
            "documentation": "<p>Creates a policy with the specified attributes for the specified load balancer.</p> <p>Policies are settings that are saved for your load balancer and that can be applied to the front-end listener or the back-end application server, depending on the policy type.</p>",
            "input": {
                "shape": "CreateLoadBalancerPolicyInput"
            },
            "output": {
                "shape": "CreateLoadBalancerPolicyOutput"
            }
        },
        "DeleteLoadBalancer": {
            "documentation": "<p>Deletes the specified load balancer.</p> <p>If you are attempting to recreate a load balancer, you must reconfigure all settings. The DNS name associated with a deleted load balancer are no longer usable. The name and associated DNS record of the deleted load balancer no longer exist and traffic sent to any of its IP addresses is no longer delivered to back-end instances.</p> <p>If the load balancer does not exist or has already been deleted, the call to <code>DeleteLoadBalancer</code> still succeeds.</p>",
            "input": {
                "shape": "DeleteAccessPointInput"
            },
            "output": {
                "shape": "DeleteAccessPointOutput"
            }
        },
        "DeleteLoadBalancerListeners": {
            "documentation": "<p>Deletes the specified listeners from the specified load balancer.</p>",
            "input": {
                "shape": "DeleteLoadBalancerListenerInput"
            },
            "output": {
                "shape": "DeleteLoadBalancerListenerOutput"
            }
        },
        "DeleteLoadBalancerPolicy": {
            "documentation": "<p>Deletes the specified policy from the specified load balancer. This policy must not be enabled for any listeners.</p>",
            "input": {
                "shape": "DeleteLoadBalancerPolicyInput"
            },
            "output": {
                "shape": "DeleteLoadBalancerPolicyOutput"
            }
        },
        "DeregisterInstancesFromLoadBalancer": {
            "documentation": "<p>Deregisters the specified instances from the specified load balancer. After the instance is deregistered, it no longer receives traffic from the load balancer.</p> <p>You can use <a>DescribeLoadBalancers</a> to verify that the instance is deregistered from the load balancer.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_DeReg_Reg_Instances.html\">Deregister and Register Amazon EC2 Instances</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "DeregisterEndPointsInput"
            },
            "output": {
                "shape": "DeregisterEndPointsOutput"
            }
        },
        "DescribeInstanceHealth": {
            "documentation": "<p>Describes the state of the specified instances registered with the specified load balancer. If no instances are specified, the call describes the state of all instances registered with the load balancer, not including any terminated instances.</p>",
            "input": {
                "shape": "DescribeEndPointStateInput"
            },
            "output": {
                "shape": "DescribeEndPointStateOutput"
            }
        },
        "DescribeLoadBalancerAttributes": {
            "documentation": "<p>Describes the attributes for the specified load balancer.</p>",
            "input": {
                "shape": "DescribeLoadBalancerAttributesInput"
            },
            "output": {
                "shape": "DescribeLoadBalancerAttributesOutput"
            }
        },
        "DescribeLoadBalancerPolicies": {
            "documentation": "<p>Describes the specified policies.</p> <p>If you specify a load balancer name, the action returns the descriptions of all policies created for the load balancer. If you specify a policy name associated with your load balancer, the action returns the description of that policy. If you don't specify a load balancer name, the action returns descriptions of the specified sample policies, or descriptions of all sample policies. The names of the sample policies have the <code>ELBSample-</code> prefix.</p>",
            "input": {
                "shape": "DescribeLoadBalancerPoliciesInput"
            },
            "output": {
                "shape": "DescribeLoadBalancerPoliciesOutput"
            }
        },
        "DescribeLoadBalancerPolicyTypes": {
            "documentation": "<p>Describes the specified load balancer policy types.</p> <p>You can use these policy types with <a>CreateLoadBalancerPolicy</a> to create policy configurations for a load balancer.</p>",
            "input": {
                "shape": "DescribeLoadBalancerPolicyTypesInput"
            },
            "output": {
                "shape": "DescribeLoadBalancerPolicyTypesOutput"
            }
        },
        "DescribeLoadBalancers": {
            "documentation": "<p>Describes the specified the load balancers. If no load balancers are specified, the call describes all of your load balancers.</p>",
            "input": {
                "shape": "DescribeAccessPointsInput"
            },
            "output": {
                "shape": "DescribeAccessPointsOutput"
            }
        },
        "DescribeTags": {
            "documentation": "<p>Describes the tags associated with the specified load balancers.</p>",
            "input": {
                "shape": "DescribeTagsInput"
            },
            "output": {
                "shape": "DescribeTagsOutput"
            }
        },
        "DetachLoadBalancerFromSubnets": {
            "documentation": "<p>Removes the specified subnets from the set of configured subnets for the load balancer.</p> <p>After a subnet is removed, all EC2 instances registered with the load balancer in the removed subnet go into the <code>OutOfService</code> state. Then, the load balancer balances the traffic among the remaining routable subnets.</p>",
            "input": {
                "shape": "DetachLoadBalancerFromSubnetsInput"
            },
            "output": {
                "shape": "DetachLoadBalancerFromSubnetsOutput"
            }
        },
        "DisableAvailabilityZonesForLoadBalancer": {
            "documentation": "<p>Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer.</p> <p>There must be at least one Availability Zone registered with a load balancer at all times. After an Availability Zone is removed, all instances registered with the load balancer that are in the removed Availability Zone go into the <code>OutOfService</code> state. Then, the load balancer attempts to equally balance the traffic among its remaining Availability Zones.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_ShrinkLBApp04.html\">Disable an Availability Zone from a Load-Balanced Application</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "RemoveAvailabilityZonesInput"
            },
            "output": {
                "shape": "RemoveAvailabilityZonesOutput"
            }
        },
        "EnableAvailabilityZonesForLoadBalancer": {
            "documentation": "<p>Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer.</p> <p>The load balancer evenly distributes requests across all its registered Availability Zones that contain instances.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_AddLBAvailabilityZone.html\">Add Availability Zone</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "AddAvailabilityZonesInput"
            },
            "output": {
                "shape": "AddAvailabilityZonesOutput"
            }
        },
        "ModifyLoadBalancerAttributes": {
            "documentation": "<p>Modifies the attributes of the specified load balancer.</p> <p>You can modify the load balancer attributes, such as <code>AccessLogs</code>, <code>ConnectionDraining</code>, and <code>CrossZoneLoadBalancing</code> by either enabling or disabling them. Or, you can modify the load balancer attribute <code>ConnectionSettings</code> by specifying an idle connection timeout value for your load balancer.</p> <p>For more information, see the following in the <i>Elastic Load Balancing Developer Guide</i>:</p> <ul> <li><a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#request-routing\">Cross-Zone Load Balancing</a></li> <li><a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#conn-drain\">Connection Draining</a></li> <li><a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/access-log-collection.html\">Access Logs</a></li> <li><a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#idle-timeout\">Idle Connection Timeout</a></li> </ul>",
            "input": {
                "shape": "ModifyLoadBalancerAttributesInput"
            },
            "output": {
                "shape": "ModifyLoadBalancerAttributesOutput"
            }
        },
        "RegisterInstancesWithLoadBalancer": {
            "documentation": "<p>Adds the specified instances to the specified load balancer.</p> <p>The instance must be a running instance in the same network as the load balancer (EC2-Classic or the same VPC). If you have EC2-Classic instances and a load balancer in a VPC with ClassicLink enabled, you can link the EC2-Classic instances to that VPC and then register the linked EC2-Classic instances with the load balancer in the VPC.</p> <p>Note that <code>RegisterInstanceWithLoadBalancer</code> completes when the request has been registered. Instance registration happens shortly afterwards. To check the state of the registered instances, use <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>.</p> <p>After the instance is registered, it starts receiving traffic and requests from the load balancer. Any instance that is not in one of the Availability Zones registered for the load balancer is moved to the <code>OutOfService</code> state. If an Availability Zone is added to the load balancer later, any instances registered with the load balancer move to the <code>InService</code> state.</p> <p>If you stop an instance registered with a load balancer and then start it, the IP addresses associated with the instance changes. Elastic Load Balancing cannot recognize the new IP address, which prevents it from routing traffic to the instances. We recommend that you use the following sequence: stop the instance, deregister the instance, start the instance, and then register the instance. To deregister instances from a load balancer, use <a>DeregisterInstancesFromLoadBalancer</a>.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_DeReg_Reg_Instances.html\">Deregister and Register EC2 Instances</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "RegisterEndPointsInput"
            },
            "output": {
                "shape": "RegisterEndPointsOutput"
            }
        },
        "RemoveTags": {
            "documentation": "<p>Removes one or more tags from the specified load balancer.</p>",
            "input": {
                "shape": "RemoveTagsInput"
            },
            "output": {
                "shape": "RemoveTagsOutput"
            }
        },
        "SetLoadBalancerListenerSSLCertificate": {
            "documentation": "<p>Sets the certificate that terminates the specified listener's SSL connections. The specified certificate replaces any prior certificate that was used on the same load balancer and port.</p> <p>For more information about updating your SSL certificate, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/US_UpdatingLoadBalancerSSL.html\">Updating an SSL Certificate for a Load Balancer</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>",
            "input": {
                "shape": "SetLoadBalancerListenerSSLCertificateInput"
            },
            "output": {
                "shape": "SetLoadBalancerListenerSSLCertificateOutput"
            }
        },
        "SetLoadBalancerPoliciesForBackendServer": {
            "documentation": "<p>Replaces the set of policies associated with the specified port on which the back-end server is listening with a new set of policies. At this time, only the back-end server authentication policy type can be applied to the back-end ports; this policy type is composed of multiple public key policies.</p> <p>Each time you use <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the policies, use the <code>PolicyNames</code> parameter to list the policies that you want to enable.</p> <p>You can use <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to verify that the policy is associated with the back-end server.</p>",
            "input": {
                "shape": "SetLoadBalancerPoliciesForBackendServerInput"
            },
            "output": {
                "shape": "SetLoadBalancerPoliciesForBackendServerOutput"
            }
        },
        "SetLoadBalancerPoliciesOfListener": {
            "documentation": "<p>Associates, updates, or disables a policy with a listener for the specified load balancer. You can associate multiple policies with a listener.</p>",
            "input": {
                "shape": "SetLoadBalancerPoliciesOfListenerInput"
            },
            "output": {
                "shape": "SetLoadBalancerPoliciesOfListenerOutput"
            }
        }
    },
    "shapes": {
        "AccessLog": {
            "type": "structure",
            "members": [
                {
                    "name": "Enabled",
                    "shape": "AccessLogEnabled",
                    "documentation": "<p>Specifies whether access log is enabled for the load balancer.</p>"
                },
                {
                    "name": "S3BucketName",
                    "shape": "S3BucketName",
                    "documentation": "<p>The name of the Amazon S3 bucket where the access logs are stored.</p>"
                },
                {
                    "name": "EmitInterval",
                    "shape": "AccessLogInterval",
                    "documentation": "<p>The interval for publishing the access logs. You can specify an interval of either 5 minutes or 60 minutes.</p> <p>Default: 60 minutes</p>"
                },
                {
                    "name": "S3BucketPrefix",
                    "shape": "AccessLogPrefix",
                    "documentation": "<p>The logical hierarchy you created for your Amazon S3 bucket, for example <code>my-bucket-prefix/prod</code>. If the prefix is not provided, the log is placed at the root level of the bucket.</p>"
                }
            ]
        },
        "AccessLogEnabled": {
            "type": "boolean"
        },
        "AccessLogInterval": {
            "type": "integer"
        },
        "AccessLogPrefix": {
            "type": "string"
        },
        "AccessPointName": {
            "type": "string"
        },
        "AccessPointNotFoundException": {
            "type": "structure",
            "members": []
        },
        "AccessPointPort": {
            "type": "integer"
        },
        "AddAvailabilityZonesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>The Availability Zones. These must be in the same region as the load balancer.</p>"
                }
            ]
        },
        "AddAvailabilityZonesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>The updated list of Availability Zones for the load balancer.</p>"
                }
            ]
        },
        "AddTagsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerNames",
                    "shape": "LoadBalancerNames",
                    "documentation": "<p>The name of the load balancer. You can specify one load balancer only.</p>"
                },
                {
                    "name": "Tags",
                    "shape": "TagList",
                    "documentation": "<p>The tags.</p>"
                }
            ]
        },
        "AddTagsOutput": {
            "type": "structure",
            "members": []
        },
        "AdditionalAttribute": {
            "type": "structure",
            "members": [
                {
                    "name": "Key",
                    "shape": "StringVal",
                    "documentation": "<p>This parameter is reserved.</p>"
                },
                {
                    "name": "Value",
                    "shape": "StringVal",
                    "documentation": "<p>This parameter is reserved.</p>"
                }
            ]
        },
        "AdditionalAttributes": {
            "type": "list",
            "of": "AdditionalAttribute"
        },
        "AppCookieStickinessPolicies": {
            "type": "list",
            "of": "AppCookieStickinessPolicy"
        },
        "AppCookieStickinessPolicy": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer.</p>"
                },
                {
                    "name": "CookieName",
                    "shape": "CookieName",
                    "documentation": "<p>The name of the application cookie used for stickiness.</p>"
                }
            ]
        },
        "ApplySecurityGroupsToLoadBalancerInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "SecurityGroups",
                    "shape": "SecurityGroups",
                    "documentation": "<p>The IDs of the security groups to associate with the load balancer. Note that you cannot specify the name of the security group.</p>"
                }
            ]
        },
        "ApplySecurityGroupsToLoadBalancerOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "SecurityGroups",
                    "shape": "SecurityGroups",
                    "documentation": "<p>The IDs of the security groups associated with the load balancer.</p>"
                }
            ]
        },
        "AttachLoadBalancerToSubnetsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Subnets",
                    "shape": "Subnets",
                    "documentation": "<p>The IDs of the subnets to add for the load balancer. You can add only one subnet per Availability Zone.</p>"
                }
            ]
        },
        "AttachLoadBalancerToSubnetsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "Subnets",
                    "shape": "Subnets",
                    "documentation": "<p>The IDs of the subnets attached to the load balancer.</p>"
                }
            ]
        },
        "AttributeName": {
            "type": "string"
        },
        "AttributeType": {
            "type": "string"
        },
        "AttributeValue": {
            "type": "string"
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "list",
            "of": "AvailabilityZone"
        },
        "BackendServerDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "InstancePort",
                    "shape": "InstancePort",
                    "documentation": "<p>The port on which the back-end server is listening.</p>"
                },
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNames",
                    "documentation": "<p>The names of the policies enabled for the back-end server.</p>"
                }
            ]
        },
        "BackendServerDescriptions": {
            "type": "list",
            "of": "BackendServerDescription"
        },
        "Cardinality": {
            "type": "string"
        },
        "CertificateNotFoundException": {
            "type": "structure",
            "members": []
        },
        "ConfigureHealthCheckInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "HealthCheck",
                    "shape": "HealthCheck",
                    "documentation": "<p>The configuration information for the new health check.</p>"
                }
            ]
        },
        "ConfigureHealthCheckOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheck",
                    "shape": "HealthCheck",
                    "documentation": "<p>The updated health check.</p>"
                }
            ]
        },
        "ConnectionDraining": {
            "type": "structure",
            "members": [
                {
                    "name": "Enabled",
                    "shape": "ConnectionDrainingEnabled",
                    "documentation": "<p>Specifies whether connection draining is enabled for the load balancer.</p>"
                },
                {
                    "name": "Timeout",
                    "shape": "ConnectionDrainingTimeout",
                    "documentation": "<p>The maximum time, in seconds, to keep the existing connections open before deregistering the instances.</p>"
                }
            ]
        },
        "ConnectionDrainingEnabled": {
            "type": "boolean"
        },
        "ConnectionDrainingTimeout": {
            "type": "integer"
        },
        "ConnectionSettings": {
            "type": "structure",
            "members": [
                {
                    "name": "IdleTimeout",
                    "shape": "IdleTimeout",
                    "documentation": "<p>The time, in seconds, that the connection is allowed to be idle (no data has been sent over the connection) before it is closed by the load balancer.</p>"
                }
            ]
        },
        "CookieExpirationPeriod": {
            "type": "long"
        },
        "CookieName": {
            "type": "string"
        },
        "CreateAccessPointInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p> <p>This name must be unique within your AWS account, must have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen.</p>"
                },
                {
                    "name": "Listeners",
                    "shape": "Listeners",
                    "documentation": "<p>The listeners.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/elb-listener-config.html\">Listeners for Your Load Balancer</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                },
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>One or more Availability Zones from the same region as the load balancer. Traffic is equally distributed across all specified Availability Zones.</p> <p>You must specify at least one Availability Zone.</p> <p>You can add more Availability Zones after you create the load balancer using <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>"
                },
                {
                    "name": "Subnets",
                    "shape": "Subnets",
                    "documentation": "<p>The IDs of the subnets in your VPC to attach to the load balancer. Specify one subnet per Availability Zone specified in <code>AvailabilityZones</code>.</p>"
                },
                {
                    "name": "SecurityGroups",
                    "shape": "SecurityGroups",
                    "documentation": "<p>The IDs of the security groups to assign to the load balancer.</p>"
                },
                {
                    "name": "Scheme",
                    "shape": "LoadBalancerScheme",
                    "documentation": "<p>The type of a load balancer. Valid only for load balancers in a VPC.</p> <p>By default, Elastic Load Balancing creates an Internet-facing load balancer with a publicly resolvable DNS name, which resolves to public IP addresses. For more information about Internet-facing and Internal load balancers, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/vpc-loadbalancer-types.html\">Internet-facing and Internal Load Balancers</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p> <p>Specify <code>internal</code> to create an internal load balancer with a DNS name that resolves to private IP addresses.</p>"
                },
                {
                    "name": "Tags",
                    "shape": "TagList",
                    "documentation": "<p>A list of tags to assign to the load balancer.</p> <p>For more information about tagging your load balancer, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/TerminologyandKeyConcepts.html#tagging-elb\">Tagging</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                }
            ]
        },
        "CreateAccessPointOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "DNSName",
                    "shape": "DNSName",
                    "documentation": "<p>The DNS name of the load balancer.</p>"
                }
            ]
        },
        "CreateAppCookieStickinessPolicyInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the policy being created. This name must be unique within the set of policies for this load balancer.</p>"
                },
                {
                    "name": "CookieName",
                    "shape": "CookieName",
                    "documentation": "<p>The name of the application cookie used for stickiness.</p>"
                }
            ]
        },
        "CreateAppCookieStickinessPolicyOutput": {
            "type": "structure",
            "members": []
        },
        "CreateLBCookieStickinessPolicyInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the policy being created. This name must be unique within the set of policies for this load balancer.</p>"
                },
                {
                    "name": "CookieExpirationPeriod",
                    "shape": "CookieExpirationPeriod",
                    "documentation": "<p>The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the sticky session lasts for the duration of the browser session.</p>"
                }
            ]
        },
        "CreateLBCookieStickinessPolicyOutput": {
            "type": "structure",
            "members": []
        },
        "CreateLoadBalancerListenerInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Listeners",
                    "shape": "Listeners",
                    "documentation": "<p>The listeners.</p>"
                }
            ]
        },
        "CreateLoadBalancerListenerOutput": {
            "type": "structure",
            "members": []
        },
        "CreateLoadBalancerPolicyInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the load balancer policy to be created. This name must be unique within the set of policies for this load balancer.</p>"
                },
                {
                    "name": "PolicyTypeName",
                    "shape": "PolicyTypeName",
                    "documentation": "<p>The name of the base policy type. To get the list of policy types, use <a>DescribeLoadBalancerPolicyTypes</a>.</p>"
                },
                {
                    "name": "PolicyAttributes",
                    "shape": "PolicyAttributes",
                    "documentation": "<p>The attributes for the policy.</p>"
                }
            ]
        },
        "CreateLoadBalancerPolicyOutput": {
            "type": "structure",
            "members": []
        },
        "CreatedTime": {
            "type": "timestamp"
        },
        "CrossZoneLoadBalancing": {
            "type": "structure",
            "members": [
                {
                    "name": "Enabled",
                    "shape": "CrossZoneLoadBalancingEnabled",
                    "documentation": "<p>Specifies whether cross-zone load balancing is enabled for the load balancer.</p>"
                }
            ]
        },
        "CrossZoneLoadBalancingEnabled": {
            "type": "boolean"
        },
        "DNSName": {
            "type": "string"
        },
        "DefaultValue": {
            "type": "string"
        },
        "DeleteAccessPointInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                }
            ]
        },
        "DeleteAccessPointOutput": {
            "type": "structure",
            "members": []
        },
        "DeleteLoadBalancerListenerInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "LoadBalancerPorts",
                    "shape": "Ports",
                    "documentation": "<p>The client port numbers of the listeners.</p>"
                }
            ]
        },
        "DeleteLoadBalancerListenerOutput": {
            "type": "structure",
            "members": []
        },
        "DeleteLoadBalancerPolicyInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the policy.</p>"
                }
            ]
        },
        "DeleteLoadBalancerPolicyOutput": {
            "type": "structure",
            "members": []
        },
        "DeregisterEndPointsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Instances",
                    "shape": "Instances",
                    "documentation": "<p>The IDs of the instances.</p>"
                }
            ]
        },
        "DeregisterEndPointsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "Instances",
                    "shape": "Instances",
                    "documentation": "<p>The remaining instances registered with the load balancer.</p>"
                }
            ]
        },
        "DescribeAccessPointsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerNames",
                    "shape": "LoadBalancerNames",
                    "documentation": "<p>The names of the load balancers.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "Marker",
                    "documentation": "<p>The marker for the next set of results. (You received this marker from a previous call.)</p>"
                },
                {
                    "name": "PageSize",
                    "shape": "PageSize",
                    "documentation": "<p>The maximum number of results to return with this call (a number from 1 to 400). The default is 400.</p>"
                }
            ]
        },
        "DescribeAccessPointsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerDescriptions",
                    "shape": "LoadBalancerDescriptions",
                    "documentation": "<p>Information about the load balancers.</p>"
                },
                {
                    "name": "NextMarker",
                    "shape": "Marker",
                    "documentation": "<p>The marker to use when requesting the next set of results. If there are no additional results, the string is empty.</p>"
                }
            ]
        },
        "DescribeEndPointStateInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Instances",
                    "shape": "Instances",
                    "documentation": "<p>The IDs of the instances.</p>"
                }
            ]
        },
        "DescribeEndPointStateOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceStates",
                    "shape": "InstanceStates",
                    "documentation": "<p>Information about the health of the instances.</p>"
                }
            ]
        },
        "DescribeLoadBalancerAttributesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                }
            ]
        },
        "DescribeLoadBalancerAttributesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerAttributes",
                    "shape": "LoadBalancerAttributes",
                    "documentation": "<p>Information about the load balancer attributes.</p>"
                }
            ]
        },
        "DescribeLoadBalancerPoliciesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNames",
                    "documentation": "<p>The names of the policies.</p>"
                }
            ]
        },
        "DescribeLoadBalancerPoliciesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyDescriptions",
                    "shape": "PolicyDescriptions",
                    "documentation": "<p>Information about the policies.</p>"
                }
            ]
        },
        "DescribeLoadBalancerPolicyTypesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyTypeNames",
                    "shape": "PolicyTypeNames",
                    "documentation": "<p>The names of the policy types. If no names are specified, describes all policy types defined by Elastic Load Balancing.</p>"
                }
            ]
        },
        "DescribeLoadBalancerPolicyTypesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyTypeDescriptions",
                    "shape": "PolicyTypeDescriptions",
                    "documentation": "<p>Information about the policy types.</p>"
                }
            ]
        },
        "DescribeTagsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerNames",
                    "shape": "LoadBalancerNamesMax20",
                    "documentation": "<p>The names of the load balancers.</p>"
                }
            ]
        },
        "DescribeTagsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "TagDescriptions",
                    "shape": "TagDescriptions",
                    "documentation": "<p>Information about the tags.</p>"
                }
            ]
        },
        "Description": {
            "type": "string"
        },
        "DetachLoadBalancerFromSubnetsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Subnets",
                    "shape": "Subnets",
                    "documentation": "<p>The IDs of the subnets.</p>"
                }
            ]
        },
        "DetachLoadBalancerFromSubnetsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "Subnets",
                    "shape": "Subnets",
                    "documentation": "<p>The IDs of the remaining subnets for the load balancer.</p>"
                }
            ]
        },
        "DuplicateAccessPointNameException": {
            "type": "structure",
            "members": []
        },
        "DuplicateListenerException": {
            "type": "structure",
            "members": []
        },
        "DuplicatePolicyNameException": {
            "type": "structure",
            "members": []
        },
        "DuplicateTagKeysException": {
            "type": "structure",
            "members": []
        },
        "EndPointPort": {
            "type": "integer"
        },
        "HealthCheck": {
            "type": "structure",
            "members": [
                {
                    "name": "Target",
                    "shape": "HealthCheckTarget",
                    "documentation": "<p>The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP is the default, specified as a TCP: port pair, for example \"TCP:5000\". In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example \"HTTP:80/weather/us/wa/seattle\". In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than \"200 OK\" within the timeout period is considered unhealthy.</p> <p>The total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.</p>"
                },
                {
                    "name": "Interval",
                    "shape": "HealthCheckInterval",
                    "documentation": "<p>The approximate interval, in seconds, between health checks of an individual instance.</p>"
                },
                {
                    "name": "Timeout",
                    "shape": "HealthCheckTimeout",
                    "documentation": "<p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>"
                },
                {
                    "name": "UnhealthyThreshold",
                    "shape": "UnhealthyThreshold",
                    "documentation": "<p>The number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.</p>"
                },
                {
                    "name": "HealthyThreshold",
                    "shape": "HealthyThreshold",
                    "documentation": "<p>The number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.</p>"
                }
            ]
        },
        "HealthCheckInterval": {
            "type": "integer"
        },
        "HealthCheckTarget": {
            "type": "string"
        },
        "HealthCheckTimeout": {
            "type": "integer"
        },
        "HealthyThreshold": {
            "type": "integer"
        },
        "IdleTimeout": {
            "type": "integer"
        },
        "Instance": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceId",
                    "shape": "InstanceId",
                    "documentation": "<p>The ID of the instance.</p>"
                }
            ]
        },
        "InstanceId": {
            "type": "string"
        },
        "InstancePort": {
            "type": "integer"
        },
        "InstanceState": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceId",
                    "shape": "InstanceId",
                    "documentation": "<p>The ID of the instance.</p>"
                },
                {
                    "name": "State",
                    "shape": "State",
                    "documentation": "<p>The current state of the instance.</p> <p>Valid values: <code>InService</code> | <code>OutOfService</code> | <code>Unknown</code></p>"
                },
                {
                    "name": "ReasonCode",
                    "shape": "ReasonCode",
                    "documentation": "<p>Information about the cause of <code>OutOfService</code> instances. Specifically, whether the cause is Elastic Load Balancing or the instance.</p> <p>Valid values: <code>ELB</code> | <code>Instance</code> | <code>N/A</code></p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A description of the instance state. This string can contain one or more of the following messages.</p> <ul> <li> <p><code>N/A</code></p> </li> <li> <p><code>A transient error occurred. Please try again later.</code></p> </li> <li> <p><code>Instance has failed at least the UnhealthyThreshold number of health checks consecutively.</code></p> </li> <li> <p><code>Instance has not passed the configured HealthyThreshold number of health checks consecutively.</code></p> </li> <li> <p><code>Instance registration is still in progress.</code></p> </li> <li> <p><code>Instance is in the EC2 Availability Zone for which LoadBalancer is not configured to route traffic to.</code></p> </li> <li> <p><code>Instance is not currently registered with the LoadBalancer.</code></p> </li> <li> <p><code>Instance deregistration currently in progress.</code></p> </li> <li> <p><code>Disable Availability Zone is currently in progress.</code></p> </li> <li> <p><code>Instance is in pending state.</code></p> </li> <li> <p><code>Instance is in stopped state.</code></p> </li> <li> <p><code>Instance is in terminated state.</code></p> </li> </ul>"
                }
            ]
        },
        "InstanceStates": {
            "type": "list",
            "of": "InstanceState"
        },
        "Instances": {
            "type": "list",
            "of": "Instance"
        },
        "InvalidConfigurationRequestException": {
            "type": "structure",
            "members": []
        },
        "InvalidEndPointException": {
            "type": "structure",
            "members": []
        },
        "InvalidSchemeException": {
            "type": "structure",
            "members": []
        },
        "InvalidSecurityGroupException": {
            "type": "structure",
            "members": []
        },
        "InvalidSubnetException": {
            "type": "structure",
            "members": []
        },
        "LBCookieStickinessPolicies": {
            "type": "list",
            "of": "LBCookieStickinessPolicy"
        },
        "LBCookieStickinessPolicy": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name for the policy being created. The name must be unique within the set of policies for this load balancer.</p>"
                },
                {
                    "name": "CookieExpirationPeriod",
                    "shape": "CookieExpirationPeriod",
                    "documentation": "<p>The time period, in seconds, after which the cookie should be considered stale. If this parameter is not specified, the stickiness session lasts for the duration of the browser session.</p>"
                }
            ]
        },
        "Listener": {
            "type": "structure",
            "members": [
                {
                    "name": "Protocol",
                    "shape": "Protocol",
                    "documentation": "<p>The load balancer transport protocol to use for routing: HTTP, HTTPS, TCP, or SSL.</p>"
                },
                {
                    "name": "LoadBalancerPort",
                    "shape": "AccessPointPort",
                    "documentation": "<p>The port on which the load balancer is listening. The supported ports are: 25, 80, 443, 465, 587, and 1024-65535.</p>"
                },
                {
                    "name": "InstanceProtocol",
                    "shape": "Protocol",
                    "documentation": "<p>The protocol to use for routing traffic to back-end instances: HTTP, HTTPS, TCP, or SSL.</p> <p>If the front-end protocol is HTTP, HTTPS, TCP, or SSL, <code>InstanceProtocol</code> must be at the same protocol.</p> <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is secure, (HTTPS or SSL), the listener's <code>InstanceProtocol</code> must also be secure.</p> <p>If there is another listener with the same <code>InstancePort</code> whose <code>InstanceProtocol</code> is HTTP or TCP, the listener's <code>InstanceProtocol</code> must be HTTP or TCP.</p>"
                },
                {
                    "name": "InstancePort",
                    "shape": "InstancePort",
                    "documentation": "<p>The port on which the instance is listening.</p>"
                },
                {
                    "name": "SSLCertificateId",
                    "shape": "SSLCertificateId",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the server certificate.</p>"
                }
            ]
        },
        "ListenerDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "Listener",
                    "shape": "Listener"
                },
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNames",
                    "documentation": "<p>The policies. If there are no policies enabled, the list is empty.</p>"
                }
            ]
        },
        "ListenerDescriptions": {
            "type": "list",
            "of": "ListenerDescription"
        },
        "ListenerNotFoundException": {
            "type": "structure",
            "members": []
        },
        "Listeners": {
            "type": "list",
            "of": "Listener"
        },
        "LoadBalancerAttributeNotFoundException": {
            "type": "structure",
            "members": []
        },
        "LoadBalancerAttributes": {
            "type": "structure",
            "members": [
                {
                    "name": "CrossZoneLoadBalancing",
                    "shape": "CrossZoneLoadBalancing",
                    "documentation": "<p>If enabled, the load balancer routes the request traffic evenly across all back-end instances regardless of the Availability Zones.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-disable-crosszone-lb.html\">Enable Cross-Zone Load Balancing</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                },
                {
                    "name": "AccessLog",
                    "shape": "AccessLog",
                    "documentation": "<p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/enable-access-logs.html\">Enable Access Logs</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                },
                {
                    "name": "ConnectionDraining",
                    "shape": "ConnectionDraining",
                    "documentation": "<p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy back-end instance. </p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/config-conn-drain.html\">Enable Connection Draining</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                },
                {
                    "name": "ConnectionSettings",
                    "shape": "ConnectionSettings",
                    "documentation": "<p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/config-idle-timeout.html\">Configure Idle Connection Timeout</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                },
                {
                    "name": "AdditionalAttributes",
                    "shape": "AdditionalAttributes",
                    "documentation": "<p>This parameter is reserved.</p>"
                }
            ]
        },
        "LoadBalancerDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "DNSName",
                    "shape": "DNSName",
                    "documentation": "<p>The external DNS name of the load balancer.</p>"
                },
                {
                    "name": "CanonicalHostedZoneName",
                    "shape": "DNSName",
                    "documentation": "<p>The Amazon Route 53 hosted zone associated with the load balancer.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/using-domain-names-with-elb.html\">Using Domain Names With Elastic Load Balancing</a> in the <i>Elastic Load Balancing Developer Guide</i>.</p>"
                },
                {
                    "name": "CanonicalHostedZoneNameID",
                    "shape": "DNSName",
                    "documentation": "<p>The ID of the Amazon Route 53 hosted zone name associated with the load balancer.</p>"
                },
                {
                    "name": "ListenerDescriptions",
                    "shape": "ListenerDescriptions",
                    "documentation": "<p>The listeners for the load balancer.</p>"
                },
                {
                    "name": "Policies",
                    "shape": "Policies",
                    "documentation": "<p>The policies defined for the load balancer.</p>"
                },
                {
                    "name": "BackendServerDescriptions",
                    "shape": "BackendServerDescriptions",
                    "documentation": "<p>Information about the back-end servers.</p>"
                },
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>The Availability Zones for the load balancer.</p>"
                },
                {
                    "name": "Subnets",
                    "shape": "Subnets",
                    "documentation": "<p>The IDs of the subnets for the load balancer.</p>"
                },
                {
                    "name": "VPCId",
                    "shape": "VPCId",
                    "documentation": "<p>The ID of the VPC for the load balancer.</p>"
                },
                {
                    "name": "Instances",
                    "shape": "Instances",
                    "documentation": "<p>The IDs of the instances for the load balancer.</p>"
                },
                {
                    "name": "HealthCheck",
                    "shape": "HealthCheck",
                    "documentation": "<p>Information about the health checks conducted on the load balancer.</p>"
                },
                {
                    "name": "SourceSecurityGroup",
                    "shape": "SourceSecurityGroup",
                    "documentation": "<p>The security group that you can use as part of your inbound rules for your load balancer's back-end application instances. To only allow traffic from load balancers, add a security group rule to your back end instance that specifies this source security group as the inbound source.</p>"
                },
                {
                    "name": "SecurityGroups",
                    "shape": "SecurityGroups",
                    "documentation": "<p>The security groups for the load balancer. Valid only for load balancers in a VPC.</p>"
                },
                {
                    "name": "CreatedTime",
                    "shape": "CreatedTime",
                    "documentation": "<p>The date and time the load balancer was created.</p>"
                },
                {
                    "name": "Scheme",
                    "shape": "LoadBalancerScheme",
                    "documentation": "<p>The type of load balancer. Valid only for load balancers in a VPC.</p> <p>If <code>Scheme</code> is <code>internet-facing</code>, the load balancer has a public DNS name that resolves to a public IP address.</p> <p>If <code>Scheme</code> is <code>internal</code>, the load balancer has a public DNS name that resolves to a private IP address.</p>"
                }
            ]
        },
        "LoadBalancerDescriptions": {
            "type": "list",
            "of": "LoadBalancerDescription"
        },
        "LoadBalancerNames": {
            "type": "list",
            "of": "AccessPointName"
        },
        "LoadBalancerNamesMax20": {
            "type": "list",
            "of": "AccessPointName"
        },
        "LoadBalancerScheme": {
            "type": "string"
        },
        "Marker": {
            "type": "string"
        },
        "ModifyLoadBalancerAttributesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "LoadBalancerAttributes",
                    "shape": "LoadBalancerAttributes",
                    "documentation": "<p>The attributes of the load balancer.</p>"
                }
            ]
        },
        "ModifyLoadBalancerAttributesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "LoadBalancerAttributes",
                    "shape": "LoadBalancerAttributes"
                }
            ]
        },
        "PageSize": {
            "type": "integer"
        },
        "Policies": {
            "type": "structure",
            "members": [
                {
                    "name": "AppCookieStickinessPolicies",
                    "shape": "AppCookieStickinessPolicies",
                    "documentation": "<p>The stickiness policies created using <a>CreateAppCookieStickinessPolicy</a>.</p>"
                },
                {
                    "name": "LBCookieStickinessPolicies",
                    "shape": "LBCookieStickinessPolicies",
                    "documentation": "<p>The stickiness policies created using <a>CreateLBCookieStickinessPolicy</a>.</p>"
                },
                {
                    "name": "OtherPolicies",
                    "shape": "PolicyNames",
                    "documentation": "<p>The policies other than the stickiness policies.</p>"
                }
            ]
        },
        "PolicyAttribute": {
            "type": "structure",
            "members": [
                {
                    "name": "AttributeName",
                    "shape": "AttributeName",
                    "documentation": "<p>The name of the attribute.</p>"
                },
                {
                    "name": "AttributeValue",
                    "shape": "AttributeValue",
                    "documentation": "<p>The value of the attribute.</p>"
                }
            ]
        },
        "PolicyAttributeDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "AttributeName",
                    "shape": "AttributeName",
                    "documentation": "<p>The name of the attribute.</p>"
                },
                {
                    "name": "AttributeValue",
                    "shape": "AttributeValue",
                    "documentation": "<p>The value of the attribute.</p>"
                }
            ]
        },
        "PolicyAttributeDescriptions": {
            "type": "list",
            "of": "PolicyAttributeDescription"
        },
        "PolicyAttributeTypeDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "AttributeName",
                    "shape": "AttributeName",
                    "documentation": "<p>The name of the attribute.</p>"
                },
                {
                    "name": "AttributeType",
                    "shape": "AttributeType",
                    "documentation": "<p>The type of the attribute. For example, <code>Boolean</code> or <code>Integer</code>.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A description of the attribute.</p>"
                },
                {
                    "name": "DefaultValue",
                    "shape": "DefaultValue",
                    "documentation": "<p>The default value of the attribute, if applicable.</p>"
                },
                {
                    "name": "Cardinality",
                    "shape": "Cardinality",
                    "documentation": "<p>The cardinality of the attribute.</p> <p>Valid values:</p> <ul> <li>ONE(1) : Single value required</li> <li>ZERO_OR_ONE(0..1) : Up to one value can be supplied</li> <li>ZERO_OR_MORE(0..*) : Optional. Multiple values are allowed</li> <li>ONE_OR_MORE(1..*0) : Required. Multiple values are allowed</li> </ul>"
                }
            ]
        },
        "PolicyAttributeTypeDescriptions": {
            "type": "list",
            "of": "PolicyAttributeTypeDescription"
        },
        "PolicyAttributes": {
            "type": "list",
            "of": "PolicyAttribute"
        },
        "PolicyDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "PolicyName",
                    "documentation": "<p>The name of the policy.</p>"
                },
                {
                    "name": "PolicyTypeName",
                    "shape": "PolicyTypeName",
                    "documentation": "<p>The name of the policy type.</p>"
                },
                {
                    "name": "PolicyAttributeDescriptions",
                    "shape": "PolicyAttributeDescriptions",
                    "documentation": "<p>The policy attributes.</p>"
                }
            ]
        },
        "PolicyDescriptions": {
            "type": "list",
            "of": "PolicyDescription"
        },
        "PolicyName": {
            "type": "string"
        },
        "PolicyNames": {
            "type": "list",
            "of": "PolicyName"
        },
        "PolicyNotFoundException": {
            "type": "structure",
            "members": []
        },
        "PolicyTypeDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyTypeName",
                    "shape": "PolicyTypeName",
                    "documentation": "<p>The name of the policy type.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A description of the policy type.</p>"
                },
                {
                    "name": "PolicyAttributeTypeDescriptions",
                    "shape": "PolicyAttributeTypeDescriptions",
                    "documentation": "<p>The description of the policy attributes associated with the policies defined by Elastic Load Balancing.</p>"
                }
            ]
        },
        "PolicyTypeDescriptions": {
            "type": "list",
            "of": "PolicyTypeDescription"
        },
        "PolicyTypeName": {
            "type": "string"
        },
        "PolicyTypeNames": {
            "type": "list",
            "of": "PolicyTypeName"
        },
        "PolicyTypeNotFoundException": {
            "type": "structure",
            "members": []
        },
        "Ports": {
            "type": "list",
            "of": "AccessPointPort"
        },
        "Protocol": {
            "type": "string"
        },
        "ReasonCode": {
            "type": "string"
        },
        "RegisterEndPointsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Instances",
                    "shape": "Instances",
                    "documentation": "<p>The IDs of the instances.</p>"
                }
            ]
        },
        "RegisterEndPointsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "Instances",
                    "shape": "Instances",
                    "documentation": "<p>The updated list of instances for the load balancer.</p>"
                }
            ]
        },
        "RemoveAvailabilityZonesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>The Availability Zones.</p>"
                }
            ]
        },
        "RemoveAvailabilityZonesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>The remaining Availability Zones for the load balancer.</p>"
                }
            ]
        },
        "RemoveTagsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerNames",
                    "shape": "LoadBalancerNames",
                    "documentation": "<p>The name of the load balancer. You can specify a maximum of one load balancer name.</p>"
                },
                {
                    "name": "Tags",
                    "shape": "TagKeyList",
                    "documentation": "<p>The list of tag keys to remove.</p>"
                }
            ]
        },
        "RemoveTagsOutput": {
            "type": "structure",
            "members": []
        },
        "S3BucketName": {
            "type": "string"
        },
        "SSLCertificateId": {
            "type": "string"
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "SecurityGroupName": {
            "type": "string"
        },
        "SecurityGroupOwnerAlias": {
            "type": "string"
        },
        "SecurityGroups": {
            "type": "list",
            "of": "SecurityGroupId"
        },
        "SetLoadBalancerListenerSSLCertificateInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "LoadBalancerPort",
                    "shape": "AccessPointPort",
                    "documentation": "<p>The port that uses the specified SSL certificate.</p>"
                },
                {
                    "name": "SSLCertificateId",
                    "shape": "SSLCertificateId",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SSL certificate.</p>"
                }
            ]
        },
        "SetLoadBalancerListenerSSLCertificateOutput": {
            "type": "structure",
            "members": []
        },
        "SetLoadBalancerPoliciesForBackendServerInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "InstancePort",
                    "shape": "EndPointPort",
                    "documentation": "<p>The port number associated with the back-end server.</p>"
                },
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNames",
                    "documentation": "<p>The names of the policies. If the list is empty, then all current polices are removed from the back-end server.</p>"
                }
            ]
        },
        "SetLoadBalancerPoliciesForBackendServerOutput": {
            "type": "structure",
            "members": []
        },
        "SetLoadBalancerPoliciesOfListenerInput": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "LoadBalancerPort",
                    "shape": "AccessPointPort",
                    "documentation": "<p>The external port of the load balancer for the policy.</p>"
                },
                {
                    "name": "PolicyNames",
                    "shape": "PolicyNames",
                    "documentation": "<p>The names of the policies. If the list is empty, the current policy is removed from the listener.</p>"
                }
            ]
        },
        "SetLoadBalancerPoliciesOfListenerOutput": {
            "type": "structure",
            "members": []
        },
        "SourceSecurityGroup": {
            "type": "structure",
            "members": [
                {
                    "name": "OwnerAlias",
                    "shape": "SecurityGroupOwnerAlias",
                    "documentation": "<p>The owner of the security group.</p>"
                },
                {
                    "name": "GroupName",
                    "shape": "SecurityGroupName",
                    "documentation": "<p>The name of the security group.</p>"
                }
            ]
        },
        "State": {
            "type": "string"
        },
        "StringVal": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string"
        },
        "SubnetNotFoundException": {
            "type": "structure",
            "members": []
        },
        "Subnets": {
            "type": "list",
            "of": "SubnetId"
        },
        "Tag": {
            "type": "structure",
            "members": [
                {
                    "name": "Key",
                    "shape": "TagKey",
                    "documentation": "<p>The key of the tag.</p>"
                },
                {
                    "name": "Value",
                    "shape": "TagValue",
                    "documentation": "<p>The value of the tag.</p>"
                }
            ]
        },
        "TagDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "AccessPointName",
                    "documentation": "<p>The name of the load balancer.</p>"
                },
                {
                    "name": "Tags",
                    "shape": "TagList",
                    "documentation": "<p>The tags.</p>"
                }
            ]
        },
        "TagDescriptions": {
            "type": "list",
            "of": "TagDescription"
        },
        "TagKey": {
            "type": "string"
        },
        "TagKeyList": {
            "type": "list",
            "of": "TagKeyOnly"
        },
        "TagKeyOnly": {
            "type": "structure",
            "members": [
                {
                    "name": "Key",
                    "shape": "TagKey",
                    "documentation": "<p>The name of the key.</p>"
                }
            ]
        },
        "TagList": {
            "type": "list",
            "of": "Tag"
        },
        "TagValue": {
            "type": "string"
        },
        "TooManyAccessPointsException": {
            "type": "structure",
            "members": []
        },
        "TooManyPoliciesException": {
            "type": "structure",
            "members": []
        },
        "TooManyTagsException": {
            "type": "structure",
            "members": []
        },
        "UnhealthyThreshold": {
            "type": "integer"
        },
        "VPCId": {
            "type": "string"
        }
    }
}