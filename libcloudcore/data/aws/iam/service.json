{
    "metadata": {
        "request-pipeline": [
            "libcloudcore.serializers.xml:XmlSerializer"
        ],
        "namespaces": {
            "": "https://iam.amazonaws.com/doc/2010-05-08/"
        }
    },
    "endpoints": [
        {
            "when": [
                [
                    "region",
                    "starts-with",
                    "cn-"
                ]
            ],
            "http": {
                "host": "{service}.cn-north-1.amazonaws.com.cn"
            }
        },
        {
            "when": [
                [
                    "region",
                    "starts-with",
                    "us-gov"
                ]
            ],
            "http": {
                "host": "{service}.us-gov.amazonaws.com"
            }
        },
        {
            "http": {
                "host": "iam.amazonaws.com"
            }
        }
    ],
    "operations": {
        "AddClientIDToOpenIDConnectProvider": {
            "documentation": "<p>Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect provider.</p> <p>This action is idempotent; it does not fail or return an error if you add an existing client ID to the provider.</p>",
            "input": {
                "shape": "AddClientIDToOpenIDConnectProviderRequest"
            }
        },
        "AddRoleToInstanceProfile": {
            "documentation": "<p>Adds the specified role to the specified instance profile. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. </p>",
            "input": {
                "shape": "AddRoleToInstanceProfileRequest"
            }
        },
        "AddUserToGroup": {
            "documentation": "<p>Adds the specified user to the specified group.</p>",
            "input": {
                "shape": "AddUserToGroupRequest"
            }
        },
        "AttachGroupPolicy": {
            "documentation": "<p>Attaches the specified managed policy to the specified group.</p> <p>You use this API to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>. </p> <p>For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "AttachGroupPolicyRequest"
            }
        },
        "AttachRolePolicy": {
            "documentation": "<p>Attaches the specified managed policy to the specified role.</p> <p>When you attach a managed policy to a role, the managed policy is used as the role's access (permissions) policy. You cannot use a managed policy as the role's trust policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. </p> <p>Use this API to attach a managed policy to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide.</p>",
            "input": {
                "shape": "AttachRolePolicyRequest"
            }
        },
        "AttachUserPolicy": {
            "documentation": "<p>Attaches the specified managed policy to the specified user.</p> <p>You use this API to attach a managed policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>. </p> <p>For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "AttachUserPolicyRequest"
            }
        },
        "ChangePassword": {
            "documentation": "<p>Changes the password of the IAM user who is calling this action. The root account password is not affected by this action. </p> <p>To change the password for a different user, see <a>UpdateLoginProfile</a>. For more information about modifying passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "ChangePasswordRequest"
            }
        },
        "CreateAccessKey": {
            "documentation": "<p> Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is <code>Active</code>. </p> <p> If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p> <p> For information about limits on the number of keys you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p> <important> To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys. </important>",
            "input": {
                "shape": "CreateAccessKeyRequest"
            },
            "output": {
                "shape": "CreateAccessKeyResponse"
            }
        },
        "CreateAccountAlias": {
            "documentation": "<p>Creates an alias for your AWS account. For information about using an AWS account alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreateAccountAliasRequest"
            }
        },
        "CreateGroup": {
            "documentation": "<p>Creates a new group.</p> <p> For information about the number of groups you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreateGroupRequest"
            },
            "output": {
                "shape": "CreateGroupResponse"
            }
        },
        "CreateInstanceProfile": {
            "documentation": "<p> Creates a new instance profile. For information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. </p> <p> For information about the number of instance profiles you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreateInstanceProfileRequest"
            },
            "output": {
                "shape": "CreateInstanceProfileResponse"
            }
        },
        "CreateLoginProfile": {
            "documentation": "<p> Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For more information about managing passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreateLoginProfileRequest"
            },
            "output": {
                "shape": "CreateLoginProfileResponse"
            }
        },
        "CreateOpenIDConnectProvider": {
            "documentation": "<p>Creates an IAM entity to describe an identity provider (IdP) that supports <a href=\"http://openid.net/connect/\">OpenID Connect (OIDC)</a>. </p> <p>The OIDC provider that you create with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and the OIDC provider. </p> <p>When you create the IAM OIDC provider, you specify the URL of the OIDC identity provider (IdP) to trust, a list of client IDs (also known as audiences) that identify the application or applications that are allowed to authenticate using the OIDC provider, and a list of thumbprints of the server certificate(s) that the IdP uses. You get all of this information from the OIDC IdP that you want to use for access to AWS. </p> <note>Because trust for the OIDC provider is ultimately derived from the IAM provider that this action creates, it is a best practice to limit access to the <a>CreateOpenIDConnectProvider</a> action to highly-privileged users. </note>",
            "input": {
                "shape": "CreateOpenIDConnectProviderRequest"
            },
            "output": {
                "shape": "CreateOpenIDConnectProviderResponse"
            }
        },
        "CreatePolicy": {
            "documentation": "<p>Creates a new managed policy for your AWS account. </p> <p>This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy's default version. For more information about policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p> <p>For more information about managed policies in general, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreatePolicyRequest"
            },
            "output": {
                "shape": "CreatePolicyResponse"
            }
        },
        "CreatePolicyVersion": {
            "documentation": "<p>Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version. </p> <p>Optionally, you can set the new version as the policy's default version. The default version is the operative version; that is, the version that is in effect for the IAM users, groups, and roles that the policy is attached to. </p> <p>For more information about managed policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreatePolicyVersionRequest"
            },
            "output": {
                "shape": "CreatePolicyVersionResponse"
            }
        },
        "CreateRole": {
            "documentation": "<p>Creates a new role for your AWS account. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For information about limitations on role names and the number of roles you can create, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p> <p>The policy in the following example grants permission to an EC2 instance to assume the role.</p>",
            "input": {
                "shape": "CreateRoleRequest"
            },
            "output": {
                "shape": "CreateRoleResponse"
            }
        },
        "CreateSAMLProvider": {
            "documentation": "<p>Creates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.</p> <p> The SAML provider that you create with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and a SAML identity provider. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS. </p> <p> When you create the SAML provider, you upload an a SAML metadata document that you get from your IdP and that includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. </p> <note> This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. </note> <p> For more information, see <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html\">Giving Console Access Using SAML</a> and <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\">Creating Temporary Security Credentials for SAML Federation</a> in the <i>Using Temporary Credentials</i> guide. </p>",
            "input": {
                "shape": "CreateSAMLProviderRequest"
            },
            "output": {
                "shape": "CreateSAMLProviderResponse"
            }
        },
        "CreateUser": {
            "documentation": "<p>Creates a new user for your AWS account.</p> <p> For information about limitations on the number of users you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "CreateUserRequest"
            },
            "output": {
                "shape": "CreateUserResponse"
            }
        },
        "CreateVirtualMFADevice": {
            "documentation": "<p>Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use <a>EnableMFADevice</a> to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>Using IAM</i> guide. </p> <p>For information about limits on the number of MFA devices you can create, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on Entities</a> in the <i>Using IAM</i> guide. </p> <important>The seed information contained in the QR code and the Base32 string should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures. </important>",
            "input": {
                "shape": "CreateVirtualMFADeviceRequest"
            },
            "output": {
                "shape": "CreateVirtualMFADeviceResponse"
            }
        },
        "DeactivateMFADevice": {
            "documentation": "<p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled. </p> <p>For more information about creating and working with virtual MFA devices, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeactivateMFADeviceRequest"
            }
        },
        "DeleteAccessKey": {
            "documentation": "<p>Deletes the access key associated with the specified user.</p> <p> If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p>",
            "input": {
                "shape": "DeleteAccessKeyRequest"
            }
        },
        "DeleteAccountAlias": {
            "documentation": "<p> Deletes the specified AWS account alias. For information about using an AWS account alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeleteAccountAliasRequest"
            }
        },
        "DeleteAccountPasswordPolicy": {
            "documentation": "<p>Deletes the password policy for the AWS account.</p>"
        },
        "DeleteGroup": {
            "documentation": "<p> Deletes the specified group. The group must not contain any users or have any attached policies. </p>",
            "input": {
                "shape": "DeleteGroupRequest"
            }
        },
        "DeleteGroupPolicy": {
            "documentation": "<p>Deletes the specified inline policy that is embedded in the specified group.</p> <p>A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeleteGroupPolicyRequest"
            }
        },
        "DeleteInstanceProfile": {
            "documentation": "<p>Deletes the specified instance profile. The instance profile must not have an associated role. </p> <important> Make sure you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance. </important> <p>For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. </p>",
            "input": {
                "shape": "DeleteInstanceProfileRequest"
            }
        },
        "DeleteLoginProfile": {
            "documentation": "<p> Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management Console. </p> <important> Deleting a user's password does not prevent a user from accessing IAM through the command line interface or the API. To prevent all user access you must also either make the access key inactive or delete it. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </important>",
            "input": {
                "shape": "DeleteLoginProfileRequest"
            }
        },
        "DeleteOpenIDConnectProvider": {
            "documentation": "<p>Deletes an IAM OpenID Connect identity provider.</p> <p>Deleting an OIDC provider does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a provider that has been deleted will fail. </p> <p>This action is idempotent; it does not fail or return an error if you call the action for a provider that was already deleted.</p>",
            "input": {
                "shape": "DeleteOpenIDConnectProviderRequest"
            }
        },
        "DeletePolicy": {
            "documentation": "<p>Deletes the specified managed policy.</p> <p>Before you can delete a managed policy, you must detach the policy from all users, groups, and roles that it is attached to, and you must delete all of the policy's versions. The following steps describe the process for deleting a managed policy: <ol> <li>Detach the policy from all users, groups, and roles that the policy is attached to, using the <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a> APIs. To list all the users, groups, and roles that a policy is attached to, use <a>ListEntitiesForPolicy</a>. </li> <li>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked as the default version. You delete the policy's default version in the next step of the process. </li> <li>Delete the policy (this automatically deletes the policy's default version) using this API. </li> </ol> </p> <p>For information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeletePolicyRequest"
            }
        },
        "DeletePolicyVersion": {
            "documentation": "<p>Deletes the specified version of the specified managed policy.</p> <p>You cannot delete the default version of a policy using this API. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>. </p> <p>For information about versions for managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeletePolicyVersionRequest"
            }
        },
        "DeleteRole": {
            "documentation": "<p>Deletes the specified role. The role must not have any policies attached. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. </p> <important>Make sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance. </important>",
            "input": {
                "shape": "DeleteRoleRequest"
            }
        },
        "DeleteRolePolicy": {
            "documentation": "<p>Deletes the specified inline policy that is embedded in the specified role.</p> <p>A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeleteRolePolicyRequest"
            }
        },
        "DeleteSAMLProvider": {
            "documentation": "<p>Deletes a SAML provider.</p> <p> Deleting the provider does not update any roles that reference the SAML provider as a principal in their trust policies. Any attempt to assume a role that references a SAML provider that has been deleted will fail. </p> <note> This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. </note>",
            "input": {
                "shape": "DeleteSAMLProviderRequest"
            }
        },
        "DeleteSSHPublicKey": {
            "documentation": "<p>Deletes the specified SSH public key.</p> <p>The SSH public key deleted by this action is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
            "input": {
                "shape": "DeleteSSHPublicKeyRequest"
            }
        },
        "DeleteServerCertificate": {
            "documentation": "<p>Deletes the specified server certificate.</p> <important> If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to <a href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html\">DeleteLoadBalancerListeners</a> in the <i>Elastic Load Balancing API Reference</i>. </important>",
            "input": {
                "shape": "DeleteServerCertificateRequest"
            }
        },
        "DeleteSigningCertificate": {
            "documentation": "<p>Deletes the specified signing certificate associated with the specified user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p>",
            "input": {
                "shape": "DeleteSigningCertificateRequest"
            }
        },
        "DeleteUser": {
            "documentation": "<p> Deletes the specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached policies. </p>",
            "input": {
                "shape": "DeleteUserRequest"
            }
        },
        "DeleteUserPolicy": {
            "documentation": "<p>Deletes the specified inline policy that is embedded in the specified user.</p> <p>A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DeleteUserPolicyRequest"
            }
        },
        "DeleteVirtualMFADevice": {
            "documentation": "<p>Deletes a virtual MFA device.</p> <note> You must deactivate a user's virtual MFA device before you can delete it. For information about deactivating MFA devices, see <a>DeactivateMFADevice</a>. </note>",
            "input": {
                "shape": "DeleteVirtualMFADeviceRequest"
            }
        },
        "DetachGroupPolicy": {
            "documentation": "<p>Removes the specified managed policy from the specified group. </p> <p>A group can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteGroupPolicy</a> API. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DetachGroupPolicyRequest"
            }
        },
        "DetachRolePolicy": {
            "documentation": "<p>Removes the specified managed policy from the specified role. </p> <p>A role can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteRolePolicy</a> API. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DetachRolePolicyRequest"
            }
        },
        "DetachUserPolicy": {
            "documentation": "<p>Removes the specified managed policy from the specified user. </p> <p>A user can also have inline policies embedded with it. To delete an inline policy, use the <a>DeleteUserPolicy</a> API. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "DetachUserPolicyRequest"
            }
        },
        "EnableMFADevice": {
            "documentation": "<p> Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every subsequent login by the user name associated with the device. </p>",
            "input": {
                "shape": "EnableMFADeviceRequest"
            }
        },
        "GenerateCredentialReport": {
            "documentation": "<p> Generates a credential report for the AWS account. For more information about the credential report, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>Using IAM</i> guide. </p>",
            "output": {
                "shape": "GenerateCredentialReportResponse"
            }
        },
        "GetAccessKeyLastUsed": {
            "documentation": "<p>Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the AWS service and region that were specified in the last request made with that key.</p>",
            "input": {
                "shape": "GetAccessKeyLastUsedRequest"
            },
            "output": {
                "shape": "GetAccessKeyLastUsedResponse"
            }
        },
        "GetAccountAuthorizationDetails": {
            "documentation": "<p>Retrieves information about all IAM users, groups, roles, and policies in your account, including their relationships to one another. Use this API to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.</p> <p>You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
            "input": {
                "shape": "GetAccountAuthorizationDetailsRequest"
            },
            "output": {
                "shape": "GetAccountAuthorizationDetailsResponse"
            }
        },
        "GetAccountPasswordPolicy": {
            "documentation": "<p>Retrieves the password policy for the AWS account. For more information about using a password policy, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a>. </p>",
            "output": {
                "shape": "GetAccountPasswordPolicyResponse"
            }
        },
        "GetAccountSummary": {
            "documentation": "<p>Retrieves information about IAM entity usage and IAM quotas in the AWS account.</p> <p> For information about limitations on IAM entities, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p>",
            "output": {
                "shape": "GetAccountSummaryResponse"
            }
        },
        "GetCredentialReport": {
            "documentation": "<p> Retrieves a credential report for the AWS account. For more information about the credential report, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>Using IAM</i> guide. </p>",
            "output": {
                "shape": "GetCredentialReportResponse"
            }
        },
        "GetGroup": {
            "documentation": "<p> Returns a list of users that are in the specified group. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "GetGroupRequest"
            },
            "output": {
                "shape": "GetGroupResponse"
            }
        },
        "GetGroupPolicy": {
            "documentation": "<p>Retrieves the specified inline policy document that is embedded in the specified group. </p> <p>A group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document. </p> <p>For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "GetGroupPolicyRequest"
            },
            "output": {
                "shape": "GetGroupPolicyResponse"
            }
        },
        "GetInstanceProfile": {
            "documentation": "<p> Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. For more information about ARNs, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\">ARNs</a>. </p>",
            "input": {
                "shape": "GetInstanceProfileRequest"
            },
            "output": {
                "shape": "GetInstanceProfileResponse"
            }
        },
        "GetLoginProfile": {
            "documentation": "<p>Retrieves the user name and password-creation date for the specified user. If the user has not been assigned a password, the action returns a 404 (<code>NoSuchEntity</code>) error. </p>",
            "input": {
                "shape": "GetLoginProfileRequest"
            },
            "output": {
                "shape": "GetLoginProfileResponse"
            }
        },
        "GetOpenIDConnectProvider": {
            "documentation": "<p>Returns information about the specified OpenID Connect provider.</p>",
            "input": {
                "shape": "GetOpenIDConnectProviderRequest"
            },
            "output": {
                "shape": "GetOpenIDConnectProviderResponse"
            }
        },
        "GetPolicy": {
            "documentation": "<p>Retrieves information about the specified managed policy, including the policy's default version and the total number of users, groups, and roles that the policy is attached to. For a list of the specific users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. This API returns metadata about the policy. To retrieve the policy document for a specific version of the policy, use <a>GetPolicyVersion</a>. </p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded with a user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API. </p> <p>For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "GetPolicyRequest"
            },
            "output": {
                "shape": "GetPolicyResponse"
            }
        },
        "GetPolicyVersion": {
            "documentation": "<p>Retrieves information about the specified version of the specified managed policy, including the policy document. </p> <p>To list the available versions for a policy, use <a>ListPolicyVersions</a>. </p> <p>This API retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use the <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a> API. </p> <p>For more information about the types of policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "GetPolicyVersionRequest"
            },
            "output": {
                "shape": "GetPolicyVersionResponse"
            }
        },
        "GetRole": {
            "documentation": "<p>Retrieves information about the specified role, including the role's path, GUID, ARN, and the policy granting permission to assume the role. For more information about ARNs, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\">ARNs</a>. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. </p>",
            "input": {
                "shape": "GetRoleRequest"
            },
            "output": {
                "shape": "GetRoleResponse"
            }
        },
        "GetRolePolicy": {
            "documentation": "<p>Retrieves the specified inline policy document that is embedded with the specified role. </p> <p>A role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document. </p> <p>For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>. </p>",
            "input": {
                "shape": "GetRolePolicyRequest"
            },
            "output": {
                "shape": "GetRolePolicyResponse"
            }
        },
        "GetSAMLProvider": {
            "documentation": "<p>Returns the SAML provider metadocument that was uploaded when the provider was created or updated. </p> <note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. </note>",
            "input": {
                "shape": "GetSAMLProviderRequest"
            },
            "output": {
                "shape": "GetSAMLProviderResponse"
            }
        },
        "GetSSHPublicKey": {
            "documentation": "<p>Retrieves the specified SSH public key, including metadata about the key.</p> <p>The SSH public key retrieved by this action is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
            "input": {
                "shape": "GetSSHPublicKeyRequest"
            },
            "output": {
                "shape": "GetSSHPublicKeyResponse"
            }
        },
        "GetServerCertificate": {
            "documentation": "<p>Retrieves information about the specified server certificate.</p>",
            "input": {
                "shape": "GetServerCertificateRequest"
            },
            "output": {
                "shape": "GetServerCertificateResponse"
            }
        },
        "GetUser": {
            "documentation": "<p>Retrieves information about the specified user, including the user's creation date, path, unique ID, and ARN. </p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID used to sign the request. </p>",
            "input": {
                "shape": "GetUserRequest"
            },
            "output": {
                "shape": "GetUserResponse"
            }
        },
        "GetUserPolicy": {
            "documentation": "<p>Retrieves the specified inline policy document that is embedded in the specified user. </p> <p>A user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document. </p> <p>For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "GetUserPolicyRequest"
            },
            "output": {
                "shape": "GetUserPolicyResponse"
            }
        },
        "ListAccessKeys": {
            "documentation": "<p>Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty list. </p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p> <p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p> <note>To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. </note>",
            "input": {
                "shape": "ListAccessKeysRequest"
            },
            "output": {
                "shape": "ListAccessKeysResponse"
            }
        },
        "ListAccountAliases": {
            "documentation": "<p> Lists the account aliases associated with the account. For information about using an AWS account alias, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\">Using an Alias for Your AWS Account ID</a> in the <i>Using IAM</i> guide. </p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListAccountAliasesRequest"
            },
            "output": {
                "shape": "ListAccountAliasesResponse"
            }
        },
        "ListAttachedGroupPolicies": {
            "documentation": "<p>Lists all managed policies that are attached to the specified group.</p> <p>A group can also have inline policies embedded with it. To list the inline policies for a group, use the <a>ListGroupPolicies</a> API. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the action returns an empty list. </p>",
            "input": {
                "shape": "ListAttachedGroupPoliciesRequest"
            },
            "output": {
                "shape": "ListAttachedGroupPoliciesResponse"
            }
        },
        "ListAttachedRolePolicies": {
            "documentation": "<p>Lists all managed policies that are attached to the specified role. </p> <p>A role can also have inline policies embedded with it. To list the inline policies for a role, use the <a>ListRolePolicies</a> API. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the action returns an empty list. </p>",
            "input": {
                "shape": "ListAttachedRolePoliciesRequest"
            },
            "output": {
                "shape": "ListAttachedRolePoliciesResponse"
            }
        },
        "ListAttachedUserPolicies": {
            "documentation": "<p>Lists all managed policies that are attached to the specified user. </p> <p>A user can also have inline policies embedded with it. To list the inline policies for a user, use the <a>ListUserPolicies</a> API. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the action returns an empty list. </p>",
            "input": {
                "shape": "ListAttachedUserPoliciesRequest"
            },
            "output": {
                "shape": "ListAttachedUserPoliciesResponse"
            }
        },
        "ListEntitiesForPolicy": {
            "documentation": "<p>Lists all users, groups, and roles that the specified managed policy is attached to. </p> <p>You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListEntitiesForPolicyRequest"
            },
            "output": {
                "shape": "ListEntitiesForPolicyResponse"
            }
        },
        "ListGroupPolicies": {
            "documentation": "<p>Lists the names of the inline policies that are embedded in the specified group. </p> <p>A group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the action returns an empty list. </p>",
            "input": {
                "shape": "ListGroupPoliciesRequest"
            },
            "output": {
                "shape": "ListGroupPoliciesResponse"
            }
        },
        "ListGroups": {
            "documentation": "<p>Lists the groups that have the specified path prefix.</p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListGroupsRequest"
            },
            "output": {
                "shape": "ListGroupsResponse"
            }
        },
        "ListGroupsForUser": {
            "documentation": "<p>Lists the groups the specified user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListGroupsForUserRequest"
            },
            "output": {
                "shape": "ListGroupsForUserResponse"
            }
        },
        "ListInstanceProfiles": {
            "documentation": "<p>Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListInstanceProfilesRequest"
            },
            "output": {
                "shape": "ListInstanceProfilesResponse"
            }
        },
        "ListInstanceProfilesForRole": {
            "documentation": "<p>Lists the instance profiles that have the specified associated role. If there are none, the action returns an empty list. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListInstanceProfilesForRoleRequest"
            },
            "output": {
                "shape": "ListInstanceProfilesForRoleResponse"
            }
        },
        "ListMFADevices": {
            "documentation": "<p>Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListMFADevicesRequest"
            },
            "output": {
                "shape": "ListMFADevicesResponse"
            }
        },
        "ListOpenIDConnectProviders": {
            "documentation": "<p>Lists information about the OpenID Connect providers in the AWS account. </p>",
            "input": {
                "shape": "ListOpenIDConnectProvidersRequest"
            },
            "output": {
                "shape": "ListOpenIDConnectProvidersResponse"
            }
        },
        "ListPolicies": {
            "documentation": "<p>Lists all the managed policies that are available to your account, including your own customer managed policies and all AWS managed policies. </p> <p>You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>. To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "ListPoliciesRequest"
            },
            "output": {
                "shape": "ListPoliciesResponse"
            }
        },
        "ListPolicyVersions": {
            "documentation": "<p>Lists information about the versions of the specified managed policy, including the version that is set as the policy's default version. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "ListPolicyVersionsRequest"
            },
            "output": {
                "shape": "ListPolicyVersionsResponse"
            }
        },
        "ListRolePolicies": {
            "documentation": "<p>Lists the names of the inline policies that are embedded in the specified role. </p> <p>A role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the action returns an empty list. </p>",
            "input": {
                "shape": "ListRolePoliciesRequest"
            },
            "output": {
                "shape": "ListRolePoliciesResponse"
            }
        },
        "ListRoles": {
            "documentation": "<p>Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListRolesRequest"
            },
            "output": {
                "shape": "ListRolesResponse"
            }
        },
        "ListSAMLProviders": {
            "documentation": "<p>Lists the SAML providers in the account.</p> <note> This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. </note>",
            "input": {
                "shape": "ListSAMLProvidersRequest"
            },
            "output": {
                "shape": "ListSAMLProvidersResponse"
            }
        },
        "ListSSHPublicKeys": {
            "documentation": "<p>Returns information about the SSH public keys associated with the specified IAM user. If there are none, the action returns an empty list.</p> <p>The SSH public keys returned by this action are used only for authenticating the IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>",
            "input": {
                "shape": "ListSSHPublicKeysRequest"
            },
            "output": {
                "shape": "ListSSHPublicKeysResponse"
            }
        },
        "ListServerCertificates": {
            "documentation": "<p> Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list. </p> <p> You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListServerCertificatesRequest"
            },
            "output": {
                "shape": "ListServerCertificatesResponse"
            }
        },
        "ListSigningCertificates": {
            "documentation": "<p>Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty list. </p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p>",
            "input": {
                "shape": "ListSigningCertificatesRequest"
            },
            "output": {
                "shape": "ListSigningCertificatesResponse"
            }
        },
        "ListUserPolicies": {
            "documentation": "<p>Lists the names of the inline policies embedded in the specified user. </p> <p>A user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the action returns an empty list. </p>",
            "input": {
                "shape": "ListUserPoliciesRequest"
            },
            "output": {
                "shape": "ListUserPoliciesResponse"
            }
        },
        "ListUsers": {
            "documentation": "<p>Lists the IAM users that have the specified path prefix. If no path prefix is specified, the action returns all users in the AWS account. If there are none, the action returns an empty list. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListUsersRequest"
            },
            "output": {
                "shape": "ListUsersResponse"
            }
        },
        "ListVirtualMFADevices": {
            "documentation": "<p>Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action returns a list of all virtual MFA devices. Assignment status can be <code>Assigned</code>, <code>Unassigned</code>, or <code>Any</code>. </p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters. </p>",
            "input": {
                "shape": "ListVirtualMFADevicesRequest"
            },
            "output": {
                "shape": "ListVirtualMFADevicesResponse"
            }
        },
        "PutGroupPolicy": {
            "documentation": "<p>Adds (or updates) an inline policy document that is embedded in the specified group. </p> <p>A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>For information about limits on the number of inline policies that you can embed in a group, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p> <note>Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i> guide. </note>",
            "input": {
                "shape": "PutGroupPolicyRequest"
            }
        },
        "PutRolePolicy": {
            "documentation": "<p>Adds (or updates) an inline policy document that is embedded in the specified role. </p> <p>When you embed an inline policy in a role, the inline policy is used as the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>. </p> <p>A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>For information about limits on the number of inline policies that you can embed with a role, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p> <note>Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i> guide. </note>",
            "input": {
                "shape": "PutRolePolicyRequest"
            }
        },
        "PutUserPolicy": {
            "documentation": "<p>Adds (or updates) an inline policy document that is embedded in the specified user. </p> <p>A user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p> <p>For information about limits on the number of inline policies that you can embed in a user, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p> <note>Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i> guide. </note>",
            "input": {
                "shape": "PutUserPolicyRequest"
            }
        },
        "RemoveClientIDFromOpenIDConnectProvider": {
            "documentation": "<p>Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect provider.</p> <p>This action is idempotent; it does not fail or return an error if you try to remove a client ID that was removed previously.</p>",
            "input": {
                "shape": "RemoveClientIDFromOpenIDConnectProviderRequest"
            }
        },
        "RemoveRoleFromInstanceProfile": {
            "documentation": "<p>Removes the specified role from the specified instance profile.</p> <important> Make sure you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance will break any applications running on the instance. </important> <p> For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\">Working with Roles</a>. For more information about instance profiles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\">About Instance Profiles</a>. </p>",
            "input": {
                "shape": "RemoveRoleFromInstanceProfileRequest"
            }
        },
        "RemoveUserFromGroup": {
            "documentation": "<p>Removes the specified user from the specified group.</p>",
            "input": {
                "shape": "RemoveUserFromGroupRequest"
            }
        },
        "ResyncMFADevice": {
            "documentation": "<p>Synchronizes the specified MFA device with AWS servers.</p> <p>For more information about creating and working with virtual MFA devices, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\">Using a Virtual MFA Device</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "ResyncMFADeviceRequest"
            }
        },
        "SetDefaultPolicyVersion": {
            "documentation": "<p>Sets the specified version of the specified policy as the policy's default (operative) version. </p> <p>This action affects all users, groups, and roles that the policy is attached to. To list the users, groups, and roles that the policy is attached to, use the <a>ListEntitiesForPolicy</a> API. </p> <p>For information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "SetDefaultPolicyVersionRequest"
            }
        },
        "UpdateAccessKey": {
            "documentation": "<p>Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation work flow. </p> <p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p> <p>For information about rotating keys, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\">Managing Keys and Certificates</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "UpdateAccessKeyRequest"
            }
        },
        "UpdateAccountPasswordPolicy": {
            "documentation": "<p>Updates the password policy settings for the AWS account.</p> <note> <p>This action does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. </p> </note> <p> For more information about using a password policy, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\">Managing an IAM Password Policy</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "UpdateAccountPasswordPolicyRequest"
            }
        },
        "UpdateAssumeRolePolicy": {
            "documentation": "<p> Updates the policy that grants an entity permission to assume a role. For more information about roles, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html\">Using Roles to Delegate Permissions and Federate Identities</a>. </p>",
            "input": {
                "shape": "UpdateAssumeRolePolicyRequest"
            }
        },
        "UpdateGroup": {
            "documentation": "<p>Updates the name and/or the path of the specified group.</p> <important> You should understand the implications of changing a group's path or name. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\">Renaming Users and Groups</a> in the <i>Using IAM</i> guide. </important> <note>To change a group name the requester must have appropriate permissions on both the source object and the target object. For example, to change Managers to MGRs, the entity making the request must have permission on Managers and MGRs, or must have permission on all (*). For more information about permissions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\" target=\"blank\">Permissions and Policies</a>. </note>",
            "input": {
                "shape": "UpdateGroupRequest"
            }
        },
        "UpdateLoginProfile": {
            "documentation": "<p>Changes the password for the specified user.</p> <p>Users can change their own passwords by calling <a>ChangePassword</a>. For more information about modifying passwords, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\">Managing Passwords</a> in the <i>Using IAM</i> guide. </p>",
            "input": {
                "shape": "UpdateLoginProfileRequest"
            }
        },
        "UpdateOpenIDConnectProviderThumbprint": {
            "documentation": "<p>Replaces the existing list of server certificate thumbprints with a new list. </p> <p>The list that you pass with this action completely replaces the existing list of thumbprints. (The lists are not merged.)</p> <p>Typically, you need to update a thumbprint only when the identity provider's certificate changes, which occurs rarely. However, if the provider's certificate <i>does</i> change, any attempt to assume an IAM role that specifies the OIDC provider as a principal will fail until the certificate thumbprint is updated.</p> <note>Because trust for the OpenID Connect provider is ultimately derived from the provider's certificate and is validated by the thumbprint, it is a best practice to limit access to the <code>UpdateOpenIDConnectProviderThumbprint</code> action to highly-privileged users. </note>",
            "input": {
                "shape": "UpdateOpenIDConnectProviderThumbprintRequest"
            }
        },
        "UpdateSAMLProvider": {
            "documentation": "<p>Updates the metadata document for an existing SAML provider.</p> <note>This operation requires <a href=\"http://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>. </note>",
            "input": {
                "shape": "UpdateSAMLProviderRequest"
            },
            "output": {
                "shape": "UpdateSAMLProviderResponse"
            }
        },
        "UpdateSSHPublicKey": {
            "documentation": "<p>Sets the status of the specified SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This action can be used to disable a user's SSH public key as part of a key rotation work flow. </p> <p>The SSH public key affected by this action is used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
            "input": {
                "shape": "UpdateSSHPublicKeyRequest"
            }
        },
        "UpdateServerCertificate": {
            "documentation": "<p>Updates the name and/or the path of the specified server certificate.</p> <important> You should understand the implications of changing a server certificate's path or name. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html\">Managing Server Certificates</a> in the <i>Using IAM</i> guide. </important> <note>To change a server certificate name the requester must have appropriate permissions on both the source object and the target object. For example, to change the name from ProductionCert to ProdCert, the entity making the request must have permission on ProductionCert and ProdCert, or must have permission on all (*). For more information about permissions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\" target=\"blank\">Permissions and Policies</a>. </note>",
            "input": {
                "shape": "UpdateServerCertificateRequest"
            }
        },
        "UpdateSigningCertificate": {
            "documentation": "<p>Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a user's signing certificate as part of a certificate rotation work flow. </p> <p>If the <code>UserName</code> field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p>",
            "input": {
                "shape": "UpdateSigningCertificateRequest"
            }
        },
        "UpdateUser": {
            "documentation": "<p>Updates the name and/or the path of the specified user.</p> <important> You should understand the implications of changing a user's path or name. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\">Renaming Users and Groups</a> in the <i>Using IAM</i> guide. </important> <note> To change a user name the requester must have appropriate permissions on both the source object and the target object. For example, to change Bob to Robert, the entity making the request must have permission on Bob and Robert, or must have permission on all (*). For more information about permissions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PermissionsAndPolicies.html\" target=\"blank\">Permissions and Policies</a>. </note>",
            "input": {
                "shape": "UpdateUserRequest"
            }
        },
        "UploadSSHPublicKey": {
            "documentation": "<p>Uploads an SSH public key and associates it with the specified IAM user.</p> <p>The SSH public key uploaded by this action can be used only for authenticating the associated IAM user to an AWS CodeCommit repository. For more information about using SSH keys to authenticate to an AWS CodeCommit repository, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html\">Set up AWS CodeCommit for SSH Connections</a> in the <i>AWS CodeCommit User Guide</i>.</p>",
            "input": {
                "shape": "UploadSSHPublicKeyRequest"
            },
            "output": {
                "shape": "UploadSSHPublicKeyResponse"
            }
        },
        "UploadServerCertificate": {
            "documentation": "<p>Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded. </p> <p>For information about the number of server certificates you can upload, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\">Limitations on IAM Entities</a> in the <i>Using IAM</i> guide. </p> <note>Because the body of the public key certificate, private key, and the certificate chain can be large, you should use POST rather than GET when calling <code>UploadServerCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i> guide. </note>",
            "input": {
                "shape": "UploadServerCertificateRequest"
            },
            "output": {
                "shape": "UploadServerCertificateResponse"
            }
        },
        "UploadSigningCertificate": {
            "documentation": "<p>Uploads an X.509 signing certificate and associates it with the specified user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>. </p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. </p> <note>Because the body of a X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing AWS API Requests</a> in the <i>AWS General Reference</i>. For general information about using the Query API with IAM, go to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making Query Requests</a> in the <i>Using IAM</i>guide. </note>",
            "input": {
                "shape": "UploadSigningCertificateRequest"
            },
            "output": {
                "shape": "UploadSigningCertificateResponse"
            }
        }
    },
    "shapes": {
        "AccessKey": {
            "type": "structure",
            "documentation": "<p>Contains information about an AWS access key.</p> <p> This data type is used as a response element in the <a>CreateAccessKey</a> and <a>ListAccessKeys</a> actions. </p> <note>The <code>SecretAccessKey</code> value is returned only in response to <a>CreateAccessKey</a>. You can get a secret access key only when you first create an access key; you cannot recover the secret access key later. If you lose a secret access key, you must create a new access key. </note>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user that the access key is associated with.</p>"
                },
                {
                    "name": "AccessKeyId",
                    "shape": "accessKeyIdType",
                    "documentation": "<p>The ID for this access key.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p>The status of the access key. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not. </p>"
                },
                {
                    "name": "SecretAccessKey",
                    "shape": "accessKeySecretType",
                    "documentation": "<p>The secret key used to sign requests.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the access key was created.</p>"
                }
            ]
        },
        "AccessKeyLastUsed": {
            "type": "structure",
            "documentation": "<p>Contains information about the last time an AWS access key was used.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a> action.</p>",
            "members": [
                {
                    "name": "LastUsedDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the access key was most recently used. This field is null when:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul>"
                },
                {
                    "name": "ServiceName",
                    "shape": "stringType",
                    "documentation": "<p>The name of the AWS service with which this access key was most recently used. This field is null when:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul>"
                },
                {
                    "name": "Region",
                    "shape": "stringType",
                    "documentation": "<p>The AWS region where this access key was most recently used. This field is null when:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has never been used, at least not since IAM started tracking this information on April 22nd, 2015.</p> </li> <li> <p>There is no sign-in data associated with the user</p> </li> </ul> <p>For more information about AWS regions, see <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html\">Regions and Endpoints</a> in the Amazon Web Services General Reference.</p>"
                }
            ]
        },
        "AccessKeyMetadata": {
            "type": "structure",
            "documentation": "<p>Contains information about an AWS access key, without its secret key.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> action.</p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user that the key is associated with.</p>"
                },
                {
                    "name": "AccessKeyId",
                    "shape": "accessKeyIdType",
                    "documentation": "<p>The ID for this access key.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p>The status of the access key. <code>Active</code> means the key is valid for API calls; <code>Inactive</code> means it is not.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the access key was created.</p>"
                }
            ]
        },
        "AddClientIDToOpenIDConnectProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "OpenIDConnectProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to add the client ID to. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action. </p>"
                },
                {
                    "name": "ClientID",
                    "shape": "clientIDType",
                    "documentation": "<p>The client ID (also known as audience) to add to the IAM OpenID Connect provider.</p>"
                }
            ]
        },
        "AddRoleToInstanceProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "documentation": "<p>The name of the instance profile to update.</p>"
                },
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to add.</p>"
                }
            ]
        },
        "AddUserToGroupRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group to update.</p>"
                },
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to add.</p>"
                }
            ]
        },
        "AttachGroupPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the group to attach the policy to.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "AttachRolePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the role to attach the policy to.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "AttachUserPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the user to attach the policy to.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "AttachedPolicy": {
            "type": "structure",
            "documentation": "<p>Contains information about an attached policy.</p> <p>An attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a> actions. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The friendly name of the attached policy.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "BootstrapDatum": {
            "type": "blob"
        },
        "ChangePasswordRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "OldPassword",
                    "shape": "passwordType",
                    "documentation": "<p>The IAM user's current password.</p>"
                },
                {
                    "name": "NewPassword",
                    "shape": "passwordType",
                    "documentation": "<p>The new password. The new password must conform to the AWS account's password policy, if one exists.</p>"
                }
            ]
        },
        "CreateAccessKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The user name that the new key will belong to.</p>"
                }
            ]
        },
        "CreateAccessKeyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateAccessKey</a> request. </p>",
            "members": [
                {
                    "name": "AccessKey",
                    "shape": "AccessKey",
                    "documentation": "<p>Information about the access key.</p>"
                }
            ]
        },
        "CreateAccountAliasRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "AccountAlias",
                    "shape": "accountAliasType",
                    "documentation": "<p>The account alias to create.</p>"
                }
            ]
        },
        "CreateGroupRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
                },
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group to create. Do not include the path in this value.</p>"
                }
            ]
        },
        "CreateGroupResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateGroup</a> request. </p>",
            "members": [
                {
                    "name": "Group",
                    "shape": "Group",
                    "documentation": "<p>Information about the group.</p>"
                }
            ]
        },
        "CreateInstanceProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "documentation": "<p>The name of the instance profile to create.</p>"
                },
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path to the instance profile. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
                }
            ]
        },
        "CreateInstanceProfileResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateInstanceProfile</a> request. </p>",
            "members": [
                {
                    "name": "InstanceProfile",
                    "shape": "InstanceProfile",
                    "documentation": "<p>Information about the instance profile.</p>"
                }
            ]
        },
        "CreateLoginProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user to create a password for.</p>"
                },
                {
                    "name": "Password",
                    "shape": "passwordType",
                    "documentation": "<p>The new password for the user.</p>"
                },
                {
                    "name": "PasswordResetRequired",
                    "shape": "booleanType",
                    "documentation": "<p> Specifies whether the user is required to set a new password on next sign-in. </p>"
                }
            ]
        },
        "CreateLoginProfileResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateLoginProfile</a> request. </p>",
            "members": [
                {
                    "name": "LoginProfile",
                    "shape": "LoginProfile",
                    "documentation": "<p>The user name and password create date.</p>"
                }
            ]
        },
        "CreateOpenIDConnectProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Url",
                    "shape": "OpenIDConnectProviderUrlType",
                    "documentation": "<p>The URL of the identity provider. The URL must begin with \"https://\" and should correspond to the <code>iss</code> claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a host name, like \"https://server.example.org\" or \"https://example.com\". </p> <p>You cannot register the same provider multiple times in a single AWS account. If you try to submit a URL that has already been used for an OpenID Connect provider in the AWS account, you will get an error. </p>"
                },
                {
                    "name": "ClientIDList",
                    "shape": "clientIDListType",
                    "documentation": "<p>A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the <code>client_id</code> parameter on OAuth requests.) </p> <p>You can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider. </p> <p>There is no defined format for a client ID. The <code>CreateOpenIDConnectProviderRequest</code> action accepts client IDs up to 255 characters long. </p>"
                },
                {
                    "name": "ThumbprintList",
                    "shape": "thumbprintListType",
                    "documentation": "<p>A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s). Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.</p> <p>The server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string. </p> <p>You must provide at least one thumbprint when creating an IAM OIDC provider. For example, if the OIDC provider is <code>server.example.com</code> and the provider stores its keys at \"https://keys.server.example.com/openid-connect\", the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com. </p> <p>For more information about obtaining the OIDC provider's thumbprint, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/identity-providers-oidc-obtain-thumbprint.html\">Obtaining the Thumbprint for an OpenID Connect Provider</a> in the <i>Using IAM</i> guide. </p>"
                }
            ]
        },
        "CreateOpenIDConnectProviderResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateOpenIDConnectProvider</a> request. </p>",
            "members": [
                {
                    "name": "OpenIDConnectProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was created. For more information, see <a>OpenIDConnectProviderListEntry</a>. </p>"
                }
            ]
        },
        "CreatePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document.</p>"
                },
                {
                    "name": "Path",
                    "shape": "policyPathType",
                    "documentation": "<p>The path for the policy. </p> <p>For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/). </p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                },
                {
                    "name": "Description",
                    "shape": "policyDescriptionType",
                    "documentation": "<p>A friendly description of the policy. </p> <p>Typically used to store information about the permissions defined in the policy. For example, \"Grants access to production DynamoDB tables.\" </p> <p>The policy description is immutable. After a value is assigned, it cannot be changed. </p>"
                }
            ]
        },
        "CreatePolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreatePolicy</a> request. </p>",
            "members": [
                {
                    "name": "Policy",
                    "shape": "Policy",
                    "documentation": "<p>Information about the policy.</p>"
                }
            ]
        },
        "CreatePolicyVersionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                },
                {
                    "name": "SetAsDefault",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether to set this version as the policy's default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version; that is, the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>"
                }
            ]
        },
        "CreatePolicyVersionResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreatePolicyVersion</a> request. </p>",
            "members": [
                {
                    "name": "PolicyVersion",
                    "shape": "PolicyVersion",
                    "documentation": "<p>Information about the policy version.</p>"
                }
            ]
        },
        "CreateRoleRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
                },
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to create.</p>"
                },
                {
                    "name": "AssumeRolePolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy that grants an entity permission to assume the role.</p>"
                }
            ]
        },
        "CreateRoleResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateRole</a> request. </p>",
            "members": [
                {
                    "name": "Role",
                    "shape": "Role",
                    "documentation": "<p>Information about the role.</p>"
                }
            ]
        },
        "CreateSAMLProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SAMLMetadataDocument",
                    "shape": "SAMLMetadataDocumentType",
                    "documentation": "<p>An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. </p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\">Creating Temporary Security Credentials for SAML Federation</a> in the <i>Using Temporary Security Credentials</i> guide. </p>"
                },
                {
                    "name": "Name",
                    "shape": "SAMLProviderNameType",
                    "documentation": "<p>The name of the provider to create.</p>"
                }
            ]
        },
        "CreateSAMLProviderResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateSAMLProvider</a> request. </p>",
            "members": [
                {
                    "name": "SAMLProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider.</p>"
                }
            ]
        },
        "CreateUserRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path for the user name. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
                },
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user to create.</p>"
                }
            ]
        },
        "CreateUserResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateUser</a> request. </p>",
            "members": [
                {
                    "name": "User",
                    "shape": "User",
                    "documentation": "<p>Information about the user.</p>"
                }
            ]
        },
        "CreateVirtualMFADeviceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path for the virtual MFA device. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>"
                },
                {
                    "name": "VirtualMFADeviceName",
                    "shape": "virtualMFADeviceName",
                    "documentation": "<p> The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device. </p>"
                }
            ]
        },
        "CreateVirtualMFADeviceResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>CreateVirtualMFADevice</a> request. </p>",
            "members": [
                {
                    "name": "VirtualMFADevice",
                    "shape": "VirtualMFADevice",
                    "documentation": "<p>A newly created virtual MFA device.</p>"
                }
            ]
        },
        "CredentialReportExpiredException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the most recent credential report has expired. To generate a new credential report, use <a>GenerateCredentialReport</a>. For more information about credential report expiration, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Getting Credential Reports</a> in the <i>Using IAM</i> guide.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "credentialReportExpiredExceptionMessage"
                }
            ]
        },
        "CredentialReportNotPresentException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the credential report does not exist. To generate a credential report, use <a>GenerateCredentialReport</a>.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "credentialReportNotPresentExceptionMessage"
                }
            ]
        },
        "CredentialReportNotReadyException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the credential report is still being generated.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "credentialReportNotReadyExceptionMessage"
                }
            ]
        },
        "DeactivateMFADeviceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user whose MFA device you want to deactivate.</p>"
                },
                {
                    "name": "SerialNumber",
                    "shape": "serialNumberType",
                    "documentation": "<p> The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. </p>"
                }
            ]
        },
        "DeleteAccessKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user whose key you want to delete.</p>"
                },
                {
                    "name": "AccessKeyId",
                    "shape": "accessKeyIdType",
                    "documentation": "<p>The access key ID for the access key ID and secret access key you want to delete.</p>"
                }
            ]
        },
        "DeleteAccountAliasRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "AccountAlias",
                    "shape": "accountAliasType",
                    "documentation": "<p>The name of the account alias to delete.</p>"
                }
            ]
        },
        "DeleteConflictException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because it attempted to delete a resource that has attached subordinate entities. The error message describes these entities. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "deleteConflictMessage"
                }
            ]
        },
        "DeleteGroupPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name (friendly name, not ARN) identifying the group that the policy is embedded in.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name identifying the policy document to delete.</p>"
                }
            ]
        },
        "DeleteGroupRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group to delete.</p>"
                }
            ]
        },
        "DeleteInstanceProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "documentation": "<p>The name of the instance profile to delete.</p>"
                }
            ]
        },
        "DeleteLoginProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user whose password you want to delete.</p>"
                }
            ]
        },
        "DeleteOpenIDConnectProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "OpenIDConnectProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete. You can get a list of OpenID Connect provider ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p>"
                }
            ]
        },
        "DeletePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "DeletePolicyVersionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                },
                {
                    "name": "VersionId",
                    "shape": "policyVersionIdType",
                    "documentation": "<p>The policy version to delete.</p> <p>For more information about managed policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>"
                }
            ]
        },
        "DeleteRolePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name (friendly name, not ARN) identifying the role that the policy is embedded in.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name identifying the policy document to delete.</p>"
                }
            ]
        },
        "DeleteRoleRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to delete.</p>"
                }
            ]
        },
        "DeleteSAMLProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SAMLProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider to delete.</p>"
                }
            ]
        },
        "DeleteSSHPublicKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user associated with the SSH public key.</p>"
                },
                {
                    "name": "SSHPublicKeyId",
                    "shape": "publicKeyIdType",
                    "documentation": "<p>The unique identifier for the SSH public key.</p>"
                }
            ]
        },
        "DeleteServerCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "documentation": "<p>The name of the server certificate you want to delete.</p>"
                }
            ]
        },
        "DeleteSigningCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user the signing certificate belongs to.</p>"
                },
                {
                    "name": "CertificateId",
                    "shape": "certificateIdType",
                    "documentation": "<p>The ID of the signing certificate to delete.</p>"
                }
            ]
        },
        "DeleteUserPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name identifying the policy document to delete.</p>"
                }
            ]
        },
        "DeleteUserRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to delete.</p>"
                }
            ]
        },
        "DeleteVirtualMFADeviceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SerialNumber",
                    "shape": "serialNumberType",
                    "documentation": "<p> The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN. </p>"
                }
            ]
        },
        "DetachGroupPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the group to detach the policy from.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "DetachRolePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the role to detach the policy from.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "DetachUserPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the user to detach the policy from.</p>"
                },
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "DuplicateCertificateException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the same certificate is associated with an IAM user in the account. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "duplicateCertificateMessage"
                }
            ]
        },
        "DuplicateSSHPublicKeyException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the SSH public key is already associated with the specified IAM user.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "duplicateSSHPublicKeyMessage"
                }
            ]
        },
        "EnableMFADeviceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user for whom you want to enable the MFA device.</p>"
                },
                {
                    "name": "SerialNumber",
                    "shape": "serialNumberType",
                    "documentation": "<p> The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. </p>"
                },
                {
                    "name": "AuthenticationCode1",
                    "shape": "authenticationCodeType",
                    "documentation": "<p>An authentication code emitted by the device.</p>"
                },
                {
                    "name": "AuthenticationCode2",
                    "shape": "authenticationCodeType",
                    "documentation": "<p>A subsequent authentication code emitted by the device.</p>"
                }
            ]
        },
        "EntityAlreadyExistsException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because it attempted to create a resource that already exists.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "entityAlreadyExistsMessage"
                }
            ]
        },
        "EntityTemporarilyUnmodifiableException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because it referenced an entity that is temporarily unmodifiable, such as a user name that was deleted and then recreated. The error indicates that the request is likely to succeed if you try again after waiting several minutes. The error message describes the entity. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "entityTemporarilyUnmodifiableMessage"
                }
            ]
        },
        "EntityType": {
            "type": "string"
        },
        "GenerateCredentialReportResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GenerateCredentialReport</a> request. </p>",
            "members": [
                {
                    "name": "State",
                    "shape": "ReportStateType",
                    "documentation": "<p>Information about the state of the credential report.</p>"
                },
                {
                    "name": "Description",
                    "shape": "ReportStateDescriptionType",
                    "documentation": "<p>Information about the credential report.</p>"
                }
            ]
        },
        "GetAccessKeyLastUsedRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "AccessKeyId",
                    "shape": "accessKeyIdType",
                    "documentation": "<p>The identifier of an access key.</p>"
                }
            ]
        },
        "GetAccessKeyLastUsedResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetAccessKeyLastUsed</a> request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure returned by the <a>ListAccessKeys</a> action.</p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the AWS IAM user that owns this access key.</p>"
                },
                {
                    "name": "AccessKeyLastUsed",
                    "shape": "AccessKeyLastUsed",
                    "documentation": "<p>Contains information about the last time the access key was used.</p>"
                }
            ]
        },
        "GetAccountAuthorizationDetailsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Filter",
                    "shape": "entityListType",
                    "documentation": "<p>A list of entity types (user, group, role, local managed policy, or AWS managed policy) for filtering the results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                }
            ]
        },
        "GetAccountAuthorizationDetailsResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetAccountAuthorizationDetails</a> request. </p>",
            "members": [
                {
                    "name": "UserDetailList",
                    "shape": "userDetailListType",
                    "documentation": "<p>A list containing information about IAM users.</p>"
                },
                {
                    "name": "GroupDetailList",
                    "shape": "groupDetailListType",
                    "documentation": "<p>A list containing information about IAM groups.</p>"
                },
                {
                    "name": "RoleDetailList",
                    "shape": "roleDetailListType",
                    "documentation": "<p>A list containing information about IAM roles.</p>"
                },
                {
                    "name": "Policies",
                    "shape": "ManagedPolicyDetailListType",
                    "documentation": "<p>A list containing information about managed policies.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "GetAccountPasswordPolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetAccountPasswordPolicy</a> request. </p>",
            "members": [
                {
                    "name": "PasswordPolicy",
                    "shape": "PasswordPolicy"
                }
            ]
        },
        "GetAccountSummaryResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetAccountSummary</a> request. </p>",
            "members": [
                {
                    "name": "SummaryMap",
                    "shape": "summaryMapType",
                    "documentation": "<p>A set of key value pairs containing information about IAM entity usage and IAM quotas.</p> <p> <code>SummaryMap</code> contains the following keys: <ul> <li> <p><b>AccessKeysPerUserQuota</b></p> <p>The maximum number of active access keys allowed for each IAM user.</p> </li> <li> <p><b>AccountAccessKeysPresent</b></p> <p>This value is 1 if the AWS account (root) has an access key, otherwise it is 0.</p> </li> <li> <p><b>AccountMFAEnabled</b></p> <p>This value is 1 if the AWS account (root) has an MFA device assigned, otherwise it is 0.</p> </li> <li> <p><b>AccountSigningCertificatesPresent</b></p> <p>This value is 1 if the AWS account (root) has a signing certificate, otherwise it is 0.</p> </li> <li> <p><b>AssumeRolePolicySizeQuota</b></p> <p>The maximum allowed size for assume role policy documents (trust policies), in non-whitespace characters.</p> </li> <li> <p><b>AttachedPoliciesPerGroupQuota</b></p> <p>The maximum number of managed policies that can be attached to an IAM group. </p> </li> <li> <p><b>AttachedPoliciesPerRoleQuota</b></p> <p>The maximum number of managed policies that can be attached to an IAM role. </p> </li> <li> <p><b>AttachedPoliciesPerUserQuota</b></p> <p>The maximum number of managed policies that can be attached to an IAM user. </p> </li> <li> <p><b>GroupPolicySizeQuota</b></p> <p>The maximum allowed size for the aggregate of all inline policies embedded in an IAM group, in non-whitespace characters. </p> </li> <li> <p><b>Groups</b></p> <p>The number of IAM groups in the AWS account.</p> </li> <li> <p><b>GroupsPerUserQuota</b></p> <p>The maximum number of IAM groups each IAM user can belong to. </p> </li> <li> <p><b>GroupsQuota</b></p> <p>The maximum number of IAM groups allowed in the AWS account. </p> </li> <li> <p><b>InstanceProfiles</b></p> <p>The number of instance profiles in the AWS account. </p> </li> <li> <p><b>InstanceProfilesQuota</b></p> <p>The maximum number of instance profiles allowed in the AWS account. </p> </li> <li> <p><b>MFADevices</b></p> <p>The number of MFA devices in the AWS account, including those assigned and unassigned. </p> </li> <li> <p><b>MFADevicesInUse</b></p> <p>The number of MFA devices that have been assigned to an IAM user or to the AWS account (root). </p> </li> <li> <p><b>Policies</b></p> <p>The number of customer managed policies in the AWS account. </p> </li> <li> <p><b>PoliciesQuota</b></p> <p>The maximum number of customer managed policies allowed in the AWS account. </p> </li> <li> <p><b>PolicySizeQuota</b></p> <p>The maximum allowed size of a customer managed policy, in non-whitespace characters. </p> </li> <li> <p><b>PolicyVersionsInUse</b></p> <p>The number of managed policies that are attached to IAM users, groups, or roles in the AWS account. </p> </li> <li> <p><b>PolicyVersionsInUseQuota</b></p> <p>The maximum number of managed policies that can be attached to IAM users, groups, or roles in the AWS account. </p> </li> <li> <p><b>Providers</b></p> <p>The number of identity providers in the AWS account. </p> </li> <li> <p><b>RolePolicySizeQuota</b></p> <p>The maximum allowed size for the aggregate of all inline policies (access policies, not the trust policy) embedded in an IAM role, in non-whitespace characters. </p> </li> <li> <p><b>Roles</b></p> <p>The number of IAM roles in the AWS account. </p> </li> <li> <p><b>RolesQuota</b></p> <p>The maximum number of IAM roles allowed in the AWS account. </p> </li> <li> <p><b>ServerCertificates</b></p> <p>The number of server certificates in the AWS account. </p> </li> <li> <p><b>ServerCertificatesQuota</b></p> <p>The maximum number of server certificates allowed in the AWS account. </p> </li> <li> <p><b>SigningCertificatesPerUserQuota</b></p> <p>The maximum number of X.509 signing certificates allowed for each IAM user. </p> </li> <li> <p><b>UserPolicySizeQuota</b></p> <p>The maximum allowed size for the aggregate of all inline policies embedded in an IAM user, in non-whitespace characters. </p> </li> <li> <p><b>Users</b></p> <p>The number of IAM users in the AWS account. </p> </li> <li> <p><b>UsersQuota</b></p> <p>The maximum number of IAM users allowed in the AWS account. </p> </li> <li> <p><b>VersionsPerPolicyQuota</b></p> <p>The maximum number of policy versions allowed for each managed policy. </p> </li> </ul> </p>"
                }
            ]
        },
        "GetCredentialReportResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetCredentialReport</a> request. </p>",
            "members": [
                {
                    "name": "Content",
                    "shape": "ReportContentType",
                    "documentation": "<p>Contains the credential report. The report is Base64-encoded.</p>"
                },
                {
                    "name": "ReportFormat",
                    "shape": "ReportFormatType",
                    "documentation": "<p>The format (MIME type) of the credential report.</p>"
                },
                {
                    "name": "GeneratedTime",
                    "shape": "dateType",
                    "documentation": "<p> The date and time when the credential report was created, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>. </p>"
                }
            ]
        },
        "GetGroupPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group the policy is associated with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document to get.</p>"
                }
            ]
        },
        "GetGroupPolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetGroupPolicy</a> request. </p>",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The group the policy is associated with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "GetGroupRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "GetGroupResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetGroup</a> request. </p>",
            "members": [
                {
                    "name": "Group",
                    "shape": "Group",
                    "documentation": "<p>Information about the group.</p>"
                },
                {
                    "name": "Users",
                    "shape": "userListType",
                    "documentation": "<p>A list of users in the group.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "GetInstanceProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "documentation": "<p>The name of the instance profile to get information about.</p>"
                }
            ]
        },
        "GetInstanceProfileResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetInstanceProfile</a> request. </p>",
            "members": [
                {
                    "name": "InstanceProfile",
                    "shape": "InstanceProfile",
                    "documentation": "<p>Information about the instance profile.</p>"
                }
            ]
        },
        "GetLoginProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user whose login profile you want to retrieve.</p>"
                }
            ]
        },
        "GetLoginProfileResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetLoginProfile</a> request. </p>",
            "members": [
                {
                    "name": "LoginProfile",
                    "shape": "LoginProfile",
                    "documentation": "<p>The user name and password create date for the user.</p>"
                }
            ]
        },
        "GetOpenIDConnectProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "OpenIDConnectProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to get information for. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p>"
                }
            ]
        },
        "GetOpenIDConnectProviderResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetOpenIDConnectProvider</a> request. </p>",
            "members": [
                {
                    "name": "Url",
                    "shape": "OpenIDConnectProviderUrlType",
                    "documentation": "<p>The URL that the IAM OpenID Connect provider is associated with. For more information, see <a>CreateOpenIDConnectProvider</a>. </p>"
                },
                {
                    "name": "ClientIDList",
                    "shape": "clientIDListType",
                    "documentation": "<p>A list of client IDs (also known as audiences) that are associated with the specified IAM OpenID Connect provider. For more information, see <a>CreateOpenIDConnectProvider</a>. </p>"
                },
                {
                    "name": "ThumbprintList",
                    "shape": "thumbprintListType",
                    "documentation": "<p>A list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see <a>CreateOpenIDConnectProvider</a>. </p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time when the IAM OpenID Connect provider entity was created in the AWS account. </p>"
                }
            ]
        },
        "GetPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                }
            ]
        },
        "GetPolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetPolicy</a> request. </p>",
            "members": [
                {
                    "name": "Policy",
                    "shape": "Policy",
                    "documentation": "<p>Information about the policy.</p>"
                }
            ]
        },
        "GetPolicyVersionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                },
                {
                    "name": "VersionId",
                    "shape": "policyVersionIdType",
                    "documentation": "<p>Identifies the policy version to retrieve.</p>"
                }
            ]
        },
        "GetPolicyVersionResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetPolicyVersion</a> request. </p>",
            "members": [
                {
                    "name": "PolicyVersion",
                    "shape": "PolicyVersion",
                    "documentation": "<p>Information about the policy version.</p> <p>For more information about managed policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>"
                }
            ]
        },
        "GetRolePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role associated with the policy.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document to get.</p>"
                }
            ]
        },
        "GetRolePolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetRolePolicy</a> request. </p>",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The role the policy is associated with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "GetRoleRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to get information about.</p>"
                }
            ]
        },
        "GetRoleResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetRole</a> request. </p>",
            "members": [
                {
                    "name": "Role",
                    "shape": "Role",
                    "documentation": "<p>Information about the role.</p>"
                }
            ]
        },
        "GetSAMLProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SAMLProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider to get information about.</p>"
                }
            ]
        },
        "GetSAMLProviderResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetSAMLProvider</a> request. </p>",
            "members": [
                {
                    "name": "SAMLMetadataDocument",
                    "shape": "SAMLMetadataDocumentType",
                    "documentation": "<p>The XML metadata document that includes information about an identity provider.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time when the SAML provider was created.</p>"
                },
                {
                    "name": "ValidUntil",
                    "shape": "dateType",
                    "documentation": "<p>The expiration date and time for the SAML provider.</p>"
                }
            ]
        },
        "GetSSHPublicKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user associated with the SSH public key.</p>"
                },
                {
                    "name": "SSHPublicKeyId",
                    "shape": "publicKeyIdType",
                    "documentation": "<p>The unique identifier for the SSH public key.</p>"
                },
                {
                    "name": "Encoding",
                    "shape": "encodingType",
                    "documentation": "<p>Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.</p>"
                }
            ]
        },
        "GetSSHPublicKeyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetSSHPublicKey</a> request.</p>",
            "members": [
                {
                    "name": "SSHPublicKey",
                    "shape": "SSHPublicKey",
                    "documentation": "<p>Information about the SSH public key.</p>"
                }
            ]
        },
        "GetServerCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "documentation": "<p>The name of the server certificate you want to retrieve information about.</p>"
                }
            ]
        },
        "GetServerCertificateResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetServerCertificate</a> request. </p>",
            "members": [
                {
                    "name": "ServerCertificate",
                    "shape": "ServerCertificate",
                    "documentation": "<p>Information about the server certificate.</p>"
                }
            ]
        },
        "GetUserPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user who the policy is associated with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document to get.</p>"
                }
            ]
        },
        "GetUserPolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetUserPolicy</a> request. </p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The user the policy is associated with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "GetUserRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to get information about.</p> <p>This parameter is optional. If it is not included, it defaults to the user making the request.</p>"
                }
            ]
        },
        "GetUserResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>GetUser</a> request. </p>",
            "members": [
                {
                    "name": "User",
                    "shape": "User",
                    "documentation": "<p>Information about the user.</p>"
                }
            ]
        },
        "Group": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM group entity.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li> <a>CreateGroup</a> </li> <li> <a>GetGroup</a> </li> <li> <a>ListGroups</a> </li> </ul>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p>The path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The friendly name that identifies the group.</p>"
                },
                {
                    "name": "GroupId",
                    "shape": "idType",
                    "documentation": "<p> The stable and unique string identifying the group. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType",
                    "documentation": "<p> The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the group was created.</p>"
                }
            ]
        },
        "GroupDetail": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM group, including all of the group's policies. </p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p>The path to the group. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The friendly name that identifies the group.</p>"
                },
                {
                    "name": "GroupId",
                    "shape": "idType",
                    "documentation": "<p>The stable and unique string identifying the group. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the group was created.</p>"
                },
                {
                    "name": "GroupPolicyList",
                    "shape": "policyDetailListType",
                    "documentation": "<p>A list of the inline policies embedded in the group.</p>"
                },
                {
                    "name": "AttachedManagedPolicies",
                    "shape": "attachedPoliciesListType",
                    "documentation": "<p>A list of the managed policies attached to the group.</p>"
                }
            ]
        },
        "InstanceProfile": {
            "type": "structure",
            "documentation": "<p>Contains information about an instance profile.</p> <p>This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p> <a>GetInstanceProfile</a> </p> </li> <li> <p> <a>ListInstanceProfiles</a> </p> </li> <li> <p> <a>ListInstanceProfilesForRole</a> </p> </li> </ul>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path to the instance profile. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "InstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "documentation": "<p>The name identifying the instance profile.</p>"
                },
                {
                    "name": "InstanceProfileId",
                    "shape": "idType",
                    "documentation": "<p> The stable and unique string identifying the instance profile. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType",
                    "documentation": "<p> The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the instance profile was created.</p>"
                },
                {
                    "name": "Roles",
                    "shape": "roleListType",
                    "documentation": "<p>The role associated with the instance profile.</p>"
                }
            ]
        },
        "InvalidAuthenticationCodeException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the authentication code was not recognized. The error message describes the specific error. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "invalidAuthenticationCodeMessage"
                }
            ]
        },
        "InvalidCertificateException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the certificate is invalid.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "invalidCertificateMessage"
                }
            ]
        },
        "InvalidInputException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because an invalid or out-of-range value was supplied for an input parameter.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "invalidInputMessage"
                }
            ]
        },
        "InvalidPublicKeyException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the public key is malformed or otherwise invalid.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "invalidPublicKeyMessage"
                }
            ]
        },
        "InvalidUserTypeException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the type of user for the transaction was incorrect.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "invalidUserTypeMessage"
                }
            ]
        },
        "KeyPairMismatchException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the public key certificate and the private key do not match.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "keyPairMismatchMessage"
                }
            ]
        },
        "LimitExceededException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because it attempted to create resources beyond the current AWS account limits. The error message describes the limit exceeded. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "limitExceededMessage"
                }
            ]
        },
        "ListAccessKeysRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListAccessKeysResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListAccessKeys</a> request. </p>",
            "members": [
                {
                    "name": "AccessKeyMetadata",
                    "shape": "accessKeyMetadataListType",
                    "documentation": "<p>A list of access key metadata.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListAccountAliasesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListAccountAliasesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListAccountAliases</a> request. </p>",
            "members": [
                {
                    "name": "AccountAliases",
                    "shape": "accountAliasListType",
                    "documentation": "<p>A list of aliases associated with the account.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListAttachedGroupPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the group to list attached policies for.</p>"
                },
                {
                    "name": "PathPrefix",
                    "shape": "policyPathType",
                    "documentation": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListAttachedGroupPoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListAttachedGroupPolicies</a> request. </p>",
            "members": [
                {
                    "name": "AttachedPolicies",
                    "shape": "attachedPoliciesListType",
                    "documentation": "<p>A list of the attached policies.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListAttachedRolePoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the role to list attached policies for.</p>"
                },
                {
                    "name": "PathPrefix",
                    "shape": "policyPathType",
                    "documentation": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListAttachedRolePoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListAttachedRolePolicies</a> request. </p>",
            "members": [
                {
                    "name": "AttachedPolicies",
                    "shape": "attachedPoliciesListType",
                    "documentation": "<p>A list of the attached policies.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListAttachedUserPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name (friendly name, not ARN) of the user to list attached policies for.</p>"
                },
                {
                    "name": "PathPrefix",
                    "shape": "policyPathType",
                    "documentation": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListAttachedUserPoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListAttachedUserPolicies</a> request. </p>",
            "members": [
                {
                    "name": "AttachedPolicies",
                    "shape": "attachedPoliciesListType",
                    "documentation": "<p>A list of the attached policies.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListEntitiesForPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                },
                {
                    "name": "EntityFilter",
                    "shape": "EntityType",
                    "documentation": "<p>The entity type to use for filtering the results. </p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. </p>"
                },
                {
                    "name": "PathPrefix",
                    "shape": "pathType",
                    "documentation": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListEntitiesForPolicyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListEntitiesForPolicy</a> request. </p>",
            "members": [
                {
                    "name": "PolicyGroups",
                    "shape": "PolicyGroupListType",
                    "documentation": "<p>A list of groups that the policy is attached to.</p>"
                },
                {
                    "name": "PolicyUsers",
                    "shape": "PolicyUserListType",
                    "documentation": "<p>A list of users that the policy is attached to.</p>"
                },
                {
                    "name": "PolicyRoles",
                    "shape": "PolicyRoleListType",
                    "documentation": "<p>A list of roles that the policy is attached to.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListGroupPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group to list policies for.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListGroupPoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListGroupPolicies</a> request. </p>",
            "members": [
                {
                    "name": "PolicyNames",
                    "shape": "policyNameListType",
                    "documentation": "<p>A list of policy names.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListGroupsForUserRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to list groups for.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListGroupsForUserResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListGroupsForUser</a> request. </p>",
            "members": [
                {
                    "name": "Groups",
                    "shape": "groupListType",
                    "documentation": "<p>A list of groups.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListGroupsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PathPrefix",
                    "shape": "pathPrefixType",
                    "documentation": "<p> The path prefix for filtering the results. For example, the prefix <code>/division_abc/subdivision_xyz/</code> gets all groups whose path starts with <code>/division_abc/subdivision_xyz/</code>. </p> <p> This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. </p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListGroupsResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListGroups</a> request. </p>",
            "members": [
                {
                    "name": "Groups",
                    "shape": "groupListType",
                    "documentation": "<p>A list of groups.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListInstanceProfilesForRoleRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to list instance profiles for.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListInstanceProfilesForRoleResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListInstanceProfilesForRole</a> request. </p>",
            "members": [
                {
                    "name": "InstanceProfiles",
                    "shape": "instanceProfileListType",
                    "documentation": "<p>A list of instance profiles.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListInstanceProfilesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PathPrefix",
                    "shape": "pathPrefixType",
                    "documentation": "<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all instance profiles whose path starts with <code>/application_abc/component_xyz/</code>. </p> <p> This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. </p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListInstanceProfilesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListInstanceProfiles</a> request. </p>",
            "members": [
                {
                    "name": "InstanceProfiles",
                    "shape": "instanceProfileListType",
                    "documentation": "<p>A list of instance profiles.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListMFADevicesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user whose MFA devices you want to list.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListMFADevicesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListMFADevices</a> request. </p>",
            "members": [
                {
                    "name": "MFADevices",
                    "shape": "mfaDeviceListType",
                    "documentation": "<p>A list of MFA devices.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListOpenIDConnectProvidersRequest": {
            "type": "structure",
            "members": []
        },
        "ListOpenIDConnectProvidersResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListOpenIDConnectProviders</a> request. </p>",
            "members": [
                {
                    "name": "OpenIDConnectProviderList",
                    "shape": "OpenIDConnectProviderListType",
                    "documentation": "<p>The list of IAM OpenID Connect providers in the AWS account.</p>"
                }
            ]
        },
        "ListPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Scope",
                    "shape": "policyScopeType",
                    "documentation": "<p>The scope to use for filtering the results. </p> <p>To list only AWS managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your AWS account, set <code>Scope</code> to <code>Local</code>. </p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>"
                },
                {
                    "name": "OnlyAttached",
                    "shape": "booleanType",
                    "documentation": "<p>A flag to filter the results to only the attached policies. </p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to a user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>"
                },
                {
                    "name": "PathPrefix",
                    "shape": "policyPathType",
                    "documentation": "<p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListPoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListPolicies</a> request. </p>",
            "members": [
                {
                    "name": "Policies",
                    "shape": "policyListType",
                    "documentation": "<p>A list of policies.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListPolicyVersionsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListPolicyVersionsResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListPolicyVersions</a> request. </p>",
            "members": [
                {
                    "name": "Versions",
                    "shape": "policyDocumentVersionListType",
                    "documentation": "<p>A list of policy versions.</p> <p>For more information about managed policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListRolePoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to list policies for.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListRolePoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListRolePolicies</a> request. </p>",
            "members": [
                {
                    "name": "PolicyNames",
                    "shape": "policyNameListType",
                    "documentation": "<p>A list of policy names.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListRolesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PathPrefix",
                    "shape": "pathPrefixType",
                    "documentation": "<p> The path prefix for filtering the results. For example, the prefix <code>/application_abc/component_xyz/</code> gets all roles whose path starts with <code>/application_abc/component_xyz/</code>. </p> <p> This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. </p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListRolesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListRoles</a> request. </p>",
            "members": [
                {
                    "name": "Roles",
                    "shape": "roleListType",
                    "documentation": "<p>A list of roles.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListSAMLProvidersRequest": {
            "type": "structure",
            "members": []
        },
        "ListSAMLProvidersResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListSAMLProviders</a> request. </p>",
            "members": [
                {
                    "name": "SAMLProviderList",
                    "shape": "SAMLProviderListType",
                    "documentation": "<p>The list of SAML providers for this account.</p>"
                }
            ]
        },
        "ListSSHPublicKeysRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user to list SSH public keys for. If none is specified, the UserName field is determined implicitly based on the AWS access key used to sign the request.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListSSHPublicKeysResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListSSHPublicKeys</a> request.</p>",
            "members": [
                {
                    "name": "SSHPublicKeys",
                    "shape": "SSHPublicKeyListType",
                    "documentation": "<p>A list of SSH public keys.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListServerCertificatesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PathPrefix",
                    "shape": "pathPrefixType",
                    "documentation": "<p> The path prefix for filtering the results. For example: <code>/company/servercerts</code> would get all server certificates for which the path starts with <code>/company/servercerts</code>. </p> <p> This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. </p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListServerCertificatesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListServerCertificates</a> request. </p>",
            "members": [
                {
                    "name": "ServerCertificateMetadataList",
                    "shape": "serverCertificateMetadataListType",
                    "documentation": "<p>A list of server certificates.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListSigningCertificatesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListSigningCertificatesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListSigningCertificates</a> request. </p>",
            "members": [
                {
                    "name": "Certificates",
                    "shape": "certificateListType",
                    "documentation": "<p>A list of the user's signing certificate information.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListUserPoliciesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to list policies for.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListUserPoliciesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListUserPolicies</a> request. </p>",
            "members": [
                {
                    "name": "PolicyNames",
                    "shape": "policyNameListType",
                    "documentation": "<p>A list of policy names.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListUsersRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PathPrefix",
                    "shape": "pathPrefixType",
                    "documentation": "<p> The path prefix for filtering the results. For example: <code>/division_abc/subdivision_xyz/</code>, which would get all user names whose path starts with <code>/division_abc/subdivision_xyz/</code>. </p> <p> This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. </p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListUsersResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListUsers</a> request. </p>",
            "members": [
                {
                    "name": "Users",
                    "shape": "userListType",
                    "documentation": "<p>A list of users.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "ListVirtualMFADevicesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "AssignmentStatus",
                    "shape": "assignmentStatusType",
                    "documentation": "<p> The status (unassigned or assigned) of the devices to list. If you do not specify an <code>AssignmentStatus</code>, the action defaults to <code>Any</code> which lists both assigned and unassigned virtual MFA devices. </p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>Use this parameter only when paginating results and only after you have received a response where the results are truncated. Set it to the value of the <code>Marker</code> element in the response you just received.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "maxItemsType",
                    "documentation": "<p>Use this only when paginating results to indicate the maximum number of items you want in the response. If there are additional items beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>This parameter is optional. If you do not include it, it defaults to 100.</p>"
                }
            ]
        },
        "ListVirtualMFADevicesResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>ListVirtualMFADevices</a> request. </p>",
            "members": [
                {
                    "name": "VirtualMFADevices",
                    "shape": "virtualMFADeviceListType",
                    "documentation": "<p> The list of virtual MFA devices in the current account that match the <code>AssignmentStatus</code> value that was passed in the request. </p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "booleanType",
                    "documentation": "<p>A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "markerType",
                    "documentation": "<p>When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.</p>"
                }
            ]
        },
        "LoginProfile": {
            "type": "structure",
            "documentation": "<p>Contains the user name and password create date for a user.</p> <p> This data type is used as a response element in the <a>CreateLoginProfile</a> and <a>GetLoginProfile</a> actions. </p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user, which can be used for signing in to the AWS Management Console.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the password for the user was created.</p>"
                },
                {
                    "name": "PasswordResetRequired",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether the user is required to set a new password on next sign-in.</p>"
                }
            ]
        },
        "MFADevice": {
            "type": "structure",
            "documentation": "<p>Contains information about an MFA device.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> action.</p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The user with whom the MFA device is associated.</p>"
                },
                {
                    "name": "SerialNumber",
                    "shape": "serialNumberType",
                    "documentation": "<p> The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. </p>"
                },
                {
                    "name": "EnableDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the MFA device was enabled for the user.</p>"
                }
            ]
        },
        "MalformedCertificateException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the certificate was malformed or expired. The error message describes the specific error. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "malformedCertificateMessage"
                }
            ]
        },
        "MalformedPolicyDocumentException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the policy document was malformed. The error message describes the specific error. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "malformedPolicyDocumentMessage"
                }
            ]
        },
        "ManagedPolicyDetail": {
            "type": "structure",
            "documentation": "<p>Contains information about a managed policy, including the policy's ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p> <p>For more information about managed policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The friendly name (not ARN) identifying the policy.</p>"
                },
                {
                    "name": "PolicyId",
                    "shape": "idType",
                    "documentation": "<p>The stable and unique string identifying the policy. </p> <p>For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType"
                },
                {
                    "name": "Path",
                    "shape": "policyPathType",
                    "documentation": "<p>The path to the policy.</p> <p>For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "DefaultVersionId",
                    "shape": "policyVersionIdType",
                    "documentation": "<p>The identifier for the version of the policy that is set as the default (operative) version. </p> <p>For more information about policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "AttachmentCount",
                    "shape": "attachmentCountType",
                    "documentation": "<p>The number of principal entities (users, groups, and roles) that the policy is attached to.</p>"
                },
                {
                    "name": "IsAttachable",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether the policy can be attached to an IAM user, group, or role. </p>"
                },
                {
                    "name": "Description",
                    "shape": "policyDescriptionType",
                    "documentation": "<p>A friendly description of the policy.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the policy was created.</p>"
                },
                {
                    "name": "UpdateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created. </p>"
                },
                {
                    "name": "PolicyVersionList",
                    "shape": "policyDocumentVersionListType",
                    "documentation": "<p>A list containing information about the versions of the policy.</p>"
                }
            ]
        },
        "ManagedPolicyDetailListType": {
            "type": "list",
            "of": "ManagedPolicyDetail"
        },
        "NoSuchEntityException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because it referenced an entity that does not exist. The error message describes the entity. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "noSuchEntityMessage"
                }
            ]
        },
        "OpenIDConnectProviderListEntry": {
            "type": "structure",
            "documentation": "<p>Contains the Amazon Resource Name (ARN) for an IAM OpenID Connect provider.</p>",
            "members": [
                {
                    "name": "Arn",
                    "shape": "arnType"
                }
            ]
        },
        "OpenIDConnectProviderListType": {
            "type": "list",
            "documentation": "<p>Contains a list of IAM OpenID Connect providers.</p>",
            "of": "OpenIDConnectProviderListEntry"
        },
        "OpenIDConnectProviderUrlType": {
            "type": "string",
            "documentation": "<p>Contains a URL that specifies the endpoint for an OpenID Connect provider.</p>"
        },
        "PasswordPolicy": {
            "type": "structure",
            "documentation": "<p>Contains information about the account password policy.</p> <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> action. </p>",
            "members": [
                {
                    "name": "MinimumPasswordLength",
                    "shape": "minimumPasswordLengthType",
                    "documentation": "<p>Minimum length to require for IAM user passwords.</p>"
                },
                {
                    "name": "RequireSymbols",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether to require symbols for IAM user passwords.</p>"
                },
                {
                    "name": "RequireNumbers",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether to require numbers for IAM user passwords.</p>"
                },
                {
                    "name": "RequireUppercaseCharacters",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether to require uppercase characters for IAM user passwords.</p>"
                },
                {
                    "name": "RequireLowercaseCharacters",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether to require lowercase characters for IAM user passwords.</p>"
                },
                {
                    "name": "AllowUsersToChangePassword",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether IAM users are allowed to change their own password.</p>"
                },
                {
                    "name": "ExpirePasswords",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether IAM users are required to change their password after a specified number of days.</p>"
                },
                {
                    "name": "MaxPasswordAge",
                    "shape": "maxPasswordAgeType",
                    "documentation": "<p>The number of days that an IAM user password is valid.</p>"
                },
                {
                    "name": "PasswordReusePrevention",
                    "shape": "passwordReusePreventionType",
                    "documentation": "<p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p>"
                },
                {
                    "name": "HardExpiry",
                    "shape": "booleanObjectType",
                    "documentation": "<p>Specifies whether IAM users are prevented from setting a new password after their password has expired.</p>"
                }
            ]
        },
        "PasswordPolicyViolationException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the provided password did not meet the requirements imposed by the account password policy. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "passwordPolicyViolationMessage"
                }
            ]
        },
        "Policy": {
            "type": "structure",
            "documentation": "<p>Contains information about a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>, and <a>ListPolicies</a> actions. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The friendly name (not ARN) identifying the policy.</p>"
                },
                {
                    "name": "PolicyId",
                    "shape": "idType",
                    "documentation": "<p>The stable and unique string identifying the policy. </p> <p>For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType"
                },
                {
                    "name": "Path",
                    "shape": "policyPathType",
                    "documentation": "<p>The path to the policy.</p> <p>For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "DefaultVersionId",
                    "shape": "policyVersionIdType",
                    "documentation": "<p>The identifier for the version of the policy that is set as the default version. </p>"
                },
                {
                    "name": "AttachmentCount",
                    "shape": "attachmentCountType",
                    "documentation": "<p>The number of entities (users, groups, and roles) that the policy is attached to.</p>"
                },
                {
                    "name": "IsAttachable",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether the policy can be attached to an IAM user, group, or role. </p>"
                },
                {
                    "name": "Description",
                    "shape": "policyDescriptionType",
                    "documentation": "<p>A friendly description of the policy.</p> <p>This element is included in the response to the <a>GetPolicy</a> operation. It is not included in the response to the <a>ListPolicies</a> operation. </p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the policy was created.</p>"
                },
                {
                    "name": "UpdateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created. </p>"
                }
            ]
        },
        "PolicyDetail": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM policy, including the policy document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>",
            "members": [
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "PolicyGroup": {
            "type": "structure",
            "documentation": "<p>Contains information about a group that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> action. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name (friendly name, not ARN) identifying the group.</p>"
                }
            ]
        },
        "PolicyGroupListType": {
            "type": "list",
            "of": "PolicyGroup"
        },
        "PolicyRole": {
            "type": "structure",
            "documentation": "<p>Contains information about a role that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> action. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name (friendly name, not ARN) identifying the role.</p>"
                }
            ]
        },
        "PolicyRoleListType": {
            "type": "list",
            "of": "PolicyRole"
        },
        "PolicyUser": {
            "type": "structure",
            "documentation": "<p>Contains information about a user that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> action. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name (friendly name, not ARN) identifying the user.</p>"
                }
            ]
        },
        "PolicyUserListType": {
            "type": "list",
            "of": "PolicyUser"
        },
        "PolicyVersion": {
            "type": "structure",
            "documentation": "<p>Contains information about a version of a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> actions. </p> <p>For more information about managed policies, refer to <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html\">Managed Policies and Inline Policies</a> in the <i>Using IAM</i> guide. </p>",
            "members": [
                {
                    "name": "Document",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p> <p>The policy document is returned in the response to the <a>GetPolicyVersion</a> and <a>GetAccountAuthorizationDetails</a> operations. It is not returned in the response to the <a>CreatePolicyVersion</a> or <a>ListPolicyVersions</a> operations. </p>"
                },
                {
                    "name": "VersionId",
                    "shape": "policyVersionIdType",
                    "documentation": "<p>The identifier for the policy version.</p> <p>Policy version identifiers always begin with <code>v</code> (always lowercase). When a policy is created, the first policy version is <code>v1</code>. </p>"
                },
                {
                    "name": "IsDefaultVersion",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether the policy version is set as the policy's default version.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the policy version was created.</p>"
                }
            ]
        },
        "PutGroupPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group to associate the policy with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "PutRolePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to associate the policy with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "PutUserPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to associate the policy with.</p>"
                },
                {
                    "name": "PolicyName",
                    "shape": "policyNameType",
                    "documentation": "<p>The name of the policy document.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy document.</p>"
                }
            ]
        },
        "RemoveClientIDFromOpenIDConnectProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "OpenIDConnectProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to remove the client ID from. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action.</p>"
                },
                {
                    "name": "ClientID",
                    "shape": "clientIDType",
                    "documentation": "<p>The client ID (also known as audience) to remove from the IAM OpenID Connect provider. For more information about client IDs, see <a>CreateOpenIDConnectProvider</a>.</p>"
                }
            ]
        },
        "RemoveRoleFromInstanceProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "InstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "documentation": "<p>The name of the instance profile to update.</p>"
                },
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to remove.</p>"
                }
            ]
        },
        "RemoveUserFromGroupRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>The name of the group to update.</p>"
                },
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user to remove.</p>"
                }
            ]
        },
        "ReportContentType": {
            "type": "blob"
        },
        "ReportFormatType": {
            "type": "string"
        },
        "ReportStateDescriptionType": {
            "type": "string"
        },
        "ReportStateType": {
            "type": "string"
        },
        "ResyncMFADeviceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user whose MFA device you want to resynchronize.</p>"
                },
                {
                    "name": "SerialNumber",
                    "shape": "serialNumberType",
                    "documentation": "<p>Serial number that uniquely identifies the MFA device.</p>"
                },
                {
                    "name": "AuthenticationCode1",
                    "shape": "authenticationCodeType",
                    "documentation": "<p>An authentication code emitted by the device.</p>"
                },
                {
                    "name": "AuthenticationCode2",
                    "shape": "authenticationCodeType",
                    "documentation": "<p>A subsequent authentication code emitted by the device.</p>"
                }
            ]
        },
        "Role": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM role.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateRole</a> </p> </li> <li> <p> <a>GetRole</a> </p> </li> <li> <p> <a>ListRoles</a> </p> </li> </ul>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The friendly name that identifies the role.</p>"
                },
                {
                    "name": "RoleId",
                    "shape": "idType",
                    "documentation": "<p> The stable and unique string identifying the role. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType",
                    "documentation": "<p> The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the role was created.</p>"
                },
                {
                    "name": "AssumeRolePolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy that grants an entity permission to assume the role.</p>"
                }
            ]
        },
        "RoleDetail": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM role, including all of the role's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p>The path to the role. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The friendly name that identifies the role.</p>"
                },
                {
                    "name": "RoleId",
                    "shape": "idType",
                    "documentation": "<p>The stable and unique string identifying the role. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the role was created.</p>"
                },
                {
                    "name": "AssumeRolePolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The trust policy that grants permission to assume the role.</p>"
                },
                {
                    "name": "InstanceProfileList",
                    "shape": "instanceProfileListType"
                },
                {
                    "name": "RolePolicyList",
                    "shape": "policyDetailListType",
                    "documentation": "<p>A list of inline policies embedded in the role. These policies are the role's access (permissions) policies.</p>"
                },
                {
                    "name": "AttachedManagedPolicies",
                    "shape": "attachedPoliciesListType",
                    "documentation": "<p>A list of managed policies attached to the role. These policies are the role's access (permissions) policies.</p>"
                }
            ]
        },
        "SAMLMetadataDocumentType": {
            "type": "string"
        },
        "SAMLProviderListEntry": {
            "type": "structure",
            "documentation": "<p>Contains the list of SAML providers for this account.</p>",
            "members": [
                {
                    "name": "Arn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider.</p>"
                },
                {
                    "name": "ValidUntil",
                    "shape": "dateType",
                    "documentation": "<p>The expiration date and time for the SAML provider.</p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time when the SAML provider was created.</p>"
                }
            ]
        },
        "SAMLProviderListType": {
            "type": "list",
            "of": "SAMLProviderListEntry"
        },
        "SAMLProviderNameType": {
            "type": "string"
        },
        "SSHPublicKey": {
            "type": "structure",
            "documentation": "<p>Contains information about an SSH public key.</p> <p>This data type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a> actions. </p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user associated with the SSH public key.</p>"
                },
                {
                    "name": "SSHPublicKeyId",
                    "shape": "publicKeyIdType",
                    "documentation": "<p>The unique identifier for the SSH public key.</p>"
                },
                {
                    "name": "Fingerprint",
                    "shape": "publicKeyFingerprintType",
                    "documentation": "<p>The MD5 message digest of the SSH public key.</p>"
                },
                {
                    "name": "SSHPublicKeyBody",
                    "shape": "publicKeyMaterialType",
                    "documentation": "<p>The SSH public key.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p>The status of the SSH public key. <code>Active</code> means the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means the key cannot be used.</p>"
                },
                {
                    "name": "UploadDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the SSH public key was uploaded.</p>"
                }
            ]
        },
        "SSHPublicKeyListType": {
            "type": "list",
            "of": "SSHPublicKeyMetadata"
        },
        "SSHPublicKeyMetadata": {
            "type": "structure",
            "documentation": "<p>Contains information about an SSH public key, without the key's body or fingerprint.</p> <p>This data type is used as a response element in the <a>ListSSHPublicKeys</a> action.</p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user associated with the SSH public key.</p>"
                },
                {
                    "name": "SSHPublicKeyId",
                    "shape": "publicKeyIdType",
                    "documentation": "<p>The unique identifier for the SSH public key.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p>The status of the SSH public key. <code>Active</code> means the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means the key cannot be used.</p>"
                },
                {
                    "name": "UploadDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the SSH public key was uploaded.</p>"
                }
            ]
        },
        "ServerCertificate": {
            "type": "structure",
            "documentation": "<p>Contains information about a server certificate.</p> <p> This data type is used as a response element in the <a>GetServerCertificate</a> action. </p>",
            "members": [
                {
                    "name": "ServerCertificateMetadata",
                    "shape": "ServerCertificateMetadata",
                    "documentation": "<p>The meta information of the server certificate, such as its name, path, ID, and ARN.</p>"
                },
                {
                    "name": "CertificateBody",
                    "shape": "certificateBodyType",
                    "documentation": "<p>The contents of the public key certificate.</p>"
                },
                {
                    "name": "CertificateChain",
                    "shape": "certificateChainType",
                    "documentation": "<p>The contents of the public key certificate chain.</p>"
                }
            ]
        },
        "ServerCertificateMetadata": {
            "type": "structure",
            "documentation": "<p>Contains information about a server certificate without its certificate body, certificate chain, and private key. </p> <p> This data type is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a> actions. </p>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p> The path to the server certificate. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "ServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "documentation": "<p>The name that identifies the server certificate.</p>"
                },
                {
                    "name": "ServerCertificateId",
                    "shape": "idType",
                    "documentation": "<p> The stable and unique string identifying the server certificate. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType",
                    "documentation": "<p> The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "UploadDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the server certificate was uploaded.</p>"
                },
                {
                    "name": "Expiration",
                    "shape": "dateType",
                    "documentation": "<p>The date on which the certificate is set to expire.</p>"
                }
            ]
        },
        "ServiceFailureException": {
            "type": "structure",
            "documentation": "<p>The request processing has failed because of an unknown error, exception or failure. </p>",
            "members": [
                {
                    "name": "message",
                    "shape": "serviceFailureExceptionMessage"
                }
            ]
        },
        "SetDefaultPolicyVersionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "PolicyArn",
                    "shape": "arnType"
                },
                {
                    "name": "VersionId",
                    "shape": "policyVersionIdType",
                    "documentation": "<p>The version of the policy to set as the default (operative) version.</p> <p>For more information about managed policy versions, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\">Versioning for Managed Policies</a> in the <i>Using IAM</i> guide. </p>"
                }
            ]
        },
        "SigningCertificate": {
            "type": "structure",
            "documentation": "<p>Contains information about an X.509 signing certificate.</p> <p>This data type is used as a response element in the <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a> actions. </p>",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user the signing certificate is associated with.</p>"
                },
                {
                    "name": "CertificateId",
                    "shape": "certificateIdType",
                    "documentation": "<p>The ID for the signing certificate.</p>"
                },
                {
                    "name": "CertificateBody",
                    "shape": "certificateBodyType",
                    "documentation": "<p>The contents of the signing certificate.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p>The status of the signing certificate. <code>Active</code> means the key is valid for API calls, while <code>Inactive</code> means it is not.</p>"
                },
                {
                    "name": "UploadDate",
                    "shape": "dateType",
                    "documentation": "<p>The date when the signing certificate was uploaded.</p>"
                }
            ]
        },
        "UnrecognizedPublicKeyEncodingException": {
            "type": "structure",
            "documentation": "<p>The request was rejected because the public key encoding format is unsupported or unrecognized.</p>",
            "members": [
                {
                    "name": "message",
                    "shape": "unrecognizedPublicKeyEncodingMessage"
                }
            ]
        },
        "UpdateAccessKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user whose key you want to update.</p>"
                },
                {
                    "name": "AccessKeyId",
                    "shape": "accessKeyIdType",
                    "documentation": "<p>The access key ID of the secret access key you want to update.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p> The status you want to assign to the secret access key. <code>Active</code> means the key can be used for API calls to AWS, while <code>Inactive</code> means the key cannot be used. </p>"
                }
            ]
        },
        "UpdateAccountPasswordPolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "MinimumPasswordLength",
                    "shape": "minimumPasswordLengthType",
                    "documentation": "<p>The minimum number of characters allowed in an IAM user password.</p> <p>Default value: 6</p>"
                },
                {
                    "name": "RequireSymbols",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp;amp; * ( ) _ + - = [ ] { } | '</p> <p>Default value: false</p>"
                },
                {
                    "name": "RequireNumbers",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>Default value: false</p>"
                },
                {
                    "name": "RequireUppercaseCharacters",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>Default value: false</p>"
                },
                {
                    "name": "RequireLowercaseCharacters",
                    "shape": "booleanType",
                    "documentation": "<p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>Default value: false</p>"
                },
                {
                    "name": "AllowUsersToChangePassword",
                    "shape": "booleanType",
                    "documentation": "<p> Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html\">Letting IAM Users Change Their Own Passwords</a> in the <i>Using IAM</i> guide. </p> <p>Default value: false</p>"
                },
                {
                    "name": "MaxPasswordAge",
                    "shape": "maxPasswordAgeType",
                    "documentation": "<p>The number of days that an IAM user password is valid. The default value of 0 means IAM user passwords never expire.</p> <p>Default value: 0</p>"
                },
                {
                    "name": "PasswordReusePrevention",
                    "shape": "passwordReusePreventionType",
                    "documentation": "<p>Specifies the number of previous passwords that IAM users are prevented from reusing. The default value of 0 means IAM users are not prevented from reusing previous passwords.</p> <p>Default value: 0</p>"
                },
                {
                    "name": "HardExpiry",
                    "shape": "booleanObjectType",
                    "documentation": "<p>Prevents IAM users from setting a new password after their password has expired.</p> <p>Default value: false</p>"
                }
            ]
        },
        "UpdateAssumeRolePolicyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "RoleName",
                    "shape": "roleNameType",
                    "documentation": "<p>The name of the role to update.</p>"
                },
                {
                    "name": "PolicyDocument",
                    "shape": "policyDocumentType",
                    "documentation": "<p>The policy that grants an entity permission to assume the role.</p>"
                }
            ]
        },
        "UpdateGroupRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "GroupName",
                    "shape": "groupNameType",
                    "documentation": "<p> Name of the group to update. If you're changing the name of the group, this is the original name. </p>"
                },
                {
                    "name": "NewPath",
                    "shape": "pathType",
                    "documentation": "<p>New path for the group. Only include this if changing the group's path.</p>"
                },
                {
                    "name": "NewGroupName",
                    "shape": "groupNameType",
                    "documentation": "<p>New name for the group. Only include this if changing the group's name.</p>"
                }
            ]
        },
        "UpdateLoginProfileRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the user whose password you want to update.</p>"
                },
                {
                    "name": "Password",
                    "shape": "passwordType",
                    "documentation": "<p>The new password for the specified user.</p>"
                },
                {
                    "name": "PasswordResetRequired",
                    "shape": "booleanObjectType",
                    "documentation": "<p>Require the specified user to set a new password on next sign-in.</p>"
                }
            ]
        },
        "UpdateOpenIDConnectProviderThumbprintRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "OpenIDConnectProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to update the thumbprint for. You can get a list of OIDC provider ARNs by using the <a>ListOpenIDConnectProviders</a> action. </p>"
                },
                {
                    "name": "ThumbprintList",
                    "shape": "thumbprintListType",
                    "documentation": "<p>A list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see <a>CreateOpenIDConnectProvider</a>. </p>"
                }
            ]
        },
        "UpdateSAMLProviderRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SAMLMetadataDocument",
                    "shape": "SAMLMetadataDocumentType",
                    "documentation": "<p> An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. </p>"
                },
                {
                    "name": "SAMLProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider to update.</p>"
                }
            ]
        },
        "UpdateSAMLProviderResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>UpdateSAMLProvider</a> request. </p>",
            "members": [
                {
                    "name": "SAMLProviderArn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) of the SAML provider that was updated.</p>"
                }
            ]
        },
        "UpdateSSHPublicKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user associated with the SSH public key.</p>"
                },
                {
                    "name": "SSHPublicKeyId",
                    "shape": "publicKeyIdType",
                    "documentation": "<p>The unique identifier for the SSH public key.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p>The status to assign to the SSH public key. <code>Active</code> means the key can be used for authentication with an AWS CodeCommit repository. <code>Inactive</code> means the key cannot be used.</p>"
                }
            ]
        },
        "UpdateServerCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "documentation": "<p>The name of the server certificate that you want to update.</p>"
                },
                {
                    "name": "NewPath",
                    "shape": "pathType",
                    "documentation": "<p> The new path for the server certificate. Include this only if you are updating the server certificate's path. </p>"
                },
                {
                    "name": "NewServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "documentation": "<p> The new name for the server certificate. Include this only if you are updating the server certificate's name. The name of the certificate cannot contain any spaces.</p>"
                }
            ]
        },
        "UpdateSigningCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user the signing certificate belongs to.</p>"
                },
                {
                    "name": "CertificateId",
                    "shape": "certificateIdType",
                    "documentation": "<p>The ID of the signing certificate you want to update.</p>"
                },
                {
                    "name": "Status",
                    "shape": "statusType",
                    "documentation": "<p> The status you want to assign to the certificate. <code>Active</code> means the certificate can be used for API calls to AWS, while <code>Inactive</code> means the certificate cannot be used. </p>"
                }
            ]
        },
        "UpdateUserRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>Name of the user to update. If you're changing the name of the user, this is the original user name. </p>"
                },
                {
                    "name": "NewPath",
                    "shape": "pathType",
                    "documentation": "<p>New path for the user. Include this parameter only if you're changing the user's path.</p>"
                },
                {
                    "name": "NewUserName",
                    "shape": "userNameType",
                    "documentation": "<p>New name for the user. Include this parameter only if you're changing the user's name.</p>"
                }
            ]
        },
        "UploadSSHPublicKeyRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The name of the IAM user to associate the SSH public key with.</p>"
                },
                {
                    "name": "SSHPublicKeyBody",
                    "shape": "publicKeyMaterialType",
                    "documentation": "<p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.</p>"
                }
            ]
        },
        "UploadSSHPublicKeyResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>UploadSSHPublicKey</a> request.</p>",
            "members": [
                {
                    "name": "SSHPublicKey",
                    "shape": "SSHPublicKey",
                    "documentation": "<p>Contains information about the SSH public key.</p>"
                }
            ]
        },
        "UploadServerCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p>The path for the server certificate. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <note> If you are uploading a server certificate specifically for use with Amazon CloudFront distributions, you must specify a path using the <code>--path</code> option. The path must begin with <code>/cloudfront</code> and must include a trailing slash (for example, <code>/cloudfront/test/</code>). </note>"
                },
                {
                    "name": "ServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "documentation": "<p>The name for the server certificate. Do not include the path in this value. The name of the certificate cannot contain any spaces.</p>"
                },
                {
                    "name": "CertificateBody",
                    "shape": "certificateBodyType",
                    "documentation": "<p>The contents of the public key certificate in PEM-encoded format.</p>"
                },
                {
                    "name": "PrivateKey",
                    "shape": "privateKeyType",
                    "documentation": "<p>The contents of the private key in PEM-encoded format.</p>"
                },
                {
                    "name": "CertificateChain",
                    "shape": "certificateChainType",
                    "documentation": "<p>The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain. </p>"
                }
            ]
        },
        "UploadServerCertificateResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>UploadServerCertificate</a> request. </p>",
            "members": [
                {
                    "name": "ServerCertificateMetadata",
                    "shape": "ServerCertificateMetadata",
                    "documentation": "<p> The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key. </p>"
                }
            ]
        },
        "UploadSigningCertificateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "UserName",
                    "shape": "existingUserNameType",
                    "documentation": "<p>The name of the user the signing certificate is for.</p>"
                },
                {
                    "name": "CertificateBody",
                    "shape": "certificateBodyType",
                    "documentation": "<p>The contents of the signing certificate.</p>"
                }
            ]
        },
        "UploadSigningCertificateResponse": {
            "type": "structure",
            "documentation": "<p>Contains the response to a successful <a>UploadSigningCertificate</a> request. </p>",
            "members": [
                {
                    "name": "Certificate",
                    "shape": "SigningCertificate",
                    "documentation": "<p>Information about the certificate.</p>"
                }
            ]
        },
        "User": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM user entity.</p> <p> This data type is used as a response element in the following actions:</p> <ul> <li> <p> <a>CreateUser</a> </p> </li> <li> <p> <a>GetUser</a> </p> </li> <li> <p> <a>ListUsers</a> </p> </li> </ul>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p>The path to the user. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The friendly name identifying the user.</p>"
                },
                {
                    "name": "UserId",
                    "shape": "idType",
                    "documentation": "<p>The stable and unique string identifying the user. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType",
                    "documentation": "<p>The Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide. </p>"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the user was created.</p>"
                },
                {
                    "name": "PasswordLastUsed",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the user's password was last used to sign in to an AWS website. For a list of AWS websites that capture a user's last sign-in time, see the <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\">Credential Reports</a> topic in the <i>Using IAM</i> guide. If a password is used more than once in a five-minute span, only the first use is returned in this field. This field is null (not present) when:</p> <ul> <li> <p>The user does not have a password</p> </li> <li> <p>The password exists but has never been used (at least not since IAM started tracking this information on October 20th, 2014</p> </li> <li> <p>there is no sign-in data associated with the user</p> </li> </ul> <p>This value is returned only in the <a>GetUser</a> and <a>ListUsers</a> actions. </p>"
                }
            ]
        },
        "UserDetail": {
            "type": "structure",
            "documentation": "<p>Contains information about an IAM user, including all the user's policies and all the IAM groups the user is in.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> action.</p>",
            "members": [
                {
                    "name": "Path",
                    "shape": "pathType",
                    "documentation": "<p>The path to the user. For more information about paths, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "UserName",
                    "shape": "userNameType",
                    "documentation": "<p>The friendly name identifying the user.</p>"
                },
                {
                    "name": "UserId",
                    "shape": "idType",
                    "documentation": "<p>The stable and unique string identifying the user. For more information about IDs, see <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\">IAM Identifiers</a> in the <i>Using IAM</i> guide.</p>"
                },
                {
                    "name": "Arn",
                    "shape": "arnType"
                },
                {
                    "name": "CreateDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time, in <a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the user was created.</p>"
                },
                {
                    "name": "UserPolicyList",
                    "shape": "policyDetailListType",
                    "documentation": "<p>A list of the inline policies embedded in the user.</p>"
                },
                {
                    "name": "GroupList",
                    "shape": "groupNameListType",
                    "documentation": "<p>A list of IAM groups that the user is in.</p>"
                },
                {
                    "name": "AttachedManagedPolicies",
                    "shape": "attachedPoliciesListType",
                    "documentation": "<p>A list of the managed policies attached to the user.</p>"
                }
            ]
        },
        "VirtualMFADevice": {
            "type": "structure",
            "documentation": "<p>Contains information about a virtual MFA device.</p>",
            "members": [
                {
                    "name": "SerialNumber",
                    "shape": "serialNumberType",
                    "documentation": "<p>The serial number associated with <code>VirtualMFADevice</code>.</p>"
                },
                {
                    "name": "Base32StringSeed",
                    "shape": "BootstrapDatum",
                    "documentation": "<p> The Base32 seed defined as specified in <a href=\"http://www.ietf.org/rfc/rfc3548.txt\">RFC3548</a>. The <code>Base32StringSeed</code> is Base64-encoded. </p>"
                },
                {
                    "name": "QRCodePNG",
                    "shape": "BootstrapDatum",
                    "documentation": "<p> A QR code PNG image that encodes <code>otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String</code> where <code>$virtualMFADeviceName</code> is one of the create call arguments, <code>AccountName</code> is the user name if set (otherwise, the account ID otherwise), and <code>Base32String</code> is the seed in Base32 format. The <code>Base32String</code> value is Base64-encoded. </p>"
                },
                {
                    "name": "User",
                    "shape": "User"
                },
                {
                    "name": "EnableDate",
                    "shape": "dateType",
                    "documentation": "<p>The date and time on which the virtual MFA device was enabled.</p>"
                }
            ]
        },
        "accessKeyIdType": {
            "type": "string"
        },
        "accessKeyMetadataListType": {
            "type": "list",
            "documentation": "<p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> action.</p>",
            "of": "AccessKeyMetadata"
        },
        "accessKeySecretType": {
            "type": "string"
        },
        "accountAliasListType": {
            "type": "list",
            "of": "accountAliasType"
        },
        "accountAliasType": {
            "type": "string"
        },
        "arnType": {
            "type": "string",
            "documentation": "<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for AWS resources. </p> <p>For more information about ARNs, go to <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>. </p>"
        },
        "assignmentStatusType": {
            "type": "string"
        },
        "attachedPoliciesListType": {
            "type": "list",
            "of": "AttachedPolicy"
        },
        "attachmentCountType": {
            "type": "integer"
        },
        "authenticationCodeType": {
            "type": "string"
        },
        "booleanObjectType": {
            "type": "boolean"
        },
        "booleanType": {
            "type": "boolean"
        },
        "certificateBodyType": {
            "type": "string"
        },
        "certificateChainType": {
            "type": "string"
        },
        "certificateIdType": {
            "type": "string"
        },
        "certificateListType": {
            "type": "list",
            "documentation": "<p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> action.</p>",
            "of": "SigningCertificate"
        },
        "clientIDListType": {
            "type": "list",
            "of": "clientIDType"
        },
        "clientIDType": {
            "type": "string"
        },
        "credentialReportExpiredExceptionMessage": {
            "type": "string"
        },
        "credentialReportNotPresentExceptionMessage": {
            "type": "string"
        },
        "credentialReportNotReadyExceptionMessage": {
            "type": "string"
        },
        "dateType": {
            "type": "timestamp"
        },
        "deleteConflictMessage": {
            "type": "string"
        },
        "duplicateCertificateMessage": {
            "type": "string"
        },
        "duplicateSSHPublicKeyMessage": {
            "type": "string"
        },
        "encodingType": {
            "type": "string"
        },
        "entityAlreadyExistsMessage": {
            "type": "string"
        },
        "entityListType": {
            "type": "list",
            "of": "EntityType"
        },
        "entityTemporarilyUnmodifiableMessage": {
            "type": "string"
        },
        "existingUserNameType": {
            "type": "string"
        },
        "groupDetailListType": {
            "type": "list",
            "of": "GroupDetail"
        },
        "groupListType": {
            "type": "list",
            "documentation": "<p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> action.</p>",
            "of": "Group"
        },
        "groupNameListType": {
            "type": "list",
            "of": "groupNameType"
        },
        "groupNameType": {
            "type": "string"
        },
        "idType": {
            "type": "string"
        },
        "instanceProfileListType": {
            "type": "list",
            "documentation": "<p>Contains a list of instance profiles.</p>",
            "of": "InstanceProfile"
        },
        "instanceProfileNameType": {
            "type": "string"
        },
        "invalidAuthenticationCodeMessage": {
            "type": "string"
        },
        "invalidCertificateMessage": {
            "type": "string"
        },
        "invalidInputMessage": {
            "type": "string"
        },
        "invalidPublicKeyMessage": {
            "type": "string"
        },
        "invalidUserTypeMessage": {
            "type": "string"
        },
        "keyPairMismatchMessage": {
            "type": "string"
        },
        "limitExceededMessage": {
            "type": "string"
        },
        "malformedCertificateMessage": {
            "type": "string"
        },
        "malformedPolicyDocumentMessage": {
            "type": "string"
        },
        "markerType": {
            "type": "string"
        },
        "maxItemsType": {
            "type": "integer"
        },
        "maxPasswordAgeType": {
            "type": "integer"
        },
        "mfaDeviceListType": {
            "type": "list",
            "documentation": "<p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> actions. </p>",
            "of": "MFADevice"
        },
        "minimumPasswordLengthType": {
            "type": "integer"
        },
        "noSuchEntityMessage": {
            "type": "string"
        },
        "passwordPolicyViolationMessage": {
            "type": "string"
        },
        "passwordReusePreventionType": {
            "type": "integer"
        },
        "passwordType": {
            "type": "string"
        },
        "pathPrefixType": {
            "type": "string"
        },
        "pathType": {
            "type": "string"
        },
        "policyDescriptionType": {
            "type": "string"
        },
        "policyDetailListType": {
            "type": "list",
            "of": "PolicyDetail"
        },
        "policyDocumentType": {
            "type": "string"
        },
        "policyDocumentVersionListType": {
            "type": "list",
            "of": "PolicyVersion"
        },
        "policyListType": {
            "type": "list",
            "of": "Policy"
        },
        "policyNameListType": {
            "type": "list",
            "documentation": "<p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> action.</p>",
            "of": "policyNameType"
        },
        "policyNameType": {
            "type": "string"
        },
        "policyPathType": {
            "type": "string"
        },
        "policyScopeType": {
            "type": "string"
        },
        "policyVersionIdType": {
            "type": "string"
        },
        "privateKeyType": {
            "type": "string"
        },
        "publicKeyFingerprintType": {
            "type": "string"
        },
        "publicKeyIdType": {
            "type": "string"
        },
        "publicKeyMaterialType": {
            "type": "string"
        },
        "roleDetailListType": {
            "type": "list",
            "of": "RoleDetail"
        },
        "roleListType": {
            "type": "list",
            "documentation": "<p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> action.</p>",
            "of": "Role"
        },
        "roleNameType": {
            "type": "string"
        },
        "serialNumberType": {
            "type": "string"
        },
        "serverCertificateMetadataListType": {
            "type": "list",
            "of": "ServerCertificateMetadata"
        },
        "serverCertificateNameType": {
            "type": "string"
        },
        "serviceFailureExceptionMessage": {
            "type": "string"
        },
        "statusType": {
            "type": "string"
        },
        "stringType": {
            "type": "string"
        },
        "summaryKeyType": {
            "type": "string"
        },
        "summaryMapType": {
            "type": "map",
            "key": "summaryKeyType",
            "value": "summaryValueType"
        },
        "summaryValueType": {
            "type": "integer"
        },
        "thumbprintListType": {
            "type": "list",
            "documentation": "<p>Contains a list of thumbprints of identity provider server certificates.</p>",
            "of": "thumbprintType"
        },
        "thumbprintType": {
            "type": "string",
            "documentation": "<p>Contains a thumbprint for an identity provider's server certificate.</p> <p>The identity provider's server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string. </p>"
        },
        "unrecognizedPublicKeyEncodingMessage": {
            "type": "string"
        },
        "userDetailListType": {
            "type": "list",
            "of": "UserDetail"
        },
        "userListType": {
            "type": "list",
            "documentation": "<p>Contains a list of users.</p> <p>This data type is used as a response element in the <a>GetGroup</a> and <a>ListUsers</a> actions. </p>",
            "of": "User"
        },
        "userNameType": {
            "type": "string"
        },
        "virtualMFADeviceListType": {
            "type": "list",
            "of": "VirtualMFADevice"
        },
        "virtualMFADeviceName": {
            "type": "string"
        }
    }
}