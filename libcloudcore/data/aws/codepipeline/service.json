{
    "metadata": {},
    "operations": {
        "AcknowledgeJob": {
            "documentation": "<p>Returns information about a specified job and whether that job has been received by the job worker. Only used for custom actions.</p>",
            "input": {
                "shape": "AcknowledgeJobInput"
            },
            "output": {
                "shape": "AcknowledgeJobOutput"
            }
        },
        "AcknowledgeThirdPartyJob": {
            "documentation": "<p>Confirms a job worker has received the specified job. Only used for partner actions.</p>",
            "input": {
                "shape": "AcknowledgeThirdPartyJobInput"
            },
            "output": {
                "shape": "AcknowledgeThirdPartyJobOutput"
            }
        },
        "CreateCustomActionType": {
            "documentation": "<p>Creates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.</p>",
            "input": {
                "shape": "CreateCustomActionTypeInput"
            },
            "output": {
                "shape": "CreateCustomActionTypeOutput"
            }
        },
        "CreatePipeline": {
            "documentation": "<p>Creates a pipeline.</p>",
            "input": {
                "shape": "CreatePipelineInput"
            },
            "output": {
                "shape": "CreatePipelineOutput"
            }
        },
        "DeleteCustomActionType": {
            "documentation": "<p>Marks a custom action as deleted. PollForJobs for the custom action will fail after the action is marked for deletion. Only used for custom actions.</p> <important><p>You cannot recreate a custom action after it has been deleted unless you increase the version number of the action.</p></important>",
            "input": {
                "shape": "DeleteCustomActionTypeInput"
            }
        },
        "DeletePipeline": {
            "documentation": "<p>Deletes the specified pipeline.</p>",
            "input": {
                "shape": "DeletePipelineInput"
            }
        },
        "DisableStageTransition": {
            "documentation": "<p>Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline. </p>",
            "input": {
                "shape": "DisableStageTransitionInput"
            }
        },
        "EnableStageTransition": {
            "documentation": "<p>Enables artifacts in a pipeline to transition to a stage in a pipeline.</p>",
            "input": {
                "shape": "EnableStageTransitionInput"
            }
        },
        "GetJobDetails": {
            "documentation": "<p>Returns information about a job. Only used for custom actions.</p> <important><p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p></important>",
            "input": {
                "shape": "GetJobDetailsInput"
            },
            "output": {
                "shape": "GetJobDetailsOutput"
            }
        },
        "GetPipeline": {
            "documentation": "<p>Returns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with <a>UpdatePipeline</a>.</p>",
            "input": {
                "shape": "GetPipelineInput"
            },
            "output": {
                "shape": "GetPipelineOutput"
            }
        },
        "GetPipelineState": {
            "documentation": "<p>Returns information about the state of a pipeline, including the stages, actions, and details about the last run of the pipeline.</p>",
            "input": {
                "shape": "GetPipelineStateInput"
            },
            "output": {
                "shape": "GetPipelineStateOutput"
            }
        },
        "GetThirdPartyJobDetails": {
            "documentation": "<p>Requests the details of a job for a third party action. Only used for partner actions.</p> <important><p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p></important>",
            "input": {
                "shape": "GetThirdPartyJobDetailsInput"
            },
            "output": {
                "shape": "GetThirdPartyJobDetailsOutput"
            }
        },
        "ListActionTypes": {
            "documentation": "<p>Gets a summary of all AWS CodePipeline action types associated with your account.</p>",
            "input": {
                "shape": "ListActionTypesInput"
            },
            "output": {
                "shape": "ListActionTypesOutput"
            }
        },
        "ListPipelines": {
            "documentation": "<p>Gets a summary of all of the pipelines associated with your account.</p>",
            "input": {
                "shape": "ListPipelinesInput"
            },
            "output": {
                "shape": "ListPipelinesOutput"
            }
        },
        "PollForJobs": {
            "documentation": "<p>Returns information about any jobs for AWS CodePipeline to act upon.</p> <important><p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts. Additionally, this API returns any secret values defined for the action.</p></important>",
            "input": {
                "shape": "PollForJobsInput"
            },
            "output": {
                "shape": "PollForJobsOutput"
            }
        },
        "PollForThirdPartyJobs": {
            "documentation": "<p>Determines whether there are any third party jobs for a job worker to act on. Only used for partner actions.</p> <important><p>When this API is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if the action requires access to that Amazon S3 bucket for input or output artifacts.</p></important>",
            "input": {
                "shape": "PollForThirdPartyJobsInput"
            },
            "output": {
                "shape": "PollForThirdPartyJobsOutput"
            }
        },
        "PutActionRevision": {
            "documentation": "<p>Provides information to AWS CodePipeline about new revisions to a source.</p>",
            "input": {
                "shape": "PutActionRevisionInput"
            },
            "output": {
                "shape": "PutActionRevisionOutput"
            }
        },
        "PutJobFailureResult": {
            "documentation": "<p>Represents the failure of a job as returned to the pipeline by a job worker. Only used for custom actions.</p>",
            "input": {
                "shape": "PutJobFailureResultInput"
            }
        },
        "PutJobSuccessResult": {
            "documentation": "<p>Represents the success of a job as returned to the pipeline by a job worker. Only used for custom actions.</p>",
            "input": {
                "shape": "PutJobSuccessResultInput"
            }
        },
        "PutThirdPartyJobFailureResult": {
            "documentation": "<p>Represents the failure of a third party job as returned to the pipeline by a job worker. Only used for partner actions.</p>",
            "input": {
                "shape": "PutThirdPartyJobFailureResultInput"
            }
        },
        "PutThirdPartyJobSuccessResult": {
            "documentation": "<p>Represents the success of a third party job as returned to the pipeline by a job worker. Only used for partner actions.</p>",
            "input": {
                "shape": "PutThirdPartyJobSuccessResultInput"
            }
        },
        "StartPipelineExecution": {
            "documentation": "<p>Starts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.</p>",
            "input": {
                "shape": "StartPipelineExecutionInput"
            },
            "output": {
                "shape": "StartPipelineExecutionOutput"
            }
        },
        "UpdatePipeline": {
            "documentation": "<p>Updates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure in conjunction with UpdatePipeline to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.</p>",
            "input": {
                "shape": "UpdatePipelineInput"
            },
            "output": {
                "shape": "UpdatePipelineOutput"
            }
        }
    },
    "shapes": {
        "AWSSessionCredentials": {
            "type": "structure",
            "members": [
                {
                    "name": "accessKeyId",
                    "shape": "AccessKeyId",
                    "documentation": "<p>The access key for the session.</p>"
                },
                {
                    "name": "secretAccessKey",
                    "shape": "SecretAccessKey",
                    "documentation": "<p>The secret access key for the session.</p>"
                },
                {
                    "name": "sessionToken",
                    "shape": "SessionToken",
                    "documentation": "<p>The token for the session.</p>"
                }
            ]
        },
        "AccessKeyId": {
            "type": "string"
        },
        "AccountId": {
            "type": "string"
        },
        "AcknowledgeJobInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "JobId",
                    "documentation": "<p>The unique system-generated ID of the job for which you want to confirm receipt.</p>"
                },
                {
                    "name": "nonce",
                    "shape": "Nonce",
                    "documentation": "<p>A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. This number must be returned in the response.</p>"
                }
            ]
        },
        "AcknowledgeJobOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "status",
                    "shape": "JobStatus",
                    "documentation": "<p>Whether the job worker has received the specified job.</p>"
                }
            ]
        },
        "AcknowledgeThirdPartyJobInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "ThirdPartyJobId",
                    "documentation": "<p>The unique system-generated ID of the job.</p>"
                },
                {
                    "name": "nonce",
                    "shape": "Nonce",
                    "documentation": "<p>A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. This number must be returned in the response.</p>"
                },
                {
                    "name": "clientToken",
                    "shape": "ClientToken",
                    "documentation": "<p>The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.</p>"
                }
            ]
        },
        "AcknowledgeThirdPartyJobOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "status",
                    "shape": "JobStatus",
                    "documentation": "<p>The status information for the third party job, if any.</p>"
                }
            ]
        },
        "ActionCategory": {
            "type": "string"
        },
        "ActionConfiguration": {
            "type": "structure",
            "members": [
                {
                    "name": "configuration",
                    "shape": "ActionConfigurationMap",
                    "documentation": "<p>The configuration data for the action.</p>"
                }
            ]
        },
        "ActionConfigurationKey": {
            "type": "string"
        },
        "ActionConfigurationMap": {
            "type": "map"
        },
        "ActionConfigurationProperty": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "ActionConfigurationKey",
                    "documentation": "<p>The name of the action configuration property.</p>"
                },
                {
                    "name": "required",
                    "shape": "Boolean",
                    "documentation": "<p>Whether the configuration property is a required value.</p>"
                },
                {
                    "name": "key",
                    "shape": "Boolean",
                    "documentation": "<p>Whether the configuration property is a key.</p>"
                },
                {
                    "name": "secret",
                    "shape": "Boolean",
                    "documentation": "<p>Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.</p> <p>When updating a pipeline, passing * * * * * without changing any other values of the action will preserve the prior value of the secret.</p>"
                },
                {
                    "name": "queryable",
                    "shape": "Boolean",
                    "documentation": "<p>Indicates that the proprety will be used in conjunction with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.</p> <p>If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to additional restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.</p>"
                },
                {
                    "name": "description",
                    "shape": "Description",
                    "documentation": "<p>The description of the action configuration property that will be displayed to users.</p>"
                },
                {
                    "name": "type",
                    "shape": "ActionConfigurationPropertyType",
                    "documentation": "<p>The type of the configuration property.</p>"
                }
            ]
        },
        "ActionConfigurationPropertyList": {
            "type": "list",
            "of": "ActionConfigurationProperty"
        },
        "ActionConfigurationPropertyType": {
            "type": "string"
        },
        "ActionConfigurationValue": {
            "type": "string"
        },
        "ActionContext": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "ActionName",
                    "documentation": "<p>The name of the action within the context of a job.</p>"
                }
            ]
        },
        "ActionDeclaration": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "ActionName",
                    "documentation": "<p>The action declaration's name.</p>"
                },
                {
                    "name": "actionTypeId",
                    "shape": "ActionTypeId",
                    "documentation": "<p>The configuration information for the action type. </p>"
                },
                {
                    "name": "runOrder",
                    "shape": "ActionRunOrder",
                    "documentation": "<p>The order in which actions are run.</p>"
                },
                {
                    "name": "configuration",
                    "shape": "ActionConfigurationMap",
                    "documentation": "<p>The action declaration's configuration.</p>"
                },
                {
                    "name": "outputArtifacts",
                    "shape": "OutputArtifactList",
                    "documentation": "<p>The name or ID of the result of the action declaration, such as a test or build artifact.</p>"
                },
                {
                    "name": "inputArtifacts",
                    "shape": "InputArtifactList",
                    "documentation": "<p>The name or ID of the artifact consumed by the action, such as a test or build artifact.</p>"
                },
                {
                    "name": "roleArn",
                    "shape": "RoleArn",
                    "documentation": "<p>The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.</p>"
                }
            ]
        },
        "ActionExecution": {
            "type": "structure",
            "members": [
                {
                    "name": "status",
                    "shape": "ActionExecutionStatus",
                    "documentation": "<p>The status of the action, or for a completed action, the last status of the action.</p>"
                },
                {
                    "name": "summary",
                    "shape": "ExecutionSummary",
                    "documentation": "<p>A summary of the run of the action.</p>"
                },
                {
                    "name": "lastStatusChange",
                    "shape": "Timestamp",
                    "documentation": "<p>The last status change of the action.</p>"
                },
                {
                    "name": "externalExecutionId",
                    "shape": "ExecutionId",
                    "documentation": "<p>The external ID of the run of the action.</p>"
                },
                {
                    "name": "externalExecutionUrl",
                    "shape": "Url",
                    "documentation": "<p>The URL of a resource external to AWS that will be used when running the action, for example an external repository URL.</p>"
                },
                {
                    "name": "percentComplete",
                    "shape": "Percentage",
                    "documentation": "<p>A percentage of completeness of the action as it runs.</p>"
                },
                {
                    "name": "errorDetails",
                    "shape": "ErrorDetails",
                    "documentation": "<p>The details of an error returned by a URL external to AWS.</p>"
                }
            ]
        },
        "ActionExecutionStatus": {
            "type": "string"
        },
        "ActionName": {
            "type": "string"
        },
        "ActionNotFoundException": {
            "type": "structure",
            "members": []
        },
        "ActionOwner": {
            "type": "string"
        },
        "ActionProvider": {
            "type": "string"
        },
        "ActionRevision": {
            "type": "structure",
            "members": [
                {
                    "name": "revisionId",
                    "shape": "RevisionId",
                    "documentation": "<p>The system-generated unique ID that identifies the revision number of the action.</p>"
                },
                {
                    "name": "revisionChangeId",
                    "shape": "RevisionChangeId",
                    "documentation": "<p>The unique identifier of the change that set the state to this revision, for example a deployment ID or timestamp.</p>"
                },
                {
                    "name": "created",
                    "shape": "Timestamp",
                    "documentation": "<p>The date and time when the most recent version of the action was created, in timestamp format.</p>"
                }
            ]
        },
        "ActionRunOrder": {
            "type": "integer"
        },
        "ActionState": {
            "type": "structure",
            "members": [
                {
                    "name": "actionName",
                    "shape": "ActionName",
                    "documentation": "<p>The name of the action.</p>"
                },
                {
                    "name": "currentRevision",
                    "shape": "ActionRevision"
                },
                {
                    "name": "latestExecution",
                    "shape": "ActionExecution"
                },
                {
                    "name": "entityUrl",
                    "shape": "Url",
                    "documentation": "<p>A URL link for more information about the state of the action, such as a deployment group details page.</p>"
                },
                {
                    "name": "revisionUrl",
                    "shape": "Url",
                    "documentation": "<p>A URL link for more information about the revision, such as a commit details page.</p>"
                }
            ]
        },
        "ActionStateList": {
            "type": "list",
            "of": "ActionState"
        },
        "ActionType": {
            "type": "structure",
            "members": [
                {
                    "name": "id",
                    "shape": "ActionTypeId"
                },
                {
                    "name": "settings",
                    "shape": "ActionTypeSettings",
                    "documentation": "<p>The settings for the action type.</p>"
                },
                {
                    "name": "actionConfigurationProperties",
                    "shape": "ActionConfigurationPropertyList",
                    "documentation": "<p>The configuration properties for the action type.</p>"
                },
                {
                    "name": "inputArtifactDetails",
                    "shape": "ArtifactDetails",
                    "documentation": "<p>The details of the input artifact for the action, such as its commit ID.</p>"
                },
                {
                    "name": "outputArtifactDetails",
                    "shape": "ArtifactDetails",
                    "documentation": "<p>The details of the output artifact of the action, such as its commit ID.</p>"
                }
            ]
        },
        "ActionTypeId": {
            "type": "structure",
            "members": [
                {
                    "name": "category",
                    "shape": "ActionCategory",
                    "documentation": "<p>A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the values below. </p>"
                },
                {
                    "name": "owner",
                    "shape": "ActionOwner",
                    "documentation": "<p>The creator of the action being called. </p>"
                },
                {
                    "name": "provider",
                    "shape": "ActionProvider",
                    "documentation": "<p>The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy.</p>"
                },
                {
                    "name": "version",
                    "shape": "Version",
                    "documentation": "<p>A string that identifies the action type. </p>"
                }
            ]
        },
        "ActionTypeList": {
            "type": "list",
            "of": "ActionType"
        },
        "ActionTypeNotFoundException": {
            "type": "structure",
            "members": []
        },
        "ActionTypeSettings": {
            "type": "structure",
            "members": [
                {
                    "name": "thirdPartyConfigurationUrl",
                    "shape": "Url",
                    "documentation": "<p>The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service. </p>"
                },
                {
                    "name": "entityUrlTemplate",
                    "shape": "UrlTemplate",
                    "documentation": "<p>The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display within the pipeline.</p>"
                },
                {
                    "name": "executionUrlTemplate",
                    "shape": "UrlTemplate",
                    "documentation": "<p>The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.</p>"
                },
                {
                    "name": "revisionUrlTemplate",
                    "shape": "UrlTemplate",
                    "documentation": "<p>The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.</p>"
                }
            ]
        },
        "Artifact": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "ArtifactName",
                    "documentation": "<p>The artifact's name.</p>"
                },
                {
                    "name": "revision",
                    "shape": "Revision",
                    "documentation": "<p>The artifact's revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).</p>"
                },
                {
                    "name": "location",
                    "shape": "ArtifactLocation",
                    "documentation": "<p>The location of an artifact.</p>"
                }
            ]
        },
        "ArtifactDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "minimumCount",
                    "shape": "MinimumArtifactCount",
                    "documentation": "<p>The minimum number of artifacts allowed for the action type.</p>"
                },
                {
                    "name": "maximumCount",
                    "shape": "MaximumArtifactCount",
                    "documentation": "<p>The maximum number of artifacts allowed for the action type.</p>"
                }
            ]
        },
        "ArtifactList": {
            "type": "list",
            "of": "Artifact"
        },
        "ArtifactLocation": {
            "type": "structure",
            "members": [
                {
                    "name": "type",
                    "shape": "ArtifactLocationType",
                    "documentation": "<p>The type of artifact in the location.</p>"
                },
                {
                    "name": "s3Location",
                    "shape": "S3ArtifactLocation",
                    "documentation": "<p>The Amazon S3 bucket that contains the artifact.</p>"
                }
            ]
        },
        "ArtifactLocationType": {
            "type": "string"
        },
        "ArtifactName": {
            "type": "string"
        },
        "ArtifactStore": {
            "type": "structure",
            "members": [
                {
                    "name": "type",
                    "shape": "ArtifactStoreType",
                    "documentation": "<p>The type of the artifact store, such as S3.</p>"
                },
                {
                    "name": "location",
                    "shape": "ArtifactStoreLocation",
                    "documentation": "<p>The location for storing the artifacts for a pipeline, such as an S3 bucket or folder.</p>"
                }
            ]
        },
        "ArtifactStoreLocation": {
            "type": "string"
        },
        "ArtifactStoreType": {
            "type": "string"
        },
        "BlockerDeclaration": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "BlockerName",
                    "documentation": "<p>The name of the gate declaration.</p>"
                },
                {
                    "name": "type",
                    "shape": "BlockerType",
                    "documentation": "<p>The type of the gate declaration. </p>"
                }
            ]
        },
        "BlockerName": {
            "type": "string"
        },
        "BlockerType": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "ClientId": {
            "type": "string"
        },
        "ClientToken": {
            "type": "string"
        },
        "Code": {
            "type": "string"
        },
        "ContinuationToken": {
            "type": "string"
        },
        "CreateCustomActionTypeInput": {
            "type": "structure",
            "members": [
                {
                    "name": "category",
                    "shape": "ActionCategory",
                    "documentation": "<p>The category of the custom action, such as a source action or a build action.</p>"
                },
                {
                    "name": "provider",
                    "shape": "ActionProvider",
                    "documentation": "<p>The provider of the service used in the custom action, such as AWS CodeDeploy.</p>"
                },
                {
                    "name": "version",
                    "shape": "Version",
                    "documentation": "<p>The version number of the custom action. </p> <note>A newly-created custom action is always assigned a version number of <code>1</code>. This is required.</note>"
                },
                {
                    "name": "settings",
                    "shape": "ActionTypeSettings"
                },
                {
                    "name": "configurationProperties",
                    "shape": "ActionConfigurationPropertyList",
                    "documentation": "<p>The configuration properties for the custom action.</p>"
                },
                {
                    "name": "inputArtifactDetails",
                    "shape": "ArtifactDetails"
                },
                {
                    "name": "outputArtifactDetails",
                    "shape": "ArtifactDetails"
                }
            ]
        },
        "CreateCustomActionTypeOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "actionType",
                    "shape": "ActionType"
                }
            ]
        },
        "CreatePipelineInput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipeline",
                    "shape": "PipelineDeclaration"
                }
            ]
        },
        "CreatePipelineOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipeline",
                    "shape": "PipelineDeclaration"
                }
            ]
        },
        "CurrentRevision": {
            "type": "structure",
            "members": [
                {
                    "name": "revision",
                    "shape": "Revision",
                    "documentation": "<p>The revision ID of the current version of an artifact.</p>"
                },
                {
                    "name": "changeIdentifier",
                    "shape": "RevisionChangeIdentifier",
                    "documentation": "<p>The change identifier for the current revision.</p>"
                }
            ]
        },
        "DeleteCustomActionTypeInput": {
            "type": "structure",
            "members": [
                {
                    "name": "category",
                    "shape": "ActionCategory",
                    "documentation": "<p>The category of the custom action that you want to delete, such as source or deploy.</p>"
                },
                {
                    "name": "provider",
                    "shape": "ActionProvider",
                    "documentation": "<p>The provider of the service used in the custom action, such as AWS CodeDeploy.</p>"
                },
                {
                    "name": "version",
                    "shape": "Version",
                    "documentation": "<p>The version of the custom action to delete.</p>"
                }
            ]
        },
        "DeletePipelineInput": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline to be deleted.</p>"
                }
            ]
        },
        "Description": {
            "type": "string"
        },
        "DisableStageTransitionInput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelineName",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline in which you want to disable the flow of artifacts from one stage to another.</p>"
                },
                {
                    "name": "stageName",
                    "shape": "StageName",
                    "documentation": "<p>The name of the stage where you want to disable the inbound or outbound transition of artifacts. </p>"
                },
                {
                    "name": "transitionType",
                    "shape": "StageTransitionType",
                    "documentation": "<p>Specifies whether artifacts will be prevented from transitioning into the stage and being processed by the actions in that stage (inbound), or prevented from transitioning from the stage after they have been processed by the actions in that stage (outbound).</p>"
                },
                {
                    "name": "reason",
                    "shape": "DisabledReason",
                    "documentation": "<p>The reason given to the user why a stage is disabled, such as waiting for manual approval or manual tests. This message is displayed in the pipeline console UI.</p>"
                }
            ]
        },
        "DisabledReason": {
            "type": "string"
        },
        "EnableStageTransitionInput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelineName",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline in which you want to enable the flow of artifacts from one stage to another.</p>"
                },
                {
                    "name": "stageName",
                    "shape": "StageName",
                    "documentation": "<p>The name of the stage where you want to enable the transition of artifacts, either into the stage (inbound) or from that stage to the next stage (outbound).</p>"
                },
                {
                    "name": "transitionType",
                    "shape": "StageTransitionType",
                    "documentation": "<p>Specifies whether artifacts will be allowed to enter the stage and be processed by the actions in that stage (inbound) or whether already-processed artifacts will be allowed to transition to the next stage (outbound).</p>"
                }
            ]
        },
        "Enabled": {
            "type": "boolean"
        },
        "ErrorDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "code",
                    "shape": "Code",
                    "documentation": "<p>The system ID or error number code of the error.</p>"
                },
                {
                    "name": "message",
                    "shape": "Message",
                    "documentation": "<p>The text of the error message.</p>"
                }
            ]
        },
        "ExecutionDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "summary",
                    "shape": "ExecutionSummary",
                    "documentation": "<p>The summary of the current status of the actions.</p>"
                },
                {
                    "name": "externalExecutionId",
                    "shape": "ExecutionId",
                    "documentation": "<p>The system-generated unique ID of this action used to identify this job worker in any external systems, such as AWS CodeDeploy.</p>"
                },
                {
                    "name": "percentComplete",
                    "shape": "Percentage",
                    "documentation": "<p>The percentage of work completed on the action, represented on a scale of zero to one hundred percent.</p>"
                }
            ]
        },
        "ExecutionId": {
            "type": "string"
        },
        "ExecutionSummary": {
            "type": "string"
        },
        "FailureDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "type",
                    "shape": "FailureType",
                    "documentation": "<p>The type of the failure.</p>"
                },
                {
                    "name": "message",
                    "shape": "Message",
                    "documentation": "<p>The message about the failure.</p>"
                },
                {
                    "name": "externalExecutionId",
                    "shape": "ExecutionId",
                    "documentation": "<p>The external ID of the run of the action that failed.</p>"
                }
            ]
        },
        "FailureType": {
            "type": "string"
        },
        "GetJobDetailsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "JobId",
                    "documentation": "<p>The unique system-generated ID for the job.</p>"
                }
            ]
        },
        "GetJobDetailsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobDetails",
                    "shape": "JobDetails",
                    "documentation": "<p>The details of the job. </p> <note> <p>If AWSSessionCredentials is used, a long-running job can call GetJobDetails again to obtain new credentials.</p> </note>"
                }
            ]
        },
        "GetPipelineInput": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline for which you want to get information. Pipeline names must be unique under an Amazon Web Services (AWS) user account.</p>"
                },
                {
                    "name": "version",
                    "shape": "PipelineVersion",
                    "documentation": "<p>The version number of the pipeline. If you do not specify a version, defaults to the most current version.</p>"
                }
            ]
        },
        "GetPipelineOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipeline",
                    "shape": "PipelineDeclaration"
                }
            ]
        },
        "GetPipelineStateInput": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline about which you want to get information.</p>"
                }
            ]
        },
        "GetPipelineStateOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelineName",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline for which you want to get the state.</p>"
                },
                {
                    "name": "pipelineVersion",
                    "shape": "PipelineVersion",
                    "documentation": "<p>The version number of the pipeline.</p> <note>A newly-created pipeline is always assigned a version number of <code>1</code>.</note>"
                },
                {
                    "name": "stageStates",
                    "shape": "StageStateList",
                    "documentation": "<p>A list of the pipeline stage output information, including stage name, state, most recent run details, whether the stage is disabled, and other data. </p>"
                },
                {
                    "name": "created",
                    "shape": "Timestamp",
                    "documentation": "<p>The date and time the pipeline was created, in timestamp format.</p>"
                },
                {
                    "name": "updated",
                    "shape": "Timestamp",
                    "documentation": "<p>The date and time the pipeline was last updated, in timestamp format.</p>"
                }
            ]
        },
        "GetThirdPartyJobDetailsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "ThirdPartyJobId",
                    "documentation": "<p>The unique system-generated ID used for identifying the job.</p>"
                },
                {
                    "name": "clientToken",
                    "shape": "ClientToken",
                    "documentation": "<p>The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.</p>"
                }
            ]
        },
        "GetThirdPartyJobDetailsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobDetails",
                    "shape": "ThirdPartyJobDetails",
                    "documentation": "<p>The details of the job, including any protected values defined for the job. </p>"
                }
            ]
        },
        "InputArtifact": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "ArtifactName",
                    "documentation": "<p>The name of the artifact to be worked on, for example, \"My App\".</p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p>"
                }
            ]
        },
        "InputArtifactList": {
            "type": "list",
            "of": "InputArtifact"
        },
        "InvalidActionDeclarationException": {
            "type": "structure",
            "members": []
        },
        "InvalidBlockerDeclarationException": {
            "type": "structure",
            "members": []
        },
        "InvalidClientTokenException": {
            "type": "structure",
            "members": []
        },
        "InvalidJobException": {
            "type": "structure",
            "members": []
        },
        "InvalidJobStateException": {
            "type": "structure",
            "members": []
        },
        "InvalidNextTokenException": {
            "type": "structure",
            "members": []
        },
        "InvalidNonceException": {
            "type": "structure",
            "members": []
        },
        "InvalidStageDeclarationException": {
            "type": "structure",
            "members": []
        },
        "InvalidStructureException": {
            "type": "structure",
            "members": []
        },
        "Job": {
            "type": "structure",
            "members": [
                {
                    "name": "id",
                    "shape": "JobId",
                    "documentation": "<p>The unique system-generated ID of the job.</p>"
                },
                {
                    "name": "data",
                    "shape": "JobData",
                    "documentation": "<p>Additional data about a job.</p>"
                },
                {
                    "name": "nonce",
                    "shape": "Nonce",
                    "documentation": "<p>A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. This number must be returned in the response.</p>"
                },
                {
                    "name": "accountId",
                    "shape": "AccountId",
                    "documentation": "<p>The ID of the AWS account to use when performing the job.</p>"
                }
            ]
        },
        "JobData": {
            "type": "structure",
            "members": [
                {
                    "name": "actionTypeId",
                    "shape": "ActionTypeId"
                },
                {
                    "name": "actionConfiguration",
                    "shape": "ActionConfiguration"
                },
                {
                    "name": "pipelineContext",
                    "shape": "PipelineContext"
                },
                {
                    "name": "inputArtifacts",
                    "shape": "ArtifactList",
                    "documentation": "<p>The artifact supplied to the job.</p>"
                },
                {
                    "name": "outputArtifacts",
                    "shape": "ArtifactList",
                    "documentation": "<p>The output of the job.</p>"
                },
                {
                    "name": "artifactCredentials",
                    "shape": "AWSSessionCredentials"
                },
                {
                    "name": "continuationToken",
                    "shape": "ContinuationToken",
                    "documentation": "<p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires in order to continue the job asynchronously.</p>"
                }
            ]
        },
        "JobDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "id",
                    "shape": "JobId",
                    "documentation": "<p>The unique system-generated ID of the job.</p>"
                },
                {
                    "name": "data",
                    "shape": "JobData"
                },
                {
                    "name": "accountId",
                    "shape": "AccountId",
                    "documentation": "<p>The AWS account ID associated with the job.</p>"
                }
            ]
        },
        "JobId": {
            "type": "string"
        },
        "JobList": {
            "type": "list",
            "of": "Job"
        },
        "JobNotFoundException": {
            "type": "structure",
            "members": []
        },
        "JobStatus": {
            "type": "string"
        },
        "LastChangedAt": {
            "type": "timestamp"
        },
        "LastChangedBy": {
            "type": "string"
        },
        "LimitExceededException": {
            "type": "structure",
            "members": []
        },
        "ListActionTypesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "actionOwnerFilter",
                    "shape": "ActionOwner",
                    "documentation": "<p>Filters the list of action types to those created by a specified entity.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "NextToken",
                    "documentation": "<p>An identifier that was returned from the previous list action types call, which can be used to return the next set of action types in the list.</p>"
                }
            ]
        },
        "ListActionTypesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "actionTypes",
                    "shape": "ActionTypeList",
                    "documentation": "<p>Provides details of the action types.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "NextToken",
                    "documentation": "<p>If the amount of returned information is significantly large, an identifier is also returned which can be used in a subsequent list action types call to return the next set of action types in the list.</p>"
                }
            ]
        },
        "ListPipelinesInput": {
            "type": "structure",
            "members": [
                {
                    "name": "nextToken",
                    "shape": "NextToken",
                    "documentation": "<p>An identifier that was returned from the previous list pipelines call, which can be used to return the next set of pipelines in the list.</p>"
                }
            ]
        },
        "ListPipelinesOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelines",
                    "shape": "PipelineList",
                    "documentation": "<p>The list of pipelines.</p>"
                },
                {
                    "name": "nextToken",
                    "shape": "NextToken",
                    "documentation": "<p>If the amount of returned information is significantly large, an identifier is also returned which can be used in a subsequent list pipelines call to return the next set of pipelines in the list.</p>"
                }
            ]
        },
        "MaxBatchSize": {
            "type": "integer"
        },
        "MaximumArtifactCount": {
            "type": "integer"
        },
        "Message": {
            "type": "string"
        },
        "MinimumArtifactCount": {
            "type": "integer"
        },
        "NextToken": {
            "type": "string"
        },
        "Nonce": {
            "type": "string"
        },
        "OutputArtifact": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "ArtifactName",
                    "documentation": "<p>The name of the output of an artifact, such as \"My App\". </p> <p>The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.</p> <p>Output artifact names must be unique within a pipeline.</p>"
                }
            ]
        },
        "OutputArtifactList": {
            "type": "list",
            "of": "OutputArtifact"
        },
        "Percentage": {
            "type": "integer"
        },
        "PipelineContext": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelineName",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.</p>"
                },
                {
                    "name": "stage",
                    "shape": "StageContext",
                    "documentation": "<p>The stage of the pipeline.</p>"
                },
                {
                    "name": "action",
                    "shape": "ActionContext"
                }
            ]
        },
        "PipelineDeclaration": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the action to be performed. </p>"
                },
                {
                    "name": "roleArn",
                    "shape": "RoleArn",
                    "documentation": "<p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn.</p>"
                },
                {
                    "name": "artifactStore",
                    "shape": "ArtifactStore"
                },
                {
                    "name": "stages",
                    "shape": "PipelineStageDeclarationList",
                    "documentation": "<p>The stage in which to perform the action. </p>"
                },
                {
                    "name": "version",
                    "shape": "PipelineVersion",
                    "documentation": "<p>The version number of the pipeline. A new pipeline always has a version number of 1. This number is automatically incremented when a pipeline is updated.</p>"
                }
            ]
        },
        "PipelineExecutionId": {
            "type": "string"
        },
        "PipelineList": {
            "type": "list",
            "of": "PipelineSummary"
        },
        "PipelineName": {
            "type": "string"
        },
        "PipelineNameInUseException": {
            "type": "structure",
            "members": []
        },
        "PipelineNotFoundException": {
            "type": "structure",
            "members": []
        },
        "PipelineStageDeclarationList": {
            "type": "list",
            "of": "StageDeclaration"
        },
        "PipelineSummary": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline.</p>"
                },
                {
                    "name": "version",
                    "shape": "PipelineVersion",
                    "documentation": "<p>The version number of the pipeline.</p>"
                },
                {
                    "name": "created",
                    "shape": "Timestamp",
                    "documentation": "<p>The date and time the pipeline was created, in timestamp format.</p>"
                },
                {
                    "name": "updated",
                    "shape": "Timestamp",
                    "documentation": "<p>The date and time of the last update to the pipeline, in timestamp format.</p>"
                }
            ]
        },
        "PipelineVersion": {
            "type": "integer"
        },
        "PipelineVersionNotFoundException": {
            "type": "structure",
            "members": []
        },
        "PollForJobsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "actionTypeId",
                    "shape": "ActionTypeId"
                },
                {
                    "name": "maxBatchSize",
                    "shape": "MaxBatchSize",
                    "documentation": "<p>The maximum number of jobs to return in a poll for jobs call.</p>"
                },
                {
                    "name": "queryParam",
                    "shape": "QueryParamMap",
                    "documentation": "<p>A map of property names and values. For an action type with no queryable properties, this value must be null or an empty map. For an action type with a queryable property, you must supply that property as a key in the map. Only jobs whose action configuration matches the mapped value will be returned.</p>"
                }
            ]
        },
        "PollForJobsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobs",
                    "shape": "JobList",
                    "documentation": "<p>Information about the jobs to take action on.</p>"
                }
            ]
        },
        "PollForThirdPartyJobsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "actionTypeId",
                    "shape": "ActionTypeId"
                },
                {
                    "name": "maxBatchSize",
                    "shape": "MaxBatchSize",
                    "documentation": "<p>The maximum number of jobs to return in a poll for jobs call.</p>"
                }
            ]
        },
        "PollForThirdPartyJobsOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobs",
                    "shape": "ThirdPartyJobList",
                    "documentation": "<p>Information about the jobs to take action on.</p>"
                }
            ]
        },
        "PutActionRevisionInput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelineName",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline that will start processing the revision to the source.</p>"
                },
                {
                    "name": "stageName",
                    "shape": "StageName",
                    "documentation": "<p>The name of the stage that contains the action that will act upon the revision.</p>"
                },
                {
                    "name": "actionName",
                    "shape": "ActionName",
                    "documentation": "<p>The name of the action that will process the revision.</p>"
                },
                {
                    "name": "actionRevision",
                    "shape": "ActionRevision"
                }
            ]
        },
        "PutActionRevisionOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "newRevision",
                    "shape": "Boolean",
                    "documentation": "<p>The new revision number or ID for the revision after the action completes.</p>"
                },
                {
                    "name": "pipelineExecutionId",
                    "shape": "PipelineExecutionId",
                    "documentation": "<p>The ID of the current workflow state of the pipeline. </p>"
                }
            ]
        },
        "PutJobFailureResultInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "JobId",
                    "documentation": "<p>The unique system-generated ID of the job that failed. This is the same ID returned from PollForJobs.</p>"
                },
                {
                    "name": "failureDetails",
                    "shape": "FailureDetails",
                    "documentation": "<p>The details about the failure of a job. </p>"
                }
            ]
        },
        "PutJobSuccessResultInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "JobId",
                    "documentation": "<p>The unique system-generated ID of the job that succeeded. This is the same ID returned from PollForJobs.</p>"
                },
                {
                    "name": "currentRevision",
                    "shape": "CurrentRevision",
                    "documentation": "<p>The ID of the current revision of the artifact successfully worked upon by the job. </p>"
                },
                {
                    "name": "continuationToken",
                    "shape": "ContinuationToken",
                    "documentation": "<p>A system-generated token, such as a AWS CodeDeploy deployment ID, that the successful job used to complete a job asynchronously. </p>"
                },
                {
                    "name": "executionDetails",
                    "shape": "ExecutionDetails",
                    "documentation": "<p>The execution details of the successful job, such as the actions taken by the job worker. </p>"
                }
            ]
        },
        "PutThirdPartyJobFailureResultInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "ThirdPartyJobId",
                    "documentation": "<p>The ID of the job that failed. This is the same ID returned from PollForThirdPartyJobs.</p>"
                },
                {
                    "name": "clientToken",
                    "shape": "ClientToken",
                    "documentation": "<p>The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.</p>"
                },
                {
                    "name": "failureDetails",
                    "shape": "FailureDetails"
                }
            ]
        },
        "PutThirdPartyJobSuccessResultInput": {
            "type": "structure",
            "members": [
                {
                    "name": "jobId",
                    "shape": "ThirdPartyJobId",
                    "documentation": "<p>The ID of the job that successfully completed. This is the same ID returned from PollForThirdPartyJobs.</p>"
                },
                {
                    "name": "clientToken",
                    "shape": "ClientToken",
                    "documentation": "<p>The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.</p>"
                },
                {
                    "name": "currentRevision",
                    "shape": "CurrentRevision"
                },
                {
                    "name": "continuationToken",
                    "shape": "ContinuationToken",
                    "documentation": "<p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job uses in order to continue the job asynchronously.</p>"
                },
                {
                    "name": "executionDetails",
                    "shape": "ExecutionDetails"
                }
            ]
        },
        "QueryParamMap": {
            "type": "map"
        },
        "Revision": {
            "type": "string"
        },
        "RevisionChangeId": {
            "type": "string"
        },
        "RevisionChangeIdentifier": {
            "type": "string"
        },
        "RevisionId": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "S3ArtifactLocation": {
            "type": "structure",
            "members": [
                {
                    "name": "bucketName",
                    "shape": "S3BucketName",
                    "documentation": "<p>The name of the Amazon S3 bucket. </p>"
                },
                {
                    "name": "objectKey",
                    "shape": "S3ObjectKey",
                    "documentation": "<p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object in the bucket. </p>"
                }
            ]
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3ObjectKey": {
            "type": "string"
        },
        "SecretAccessKey": {
            "type": "string"
        },
        "SessionToken": {
            "type": "string"
        },
        "StageActionDeclarationList": {
            "type": "list",
            "of": "ActionDeclaration"
        },
        "StageBlockerDeclarationList": {
            "type": "list",
            "of": "BlockerDeclaration"
        },
        "StageContext": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "StageName",
                    "documentation": "<p>The name of the stage.</p>"
                }
            ]
        },
        "StageDeclaration": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "StageName",
                    "documentation": "<p>The name of the stage.</p>"
                },
                {
                    "name": "blockers",
                    "shape": "StageBlockerDeclarationList",
                    "documentation": "<p>The gates included in a stage.</p>"
                },
                {
                    "name": "actions",
                    "shape": "StageActionDeclarationList",
                    "documentation": "<p>The actions included in a stage.</p>"
                }
            ]
        },
        "StageName": {
            "type": "string"
        },
        "StageNotFoundException": {
            "type": "structure",
            "members": []
        },
        "StageState": {
            "type": "structure",
            "members": [
                {
                    "name": "stageName",
                    "shape": "StageName",
                    "documentation": "<p>The name of the stage.</p>"
                },
                {
                    "name": "inboundTransitionState",
                    "shape": "TransitionState",
                    "documentation": "<p>The state of the inbound transition, which is either enabled or disabled.</p>"
                },
                {
                    "name": "actionStates",
                    "shape": "ActionStateList",
                    "documentation": "<p>The state of the stage.</p>"
                }
            ]
        },
        "StageStateList": {
            "type": "list",
            "of": "StageState"
        },
        "StageTransitionType": {
            "type": "string"
        },
        "StartPipelineExecutionInput": {
            "type": "structure",
            "members": [
                {
                    "name": "name",
                    "shape": "PipelineName",
                    "documentation": "<p>The name of the pipeline to start.</p>"
                }
            ]
        },
        "StartPipelineExecutionOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipelineExecutionId",
                    "shape": "PipelineExecutionId",
                    "documentation": "<p>The unique system-generated ID of the pipeline that was started.</p>"
                }
            ]
        },
        "ThirdPartyJob": {
            "type": "structure",
            "members": [
                {
                    "name": "clientId",
                    "shape": "ClientId",
                    "documentation": "<p>The clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.</p>"
                },
                {
                    "name": "jobId",
                    "shape": "JobId",
                    "documentation": "<p>The identifier used to identify the job in AWS CodePipeline.</p>"
                }
            ]
        },
        "ThirdPartyJobData": {
            "type": "structure",
            "members": [
                {
                    "name": "actionTypeId",
                    "shape": "ActionTypeId"
                },
                {
                    "name": "actionConfiguration",
                    "shape": "ActionConfiguration"
                },
                {
                    "name": "pipelineContext",
                    "shape": "PipelineContext"
                },
                {
                    "name": "inputArtifacts",
                    "shape": "ArtifactList",
                    "documentation": "<p>The name of the artifact that will be worked upon by the action, if any. This name might be system-generated, such as \"MyApp\", or might be defined by the user when the action is created. The input artifact name must match the name of an output artifact generated by an action in an earlier action or stage of the pipeline.</p>"
                },
                {
                    "name": "outputArtifacts",
                    "shape": "ArtifactList",
                    "documentation": "<p>The name of the artifact that will be the result of the action, if any. This name might be system-generated, such as \"MyBuiltApp\", or might be defined by the user when the action is created.</p>"
                },
                {
                    "name": "artifactCredentials",
                    "shape": "AWSSessionCredentials"
                },
                {
                    "name": "continuationToken",
                    "shape": "ContinuationToken",
                    "documentation": "<p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires in order to continue the job asynchronously.</p>"
                }
            ]
        },
        "ThirdPartyJobDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "id",
                    "shape": "ThirdPartyJobId",
                    "documentation": "<p>The identifier used to identify the job details in AWS CodePipeline.</p>"
                },
                {
                    "name": "data",
                    "shape": "ThirdPartyJobData",
                    "documentation": "<p>The data to be returned by the third party job worker.</p>"
                },
                {
                    "name": "nonce",
                    "shape": "Nonce",
                    "documentation": "<p>A system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. This number must be returned in the response.</p>"
                }
            ]
        },
        "ThirdPartyJobId": {
            "type": "string"
        },
        "ThirdPartyJobList": {
            "type": "list",
            "of": "ThirdPartyJob"
        },
        "Timestamp": {
            "type": "timestamp"
        },
        "TransitionState": {
            "type": "structure",
            "members": [
                {
                    "name": "enabled",
                    "shape": "Enabled",
                    "documentation": "<p>Whether the transition between stages is enabled (true) or disabled (false).</p>"
                },
                {
                    "name": "lastChangedBy",
                    "shape": "LastChangedBy",
                    "documentation": "<p>The ID of the user who last changed the transition state.</p>"
                },
                {
                    "name": "lastChangedAt",
                    "shape": "LastChangedAt",
                    "documentation": "<p>The timestamp when the transition state was last changed.</p>"
                },
                {
                    "name": "disabledReason",
                    "shape": "DisabledReason",
                    "documentation": "<p>The user-specified reason why the transition between two stages of a pipeline was disabled.</p>"
                }
            ]
        },
        "UpdatePipelineInput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipeline",
                    "shape": "PipelineDeclaration",
                    "documentation": "<p>The name of the pipeline to be updated.</p>"
                }
            ]
        },
        "UpdatePipelineOutput": {
            "type": "structure",
            "members": [
                {
                    "name": "pipeline",
                    "shape": "PipelineDeclaration",
                    "documentation": "<p>The structure of the updated pipeline.</p>"
                }
            ]
        },
        "Url": {
            "type": "string"
        },
        "UrlTemplate": {
            "type": "string"
        },
        "ValidationException": {
            "type": "structure",
            "members": []
        },
        "Version": {
            "type": "string"
        }
    }
}