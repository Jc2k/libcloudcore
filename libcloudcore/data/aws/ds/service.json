{
    "metadata": {},
    "endpoints": [
        {
            "when": [
                [
                    "region",
                    "starts-with",
                    "cn-"
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com.cn"
            }
        },
        {
            "when": [
                [
                    "region",
                    "not-equals",
                    null
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com"
            }
        }
    ],
    "operations": {
        "ConnectDirectory": {
            "documentation": "<p>Creates an AD Connector to connect an on-premises directory.</p>",
            "input": {
                "shape": "ConnectDirectoryRequest"
            },
            "output": {
                "shape": "ConnectDirectoryResult"
            }
        },
        "CreateAlias": {
            "documentation": "<p>Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&#x3C;alias&#x3E;.awsapps.com</code>.</p> <important> <p>After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.</p> </important>",
            "input": {
                "shape": "CreateAliasRequest"
            },
            "output": {
                "shape": "CreateAliasResult"
            }
        },
        "CreateComputer": {
            "documentation": "<p>Creates a computer account in the specified directory, and joins the computer to the directory.</p>",
            "input": {
                "shape": "CreateComputerRequest"
            },
            "output": {
                "shape": "CreateComputerResult"
            }
        },
        "CreateDirectory": {
            "documentation": "<p>Creates a Simple AD directory.</p>",
            "input": {
                "shape": "CreateDirectoryRequest"
            },
            "output": {
                "shape": "CreateDirectoryResult"
            }
        },
        "CreateSnapshot": {
            "documentation": "<p>Creates a snapshot of an existing directory.</p> <p>You cannot take snapshots of extended or connected directories.</p>",
            "input": {
                "shape": "CreateSnapshotRequest"
            },
            "output": {
                "shape": "CreateSnapshotResult"
            }
        },
        "DeleteDirectory": {
            "documentation": "<p>Deletes an AWS Directory Service directory.</p>",
            "input": {
                "shape": "DeleteDirectoryRequest"
            },
            "output": {
                "shape": "DeleteDirectoryResult"
            }
        },
        "DeleteSnapshot": {
            "documentation": "<p>Deletes a directory snapshot.</p>",
            "input": {
                "shape": "DeleteSnapshotRequest"
            },
            "output": {
                "shape": "DeleteSnapshotResult"
            }
        },
        "DescribeDirectories": {
            "documentation": "<p>Obtains information about the directories that belong to this account.</p> <p>You can retrieve information about specific directories by passing the directory identifiers in the <i>DirectoryIds</i> parameter. Otherwise, all directories that belong to the current account are returned.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeDirectoriesResult.NextToken</i> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>",
            "input": {
                "shape": "DescribeDirectoriesRequest"
            },
            "output": {
                "shape": "DescribeDirectoriesResult"
            }
        },
        "DescribeSnapshots": {
            "documentation": "<p>Obtains information about the directory snapshots that belong to this account.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>",
            "input": {
                "shape": "DescribeSnapshotsRequest"
            },
            "output": {
                "shape": "DescribeSnapshotsResult"
            }
        },
        "DisableRadius": {
            "documentation": "<p>Disables multi-factor authentication (MFA) with Remote Authentication Dial In User Service (RADIUS) for an AD Connector directory.</p>",
            "input": {
                "shape": "DisableRadiusRequest"
            },
            "output": {
                "shape": "DisableRadiusResult"
            }
        },
        "DisableSso": {
            "documentation": "<p>Disables single-sign on for a directory.</p>",
            "input": {
                "shape": "DisableSsoRequest"
            },
            "output": {
                "shape": "DisableSsoResult"
            }
        },
        "EnableRadius": {
            "documentation": "<p>Enables multi-factor authentication (MFA) with Remote Authentication Dial In User Service (RADIUS) for an AD Connector directory.</p>",
            "input": {
                "shape": "EnableRadiusRequest"
            },
            "output": {
                "shape": "EnableRadiusResult"
            }
        },
        "EnableSso": {
            "documentation": "<p>Enables single-sign on for a directory.</p>",
            "input": {
                "shape": "EnableSsoRequest"
            },
            "output": {
                "shape": "EnableSsoResult"
            }
        },
        "GetDirectoryLimits": {
            "documentation": "<p>Obtains directory limit information for the current region.</p>",
            "input": {
                "shape": "GetDirectoryLimitsRequest"
            },
            "output": {
                "shape": "GetDirectoryLimitsResult"
            }
        },
        "GetSnapshotLimits": {
            "documentation": "<p>Obtains the manual snapshot limits for a directory.</p>",
            "input": {
                "shape": "GetSnapshotLimitsRequest"
            },
            "output": {
                "shape": "GetSnapshotLimitsResult"
            }
        },
        "RestoreFromSnapshot": {
            "documentation": "<p>Restores a directory using an existing directory snapshot.</p> <p>When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.</p> <p>This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.</p>",
            "input": {
                "shape": "RestoreFromSnapshotRequest"
            },
            "output": {
                "shape": "RestoreFromSnapshotResult"
            }
        },
        "UpdateRadius": {
            "documentation": "<p>Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector directory.</p>",
            "input": {
                "shape": "UpdateRadiusRequest"
            },
            "output": {
                "shape": "UpdateRadiusResult"
            }
        }
    },
    "shapes": {
        "AccessUrl": {
            "type": "string"
        },
        "AliasName": {
            "type": "string"
        },
        "Attribute": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "AttributeName",
                    "documentation": "<p>The name of the attribute.</p>"
                },
                {
                    "name": "Value",
                    "shape": "AttributeValue",
                    "documentation": "<p>The value of the attribute.</p>"
                }
            ]
        },
        "AttributeName": {
            "type": "string"
        },
        "AttributeValue": {
            "type": "string"
        },
        "Attributes": {
            "type": "list",
            "of": "Attribute"
        },
        "AuthenticationFailedException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage",
                    "documentation": "<p>The textual message for the exception.</p>"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId",
                    "documentation": "<p>The identifier of the request that caused the exception.</p>"
                }
            ]
        },
        "AvailabilityZone": {
            "type": "string"
        },
        "AvailabilityZones": {
            "type": "list",
            "of": "AvailabilityZone"
        },
        "ClientException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "CloudOnlyDirectoriesLimitReached": {
            "type": "boolean"
        },
        "Computer": {
            "type": "structure",
            "members": [
                {
                    "name": "ComputerId",
                    "shape": "SID",
                    "documentation": "<p>The identifier of the computer.</p>"
                },
                {
                    "name": "ComputerName",
                    "shape": "ComputerName",
                    "documentation": "<p>The computer name.</p>"
                },
                {
                    "name": "ComputerAttributes",
                    "shape": "Attributes",
                    "documentation": "<p>An array of <a>Attribute</a> objects that contain the LDAP attributes that belong to the computer account.</p>"
                }
            ]
        },
        "ComputerName": {
            "type": "string"
        },
        "ComputerPassword": {
            "type": "string"
        },
        "ConnectDirectoryRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "DirectoryName",
                    "documentation": "<p>The fully-qualified name of the on-premises directory, such as <code>corp.example.com</code>.</p>"
                },
                {
                    "name": "ShortName",
                    "shape": "DirectoryShortName",
                    "documentation": "<p>The NetBIOS name of the on-premises directory, such as <code>CORP</code>.</p>"
                },
                {
                    "name": "Password",
                    "shape": "ConnectPassword",
                    "documentation": "<p>The password for the on-premises user account.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A textual description for the directory.</p>"
                },
                {
                    "name": "Size",
                    "shape": "DirectorySize",
                    "documentation": "<p>The size of the directory.</p>"
                },
                {
                    "name": "ConnectSettings",
                    "shape": "DirectoryConnectSettings",
                    "documentation": "<p>A <a>DirectoryConnectSettings</a> object that contains additional information for the operation.</p>"
                }
            ]
        },
        "ConnectDirectoryResult": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the new directory.</p>"
                }
            ]
        },
        "ConnectPassword": {
            "type": "string"
        },
        "ConnectedDirectoriesLimitReached": {
            "type": "boolean"
        },
        "CreateAliasRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to create the alias for.</p>"
                },
                {
                    "name": "Alias",
                    "shape": "AliasName",
                    "documentation": "<p>The requested alias.</p> <p>The alias must be unique amongst all aliases in AWS. This operation will throw an <code>EntityAlreadyExistsException</code> if this alias already exists.</p>"
                }
            ]
        },
        "CreateAliasResult": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory.</p>"
                },
                {
                    "name": "Alias",
                    "shape": "AliasName",
                    "documentation": "<p>The alias for the directory.</p>"
                }
            ]
        },
        "CreateComputerRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to create the computer account in.</p>"
                },
                {
                    "name": "ComputerName",
                    "shape": "ComputerName",
                    "documentation": "<p>The name of the computer account.</p>"
                },
                {
                    "name": "Password",
                    "shape": "ComputerPassword",
                    "documentation": "<p>A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter.</p>"
                },
                {
                    "name": "OrganizationalUnitDistinguishedName",
                    "shape": "OrganizationalUnitDN",
                    "documentation": "<p>The fully-qualified distinguished name of the organizational unit to place the computer account in.</p>"
                },
                {
                    "name": "ComputerAttributes",
                    "shape": "Attributes",
                    "documentation": "<p>An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to the computer account.</p>"
                }
            ]
        },
        "CreateComputerResult": {
            "type": "structure",
            "members": [
                {
                    "name": "Computer",
                    "shape": "Computer",
                    "documentation": "<p>A Computer object the represents the computer account.</p>"
                }
            ]
        },
        "CreateDirectoryRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "DirectoryName",
                    "documentation": "<p>The fully qualified name for the directory, such as <code>corp.example.com</code>.</p>"
                },
                {
                    "name": "ShortName",
                    "shape": "DirectoryShortName",
                    "documentation": "<p>The short name of the directory, such as <code>CORP</code>.</p>"
                },
                {
                    "name": "Password",
                    "shape": "Password",
                    "documentation": "<p>The password for the directory administrator. The directory creation process creates a directory administrator account with the username <code>Administrator</code> and this password.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A textual description for the directory.</p>"
                },
                {
                    "name": "Size",
                    "shape": "DirectorySize",
                    "documentation": "<p>The size of the directory.</p>"
                },
                {
                    "name": "VpcSettings",
                    "shape": "DirectoryVpcSettings",
                    "documentation": "<p>A <a>DirectoryVpcSettings</a> object that contains additional information for the operation.</p>"
                }
            ]
        },
        "CreateDirectoryResult": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory that was created.</p>"
                }
            ]
        },
        "CreateSnapshotRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to take a snapshot of.</p>"
                },
                {
                    "name": "Name",
                    "shape": "SnapshotName",
                    "documentation": "<p>The descriptive name to apply to the snapshot.</p>"
                }
            ]
        },
        "CreateSnapshotResult": {
            "type": "structure",
            "members": [
                {
                    "name": "SnapshotId",
                    "shape": "SnapshotId",
                    "documentation": "<p>The identifier of the snapshot that was created.</p>"
                }
            ]
        },
        "DeleteDirectoryRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to delete.</p>"
                }
            ]
        },
        "DeleteDirectoryResult": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The directory identifier.</p>"
                }
            ]
        },
        "DeleteSnapshotRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SnapshotId",
                    "shape": "SnapshotId",
                    "documentation": "<p>The identifier of the directory snapshot to be deleted.</p>"
                }
            ]
        },
        "DeleteSnapshotResult": {
            "type": "structure",
            "members": [
                {
                    "name": "SnapshotId",
                    "shape": "SnapshotId",
                    "documentation": "<p>The identifier of the directory snapshot that was deleted.</p>"
                }
            ]
        },
        "DescribeDirectoriesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryIds",
                    "shape": "DirectoryIds",
                    "documentation": "<p>A list of identifiers of the directories to obtain the information for. If this member is null, all directories that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "NextToken",
                    "documentation": "<p>The <i>DescribeDirectoriesResult.NextToken</i> value from a previous call to <a>DescribeDirectories</a>. Pass null if this is the first call.</p>"
                },
                {
                    "name": "Limit",
                    "shape": "Limit",
                    "documentation": "<p>The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.</p>"
                }
            ]
        },
        "DescribeDirectoriesResult": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryDescriptions",
                    "shape": "DirectoryDescriptions",
                    "documentation": "<p>The list of <a>DirectoryDescription</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "NextToken",
                    "documentation": "<p>If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next set of items.</p>"
                }
            ]
        },
        "DescribeSnapshotsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to retrieve snapshot information for.</p>"
                },
                {
                    "name": "SnapshotIds",
                    "shape": "SnapshotIds",
                    "documentation": "<p>A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i> members.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "NextToken",
                    "documentation": "<p>The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>. Pass null if this is the first call.</p>"
                },
                {
                    "name": "Limit",
                    "shape": "Limit",
                    "documentation": "<p>The maximum number of objects to return.</p>"
                }
            ]
        },
        "DescribeSnapshotsResult": {
            "type": "structure",
            "members": [
                {
                    "name": "Snapshots",
                    "shape": "Snapshots",
                    "documentation": "<p>The list of <a>Snapshot</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "NextToken",
                    "documentation": "<p>If not null, more results are available. Pass this value in the <i>NextToken</i> member of a subsequent call to <a>DescribeSnapshots</a>.</p>"
                }
            ]
        },
        "Description": {
            "type": "string"
        },
        "DirectoryConnectSettings": {
            "type": "structure",
            "members": [
                {
                    "name": "VpcId",
                    "shape": "VpcId",
                    "documentation": "<p>The identifier of the VPC that the AD Connector is created in.</p>"
                },
                {
                    "name": "SubnetIds",
                    "shape": "SubnetIds",
                    "documentation": "<p>A list of subnet identifiers in the VPC that the AD Connector is created in.</p>"
                },
                {
                    "name": "CustomerDnsIps",
                    "shape": "DnsIpAddrs",
                    "documentation": "<p>A list of one or more IP addresses of DNS servers or domain controllers in the on-premises directory.</p>"
                },
                {
                    "name": "CustomerUserName",
                    "shape": "UserName",
                    "documentation": "<p>The username of an account in the on-premises directory that is used to connect to the directory. This account must have the following privileges:</p> <ul> <li>Read users and groups</li> <li>Create computer objects</li> <li>Join computers to the domain</li> </ul>"
                }
            ]
        },
        "DirectoryConnectSettingsDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "VpcId",
                    "shape": "VpcId",
                    "documentation": "<p>The identifier of the VPC that the AD Connector is in.</p>"
                },
                {
                    "name": "SubnetIds",
                    "shape": "SubnetIds",
                    "documentation": "<p>A list of subnet identifiers in the VPC that the AD connector is in.</p>"
                },
                {
                    "name": "CustomerUserName",
                    "shape": "UserName",
                    "documentation": "<p>The username of the service account in the on-premises directory.</p>"
                },
                {
                    "name": "SecurityGroupId",
                    "shape": "SecurityGroupId",
                    "documentation": "<p>The security group identifier for the AD Connector directory.</p>"
                },
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>A list of the Availability Zones that the directory is in.</p>"
                },
                {
                    "name": "ConnectIps",
                    "shape": "IpAddrs",
                    "documentation": "<p>The IP addresses of the AD Connector servers.</p>"
                }
            ]
        },
        "DirectoryDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The directory identifier.</p>"
                },
                {
                    "name": "Name",
                    "shape": "DirectoryName",
                    "documentation": "<p>The fully-qualified name of the directory.</p>"
                },
                {
                    "name": "ShortName",
                    "shape": "DirectoryShortName",
                    "documentation": "<p>The short name of the directory.</p>"
                },
                {
                    "name": "Size",
                    "shape": "DirectorySize",
                    "documentation": "<p>The directory size.</p>"
                },
                {
                    "name": "Alias",
                    "shape": "AliasName",
                    "documentation": "<p>The alias for the directory.</p>"
                },
                {
                    "name": "AccessUrl",
                    "shape": "AccessUrl",
                    "documentation": "<p>The access URL for the directory, such as <code>http://&#x3C;alias&#x3E;.awsapps.com</code>.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>The textual description for the directory.</p>"
                },
                {
                    "name": "DnsIpAddrs",
                    "shape": "DnsIpAddrs",
                    "documentation": "<p>The IP addresses of the DNS servers for the directory. For a Simple AD directory, these are the IP addresses of the Simple AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in the on-premises directory that the AD Connector is connected to.</p>"
                },
                {
                    "name": "Stage",
                    "shape": "DirectoryStage",
                    "documentation": "<p>The current stage of the directory.</p>"
                },
                {
                    "name": "LaunchTime",
                    "shape": "LaunchTime",
                    "documentation": "<p>Specifies when the directory was created.</p>"
                },
                {
                    "name": "StageLastUpdatedDateTime",
                    "shape": "LastUpdatedDateTime",
                    "documentation": "<p>The date and time that the stage was last updated.</p>"
                },
                {
                    "name": "Type",
                    "shape": "DirectoryType",
                    "documentation": "<p>The directory size.</p>"
                },
                {
                    "name": "VpcSettings",
                    "shape": "DirectoryVpcSettingsDescription",
                    "documentation": "<p>A <a>DirectoryVpcSettingsDescription</a> object that contains additional information about a Simple AD directory. This member is only present if the directory is a Simple AD directory.</p>"
                },
                {
                    "name": "ConnectSettings",
                    "shape": "DirectoryConnectSettingsDescription",
                    "documentation": "<p>A <a>DirectoryConnectSettingsDescription</a> object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory.</p>"
                },
                {
                    "name": "RadiusSettings",
                    "shape": "RadiusSettings",
                    "documentation": "<p>A <a>RadiusSettings</a> object that contains information about the RADIUS server configured for this directory.</p>"
                },
                {
                    "name": "RadiusStatus",
                    "shape": "RadiusStatus",
                    "documentation": "<p>The status of the RADIUS MFA server connection.</p>"
                },
                {
                    "name": "StageReason",
                    "shape": "StageReason",
                    "documentation": "<p>Additional information about the directory stage.</p>"
                },
                {
                    "name": "SsoEnabled",
                    "shape": "SsoEnabled",
                    "documentation": "<p>Indicates if single-sign on is enabled for the directory. For more information, see <a>EnableSso</a> and <a>DisableSso</a>.</p>"
                }
            ]
        },
        "DirectoryDescriptions": {
            "type": "list",
            "of": "DirectoryDescription"
        },
        "DirectoryId": {
            "type": "string"
        },
        "DirectoryIds": {
            "type": "list",
            "of": "DirectoryId"
        },
        "DirectoryLimitExceededException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "DirectoryLimits": {
            "type": "structure",
            "members": [
                {
                    "name": "CloudOnlyDirectoriesLimit",
                    "shape": "Limit",
                    "documentation": "<p>The maximum number of cloud directories allowed in the region.</p>"
                },
                {
                    "name": "CloudOnlyDirectoriesCurrentCount",
                    "shape": "Limit",
                    "documentation": "<p>The current number of cloud directories in the region.</p>"
                },
                {
                    "name": "CloudOnlyDirectoriesLimitReached",
                    "shape": "CloudOnlyDirectoriesLimitReached",
                    "documentation": "<p>Indicates if the cloud directory limit has been reached.</p>"
                },
                {
                    "name": "ConnectedDirectoriesLimit",
                    "shape": "Limit",
                    "documentation": "<p>The maximum number of connected directories allowed in the region.</p>"
                },
                {
                    "name": "ConnectedDirectoriesCurrentCount",
                    "shape": "Limit",
                    "documentation": "<p>The current number of connected directories in the region.</p>"
                },
                {
                    "name": "ConnectedDirectoriesLimitReached",
                    "shape": "ConnectedDirectoriesLimitReached",
                    "documentation": "<p>Indicates if the connected directory limit has been reached.</p>"
                }
            ]
        },
        "DirectoryName": {
            "type": "string"
        },
        "DirectoryShortName": {
            "type": "string"
        },
        "DirectorySize": {
            "type": "string"
        },
        "DirectoryStage": {
            "type": "string"
        },
        "DirectoryType": {
            "type": "string"
        },
        "DirectoryUnavailableException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "DirectoryVpcSettings": {
            "type": "structure",
            "members": [
                {
                    "name": "VpcId",
                    "shape": "VpcId",
                    "documentation": "<p>The identifier of the VPC to create the Simple AD directory in.</p>"
                },
                {
                    "name": "SubnetIds",
                    "shape": "SubnetIds",
                    "documentation": "<p>The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. AWS Directory Service creates a directory server and a DNS server in each of these subnets.</p>"
                }
            ]
        },
        "DirectoryVpcSettingsDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "VpcId",
                    "shape": "VpcId",
                    "documentation": "<p>The identifier of the VPC that the directory is in.</p>"
                },
                {
                    "name": "SubnetIds",
                    "shape": "SubnetIds",
                    "documentation": "<p>The identifiers of the subnets for the directory servers.</p>"
                },
                {
                    "name": "SecurityGroupId",
                    "shape": "SecurityGroupId",
                    "documentation": "<p>The security group identifier for the directory.</p>"
                },
                {
                    "name": "AvailabilityZones",
                    "shape": "AvailabilityZones",
                    "documentation": "<p>The list of Availability Zones that the directory is in.</p>"
                }
            ]
        },
        "DisableRadiusRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to disable MFA for.</p>"
                }
            ]
        },
        "DisableRadiusResult": {
            "type": "structure",
            "members": []
        },
        "DisableSsoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to disable single-sign on for.</p>"
                },
                {
                    "name": "UserName",
                    "shape": "UserName",
                    "documentation": "<p>The username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principle name. </p> <p>If the AD Connector service account does not have privileges to remove a service principle name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>"
                },
                {
                    "name": "Password",
                    "shape": "ConnectPassword",
                    "documentation": "<p>The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. See the <i>UserName</i> parameter for more information.</p>"
                }
            ]
        },
        "DisableSsoResult": {
            "type": "structure",
            "members": []
        },
        "DnsIpAddrs": {
            "type": "list",
            "of": "IpAddr"
        },
        "EnableRadiusRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to enable MFA for.</p>"
                },
                {
                    "name": "RadiusSettings",
                    "shape": "RadiusSettings",
                    "documentation": "<p>A <a>RadiusSettings</a> object that contains information about the RADIUS server.</p>"
                }
            ]
        },
        "EnableRadiusResult": {
            "type": "structure",
            "members": []
        },
        "EnableSsoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to enable single-sign on for.</p>"
                },
                {
                    "name": "UserName",
                    "shape": "UserName",
                    "documentation": "<p>The username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principle name. </p> <p>If the AD Connector service account does not have privileges to add a service principle name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>"
                },
                {
                    "name": "Password",
                    "shape": "ConnectPassword",
                    "documentation": "<p>The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. See the <i>UserName</i> parameter for more information.</p>"
                }
            ]
        },
        "EnableSsoResult": {
            "type": "structure",
            "members": []
        },
        "EntityAlreadyExistsException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "EntityDoesNotExistException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "ExceptionMessage": {
            "type": "string"
        },
        "GetDirectoryLimitsRequest": {
            "type": "structure",
            "members": []
        },
        "GetDirectoryLimitsResult": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryLimits",
                    "shape": "DirectoryLimits",
                    "documentation": "<p>A <a>DirectoryLimits</a> object that contains the directory limits for the current region.</p>"
                }
            ]
        },
        "GetSnapshotLimitsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>Contains the identifier of the directory to obtain the limits for.</p>"
                }
            ]
        },
        "GetSnapshotLimitsResult": {
            "type": "structure",
            "members": [
                {
                    "name": "SnapshotLimits",
                    "shape": "SnapshotLimits",
                    "documentation": "<p>A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified directory.</p>"
                }
            ]
        },
        "InsufficientPermissionsException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "InvalidNextTokenException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "InvalidParameterException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "IpAddr": {
            "type": "string"
        },
        "IpAddrs": {
            "type": "list",
            "of": "IpAddr"
        },
        "LastUpdatedDateTime": {
            "type": "timestamp"
        },
        "LaunchTime": {
            "type": "timestamp"
        },
        "Limit": {
            "type": "integer"
        },
        "ManualSnapshotsLimitReached": {
            "type": "boolean"
        },
        "NextToken": {
            "type": "string"
        },
        "OrganizationalUnitDN": {
            "type": "string"
        },
        "Password": {
            "type": "string"
        },
        "PortNumber": {
            "type": "integer"
        },
        "RadiusAuthenticationProtocol": {
            "type": "string"
        },
        "RadiusDisplayLabel": {
            "type": "string"
        },
        "RadiusRetries": {
            "type": "integer"
        },
        "RadiusSettings": {
            "type": "structure",
            "members": [
                {
                    "name": "RadiusServers",
                    "shape": "Servers",
                    "documentation": "<p>An array of strings that contains the IP addresses of the RADIUS server endpoints, or the IP addresses of your RADIUS server load balancer.</p>"
                },
                {
                    "name": "RadiusPort",
                    "shape": "PortNumber",
                    "documentation": "<p>The port that your RADIUS server is using for communications. Your on-premises network must allow inbound traffic over this port from the AWS Directory Service servers.</p>"
                },
                {
                    "name": "RadiusTimeout",
                    "shape": "RadiusTimeout",
                    "documentation": "<p>The amount of time, in seconds, to wait for the RADIUS server to respond.</p>"
                },
                {
                    "name": "RadiusRetries",
                    "shape": "RadiusRetries",
                    "documentation": "<p>The maximum number of times that communication with the RADIUS server is attempted. </p>"
                },
                {
                    "name": "SharedSecret",
                    "shape": "RadiusSharedSecret",
                    "documentation": "<p>The shared secret code that was specified when your RADIUS endpoints were created.</p>"
                },
                {
                    "name": "AuthenticationProtocol",
                    "shape": "RadiusAuthenticationProtocol",
                    "documentation": "<p>The protocol specified for your RADIUS endpoints.</p>"
                },
                {
                    "name": "DisplayLabel",
                    "shape": "RadiusDisplayLabel",
                    "documentation": "<p>Not currently used.</p>"
                },
                {
                    "name": "UseSameUsername",
                    "shape": "UseSameUsername",
                    "documentation": "<p>Not currently used.</p>"
                }
            ]
        },
        "RadiusSharedSecret": {
            "type": "string"
        },
        "RadiusStatus": {
            "type": "string"
        },
        "RadiusTimeout": {
            "type": "integer"
        },
        "RequestId": {
            "type": "string"
        },
        "RestoreFromSnapshotRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "SnapshotId",
                    "shape": "SnapshotId",
                    "documentation": "<p>The identifier of the snapshot to restore from.</p>"
                }
            ]
        },
        "RestoreFromSnapshotResult": {
            "type": "structure",
            "members": []
        },
        "SID": {
            "type": "string"
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "Server": {
            "type": "string"
        },
        "Servers": {
            "type": "list",
            "of": "Server"
        },
        "ServiceException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "Snapshot": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The directory identifier.</p>"
                },
                {
                    "name": "SnapshotId",
                    "shape": "SnapshotId",
                    "documentation": "<p>The snapshot identifier.</p>"
                },
                {
                    "name": "Type",
                    "shape": "SnapshotType",
                    "documentation": "<p>The snapshot type.</p>"
                },
                {
                    "name": "Name",
                    "shape": "SnapshotName",
                    "documentation": "<p>The descriptive name of the snapshot.</p>"
                },
                {
                    "name": "Status",
                    "shape": "SnapshotStatus",
                    "documentation": "<p>The snapshot status.</p>"
                },
                {
                    "name": "StartTime",
                    "shape": "StartTime",
                    "documentation": "<p>The date and time that the snapshot was taken.</p>"
                }
            ]
        },
        "SnapshotId": {
            "type": "string"
        },
        "SnapshotIds": {
            "type": "list",
            "of": "SnapshotId"
        },
        "SnapshotLimitExceededException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "SnapshotLimits": {
            "type": "structure",
            "members": [
                {
                    "name": "ManualSnapshotsLimit",
                    "shape": "Limit",
                    "documentation": "<p>The maximum number of manual snapshots allowed.</p>"
                },
                {
                    "name": "ManualSnapshotsCurrentCount",
                    "shape": "Limit",
                    "documentation": "<p>The current number of manual snapshots of the directory.</p>"
                },
                {
                    "name": "ManualSnapshotsLimitReached",
                    "shape": "ManualSnapshotsLimitReached",
                    "documentation": "<p>Indicates if the manual snapshot limit has been reached.</p>"
                }
            ]
        },
        "SnapshotName": {
            "type": "string"
        },
        "SnapshotStatus": {
            "type": "string"
        },
        "SnapshotType": {
            "type": "string"
        },
        "Snapshots": {
            "type": "list",
            "of": "Snapshot"
        },
        "SsoEnabled": {
            "type": "boolean"
        },
        "StageReason": {
            "type": "string"
        },
        "StartTime": {
            "type": "timestamp"
        },
        "SubnetId": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "list",
            "of": "SubnetId"
        },
        "UnsupportedOperationException": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ExceptionMessage"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId"
                }
            ]
        },
        "UpdateRadiusRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DirectoryId",
                    "shape": "DirectoryId",
                    "documentation": "<p>The identifier of the directory to update the RADIUS server information for.</p>"
                },
                {
                    "name": "RadiusSettings",
                    "shape": "RadiusSettings",
                    "documentation": "<p>A <a>RadiusSettings</a> object that contains information about the RADIUS server.</p>"
                }
            ]
        },
        "UpdateRadiusResult": {
            "type": "structure",
            "members": []
        },
        "UseSameUsername": {
            "type": "boolean"
        },
        "UserName": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        }
    }
}