{
    "metadata": {
        "namespaces": {
            "": "http://elasticbeanstalk.amazonaws.com/docs/2010-12-01/"
        }
    },
    "operations": {
        "AbortEnvironmentUpdate": {
            "documentation": "<p>Cancels in-progress environment configuration update or application version deployment.</p>",
            "input": {
                "shape": "AbortEnvironmentUpdateMessage"
            }
        },
        "CheckDNSAvailability": {
            "documentation": "<p> Checks if the specified CNAME is available. </p>",
            "input": {
                "shape": "CheckDNSAvailabilityMessage"
            },
            "output": {
                "shape": "CheckDNSAvailabilityResultMessage"
            }
        },
        "CreateApplication": {
            "documentation": "<p> Creates an application that has one configuration template named <code>default</code> and no application versions. </p>",
            "input": {
                "shape": "CreateApplicationMessage"
            },
            "output": {
                "shape": "ApplicationDescriptionMessage"
            }
        },
        "CreateApplicationVersion": {
            "documentation": "<p>Creates an application version for the specified application.</p> <note>Once you create an application version with a specified Amazon S3 bucket and key location, you cannot change that Amazon S3 location. If you change the Amazon S3 location, you receive an exception when you attempt to launch an environment from the application version. </note>",
            "input": {
                "shape": "CreateApplicationVersionMessage"
            },
            "output": {
                "shape": "ApplicationVersionDescriptionMessage"
            }
        },
        "CreateConfigurationTemplate": {
            "documentation": "<p>Creates a configuration template. Templates are associated with a specific application and are used to deploy different versions of the application with the same configuration settings.</p> <p>Related Topics</p> <ul> <li> <a>DescribeConfigurationOptions</a> </li> <li> <a>DescribeConfigurationSettings</a> </li> <li> <a>ListAvailableSolutionStacks</a> </li> </ul>",
            "input": {
                "shape": "CreateConfigurationTemplateMessage"
            },
            "output": {
                "shape": "ConfigurationSettingsDescription"
            }
        },
        "CreateEnvironment": {
            "documentation": "<p> Launches an environment for the specified application using the specified configuration. </p>",
            "input": {
                "shape": "CreateEnvironmentMessage"
            },
            "output": {
                "shape": "EnvironmentDescription"
            }
        },
        "CreateStorageLocation": {
            "documentation": "<p> Creates the Amazon S3 storage location for the account. </p> <p> This location is used to store user log files. </p>",
            "output": {
                "shape": "CreateStorageLocationResultMessage"
            }
        },
        "DeleteApplication": {
            "documentation": "<p> Deletes the specified application along with all associated versions and configurations. The application versions will not be deleted from your Amazon S3 bucket. </p> <note>You cannot delete an application that has a running environment. </note>",
            "input": {
                "shape": "DeleteApplicationMessage"
            }
        },
        "DeleteApplicationVersion": {
            "documentation": "<p> Deletes the specified version from the specified application. </p> <note>You cannot delete an application version that is associated with a running environment.</note>",
            "input": {
                "shape": "DeleteApplicationVersionMessage"
            }
        },
        "DeleteConfigurationTemplate": {
            "documentation": "<p>Deletes the specified configuration template.</p> <note>When you launch an environment using a configuration template, the environment gets a copy of the template. You can delete or modify the environment's copy of the template without affecting the running environment.</note>",
            "input": {
                "shape": "DeleteConfigurationTemplateMessage"
            }
        },
        "DeleteEnvironmentConfiguration": {
            "documentation": "<p> Deletes the draft configuration associated with the running environment. </p> <p> Updating a running environment with any configuration changes creates a draft configuration set. You can get the draft configuration using <a>DescribeConfigurationSettings</a> while the update is in progress or if the update fails. The <code>DeploymentStatus</code> for the draft configuration indicates whether the deployment is in process or has failed. The draft configuration remains in existence until it is deleted with this action. </p>",
            "input": {
                "shape": "DeleteEnvironmentConfigurationMessage"
            }
        },
        "DescribeApplicationVersions": {
            "documentation": "<p>Returns descriptions for existing application versions.</p>",
            "input": {
                "shape": "DescribeApplicationVersionsMessage"
            },
            "output": {
                "shape": "ApplicationVersionDescriptionsMessage"
            }
        },
        "DescribeApplications": {
            "documentation": "<p>Returns the descriptions of existing applications.</p>",
            "input": {
                "shape": "DescribeApplicationsMessage"
            },
            "output": {
                "shape": "ApplicationDescriptionsMessage"
            }
        },
        "DescribeConfigurationOptions": {
            "documentation": "<p> Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines. The description includes the values the options, their default values, and an indication of the required action on a running environment if an option value is changed. </p>",
            "input": {
                "shape": "DescribeConfigurationOptionsMessage"
            },
            "output": {
                "shape": "ConfigurationOptionsDescription"
            }
        },
        "DescribeConfigurationSettings": {
            "documentation": "<p> Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment. </p> <p> When describing the settings for the configuration set associated with a running environment, it is possible to receive two sets of setting descriptions. One is the deployed configuration set, and the other is a draft configuration of an environment that is either in the process of deployment or that failed to deploy. </p> <p>Related Topics</p> <ul> <li> <a>DeleteEnvironmentConfiguration</a> </li> </ul>",
            "input": {
                "shape": "DescribeConfigurationSettingsMessage"
            },
            "output": {
                "shape": "ConfigurationSettingsDescriptions"
            }
        },
        "DescribeEnvironmentResources": {
            "documentation": "<p>Returns AWS resources for this environment.</p>",
            "input": {
                "shape": "DescribeEnvironmentResourcesMessage"
            },
            "output": {
                "shape": "EnvironmentResourceDescriptionsMessage"
            }
        },
        "DescribeEnvironments": {
            "documentation": "<p>Returns descriptions for existing environments.</p>",
            "input": {
                "shape": "DescribeEnvironmentsMessage"
            },
            "output": {
                "shape": "EnvironmentDescriptionsMessage"
            }
        },
        "DescribeEvents": {
            "documentation": "<p>Returns list of event descriptions matching criteria up to the last 6 weeks.</p> <note> This action returns the most recent 1,000 events from the specified <code>NextToken</code>. </note>",
            "input": {
                "shape": "DescribeEventsMessage"
            },
            "output": {
                "shape": "EventDescriptionsMessage"
            }
        },
        "ListAvailableSolutionStacks": {
            "documentation": "<p> Returns a list of the available solution stack names. </p>",
            "output": {
                "shape": "ListAvailableSolutionStacksResultMessage"
            }
        },
        "RebuildEnvironment": {
            "documentation": "<p> Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc.) for a specified environment and forces a restart. </p>",
            "input": {
                "shape": "RebuildEnvironmentMessage"
            }
        },
        "RequestEnvironmentInfo": {
            "documentation": "<p> Initiates a request to compile the specified type of information of the deployed environment. </p> <p> Setting the <code>InfoType</code> to <code>tail</code> compiles the last lines from the application server log files of every Amazon EC2 instance in your environment. </p> <p> Setting the <code>InfoType</code> to <code>bundle</code> compresses the application server log files for every Amazon EC2 instance into a <code>.zip</code> file. Legacy and .NET containers do not support bundle logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of logs. </p> <p>Related Topics</p> <ul> <li> <a>RetrieveEnvironmentInfo</a> </li> </ul>",
            "input": {
                "shape": "RequestEnvironmentInfoMessage"
            }
        },
        "RestartAppServer": {
            "documentation": "<p> Causes the environment to restart the application container server running on each Amazon EC2 instance. </p>",
            "input": {
                "shape": "RestartAppServerMessage"
            }
        },
        "RetrieveEnvironmentInfo": {
            "documentation": "<p> Retrieves the compiled information from a <a>RequestEnvironmentInfo</a> request. </p> <p>Related Topics</p> <ul> <li> <a>RequestEnvironmentInfo</a> </li> </ul>",
            "input": {
                "shape": "RetrieveEnvironmentInfoMessage"
            },
            "output": {
                "shape": "RetrieveEnvironmentInfoResultMessage"
            }
        },
        "SwapEnvironmentCNAMEs": {
            "documentation": "<p> Swaps the CNAMEs of two environments. </p>",
            "input": {
                "shape": "SwapEnvironmentCNAMEsMessage"
            }
        },
        "TerminateEnvironment": {
            "documentation": "<p> Terminates the specified environment. </p>",
            "input": {
                "shape": "TerminateEnvironmentMessage"
            },
            "output": {
                "shape": "EnvironmentDescription"
            }
        },
        "UpdateApplication": {
            "documentation": "<p>Updates the specified application to have the specified properties. </p> <note> If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear these properties, specify an empty string. </note>",
            "input": {
                "shape": "UpdateApplicationMessage"
            },
            "output": {
                "shape": "ApplicationDescriptionMessage"
            }
        },
        "UpdateApplicationVersion": {
            "documentation": "<p> Updates the specified application version to have the specified properties. </p> <note> If a property (for example, <code>description</code>) is not provided, the value remains unchanged. To clear properties, specify an empty string. </note>",
            "input": {
                "shape": "UpdateApplicationVersionMessage"
            },
            "output": {
                "shape": "ApplicationVersionDescriptionMessage"
            }
        },
        "UpdateConfigurationTemplate": {
            "documentation": "<p> Updates the specified configuration template to have the specified properties or configuration option values. </p> <note> If a property (for example, <code>ApplicationName</code>) is not provided, its value remains unchanged. To clear such properties, specify an empty string. </note> <p>Related Topics</p> <ul> <li> <a>DescribeConfigurationOptions</a> </li> </ul>",
            "input": {
                "shape": "UpdateConfigurationTemplateMessage"
            },
            "output": {
                "shape": "ConfigurationSettingsDescription"
            }
        },
        "UpdateEnvironment": {
            "documentation": "<p> Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment. </p> <p> Attempting to update both the release and configuration is not allowed and AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p> <p> When updating the configuration settings to a new template or individual settings, a draft configuration is created and <a>DescribeConfigurationSettings</a> for this environment returns two setting descriptions with different <code>DeploymentStatus</code> values. </p>",
            "input": {
                "shape": "UpdateEnvironmentMessage"
            },
            "output": {
                "shape": "EnvironmentDescription"
            }
        },
        "ValidateConfigurationSettings": {
            "documentation": "<p> Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid. </p> <p> This action returns a list of messages indicating any errors or warnings associated with the selection of option values. </p>",
            "input": {
                "shape": "ValidateConfigurationSettingsMessage"
            },
            "output": {
                "shape": "ConfigurationSettingsValidationMessages"
            }
        }
    },
    "shapes": {
        "AbortEnvironmentUpdateMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p>This specifies the ID of the environment with the in-progress update that you want to cancel.</p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>This specifies the name of the environment with the in-progress update that you want to cancel.</p>"
                }
            ]
        },
        "AbortableOperationInProgress": {
            "type": "boolean"
        },
        "ApplicationDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>User-defined description of the application.</p>"
                },
                {
                    "name": "DateCreated",
                    "shape": "CreationDate",
                    "documentation": "<p>The date when the application was created.</p>"
                },
                {
                    "name": "DateUpdated",
                    "shape": "UpdateDate",
                    "documentation": "<p>The date when the application was last modified.</p>"
                },
                {
                    "name": "Versions",
                    "shape": "VersionLabelsList",
                    "documentation": "<p>The names of the versions for this application.</p>"
                },
                {
                    "name": "ConfigurationTemplates",
                    "shape": "ConfigurationTemplateNamesList",
                    "documentation": "<p> The names of the configuration templates associated with this application. </p>"
                }
            ]
        },
        "ApplicationDescriptionList": {
            "type": "list",
            "of": "ApplicationDescription"
        },
        "ApplicationDescriptionMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Application",
                    "shape": "ApplicationDescription",
                    "documentation": "<p> The <a>ApplicationDescription</a> of the application. </p>"
                }
            ]
        },
        "ApplicationDescriptionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Applications",
                    "shape": "ApplicationDescriptionList",
                    "documentation": "<p> This parameter contains a list of <a>ApplicationDescription</a>. </p>"
                }
            ]
        },
        "ApplicationName": {
            "type": "string"
        },
        "ApplicationNamesList": {
            "type": "list",
            "of": "ApplicationName"
        },
        "ApplicationVersionDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application associated with this release.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>The description of this application version.</p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p> A label uniquely identifying the version for the associated application. </p>"
                },
                {
                    "name": "SourceBundle",
                    "shape": "S3Location",
                    "documentation": "<p> The location where the source bundle is located for this version. </p>"
                },
                {
                    "name": "DateCreated",
                    "shape": "CreationDate",
                    "documentation": "<p>The creation date of the application version.</p>"
                },
                {
                    "name": "DateUpdated",
                    "shape": "UpdateDate",
                    "documentation": "<p>The last modified date of the application version.</p>"
                }
            ]
        },
        "ApplicationVersionDescriptionList": {
            "type": "list",
            "of": "ApplicationVersionDescription"
        },
        "ApplicationVersionDescriptionMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationVersion",
                    "shape": "ApplicationVersionDescription",
                    "documentation": "<p> The <a>ApplicationVersionDescription</a> of the application version. </p>"
                }
            ]
        },
        "ApplicationVersionDescriptionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationVersions",
                    "shape": "ApplicationVersionDescriptionList",
                    "documentation": "<p> A list of <a>ApplicationVersionDescription</a> . </p>"
                }
            ]
        },
        "AutoCreateApplication": {
            "type": "boolean"
        },
        "AutoScalingGroup": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "ResourceId",
                    "documentation": "<p> The name of the <code>AutoScalingGroup</code> . </p>"
                }
            ]
        },
        "AutoScalingGroupList": {
            "type": "list",
            "of": "AutoScalingGroup"
        },
        "AvailableSolutionStackDetailsList": {
            "type": "list",
            "of": "SolutionStackDescription"
        },
        "AvailableSolutionStackNamesList": {
            "type": "list",
            "of": "SolutionStackName"
        },
        "CheckDNSAvailabilityMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "CNAMEPrefix",
                    "shape": "DNSCnamePrefix",
                    "documentation": "<p> The prefix used when this CNAME is reserved. </p>"
                }
            ]
        },
        "CheckDNSAvailabilityResultMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Available",
                    "shape": "CnameAvailability",
                    "documentation": "<p> Indicates if the specified CNAME is available: </p> <enumValues> <value name=\"true\"> <p> <code>true</code> : The CNAME is available. </p> </value> <value name=\"false\"> <p> <code>true</code> : The CNAME is not available. </p> </value> </enumValues> <p> <ul> <li> <code>true</code> : The CNAME is available. </li> <li> <code>false</code> : The CNAME is not available. </li> </ul> </p>"
                },
                {
                    "name": "FullyQualifiedCNAME",
                    "shape": "DNSCname",
                    "documentation": "<p>The fully qualified CNAME to reserve when <a>CreateEnvironment</a> is called with the provided prefix.</p>"
                }
            ]
        },
        "CnameAvailability": {
            "type": "boolean"
        },
        "ConfigurationDeploymentStatus": {
            "type": "string"
        },
        "ConfigurationOptionDefaultValue": {
            "type": "string"
        },
        "ConfigurationOptionDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "Namespace",
                    "shape": "OptionNamespace",
                    "documentation": "<p> A unique namespace identifying the option's associated AWS resource. </p>"
                },
                {
                    "name": "Name",
                    "shape": "ConfigurationOptionName",
                    "documentation": "<p> The name of the configuration option. </p>"
                },
                {
                    "name": "DefaultValue",
                    "shape": "ConfigurationOptionDefaultValue",
                    "documentation": "<p> The default value for this configuration option. </p>"
                },
                {
                    "name": "ChangeSeverity",
                    "shape": "ConfigurationOptionSeverity",
                    "documentation": "<p> An indication of which action is required if the value for this configuration option changes: </p> <enumValues> <value name=\"NoInterruption\"> <p> NoInterruption - There is no interruption to the environment or application availability. </p> </value> <value name=\"RestartEnvironment\"> <p> RestartEnvironment - The environment is restarted, all AWS resources are deleted and recreated, and the environment is unavailable during the process. </p> </value> <value name=\"RestartApplicationServer\"> <p> RestartApplicationServer - The environment is available the entire time. However, a short application outage occurs when the application servers on the running Amazon EC2 instances are restarted. </p> </value> </enumValues> <ul> <li> <code>NoInterruption</code> : There is no interruption to the environment or application availability. </li> <li> <code>RestartEnvironment</code> : The environment is entirely restarted, all AWS resources are deleted and recreated, and the environment is unavailable during the process. </li> <li> <code>RestartApplicationServer</code> : The environment is available the entire time. However, a short application outage occurs when the application servers on the running Amazon EC2 instances are restarted. </li> </ul>"
                },
                {
                    "name": "UserDefined",
                    "shape": "UserDefinedOption",
                    "documentation": "<p> An indication of whether the user defined this configuration option: </p> <enumValues> <value name=\"true\"> <p> <code>true</code> : This configuration option was defined by the user. It is a valid choice for specifying this as an Option to Remove when updating configuration settings. </p> </value> <value name=\"false\"> <p> <code>false</code> : This configuration was not defined by the user. </p> </value> </enumValues> <ul> <li> <p> <code>true</code> : This configuration option was defined by the user. It is a valid choice for specifying if this as an <code>Option to Remove</code> when updating configuration settings. </p> </li> <li> <code>false</code> : This configuration was not defined by the user. </li> </ul> <p> Constraint: You can remove only <code>UserDefined</code> options from a configuration. </p> <p> Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "ValueType",
                    "shape": "ConfigurationOptionValueType",
                    "documentation": "<p> An indication of which type of values this option has and whether it is allowable to select one or more than one of the possible values: </p> <enumValues> <value name=\"Scalar\"> <p> <code>Scalar</code> : Values for this option are a single selection from the possible values, or a unformatted string or numeric value governed by the MIN/MAX/Regex constraints: </p> </value> <value name=\"List\"> <p> <code>List</code> : Values for this option are multiple selections of the possible values. </p> </value> <value name=\"Boolean\"> <p> <code>Boolean</code> : Values for this option are either <code>true</code> or <code>false</code> . </p> </value> </enumValues> <p> <ul> <li> <code>Scalar</code> : Values for this option are a single selection from the possible values, or an unformatted string, or numeric value governed by the <code>MIN/MAX/Regex</code> constraints. </li> <li> <code>List</code> : Values for this option are multiple selections from the possible values. </li> <li> <code>Boolean</code> : Values for this option are either <code>true</code> or <code>false</code> . </li> </ul> </p>"
                },
                {
                    "name": "ValueOptions",
                    "shape": "ConfigurationOptionPossibleValues",
                    "documentation": "<p> If specified, values for the configuration option are selected from this list. </p>"
                },
                {
                    "name": "MinValue",
                    "shape": "OptionRestrictionMinValue",
                    "documentation": "<p> If specified, the configuration option must be a numeric value greater than this value. </p>"
                },
                {
                    "name": "MaxValue",
                    "shape": "OptionRestrictionMaxValue",
                    "documentation": "<p> If specified, the configuration option must be a numeric value less than this value. </p>"
                },
                {
                    "name": "MaxLength",
                    "shape": "OptionRestrictionMaxLength",
                    "documentation": "<p> If specified, the configuration option must be a string value no longer than this value. </p>"
                },
                {
                    "name": "Regex",
                    "shape": "OptionRestrictionRegex",
                    "documentation": "<p> If specified, the configuration option must be a string value that satisfies this regular expression. </p>"
                }
            ]
        },
        "ConfigurationOptionDescriptionsList": {
            "type": "list",
            "of": "ConfigurationOptionDescription"
        },
        "ConfigurationOptionName": {
            "type": "string"
        },
        "ConfigurationOptionPossibleValue": {
            "type": "string"
        },
        "ConfigurationOptionPossibleValues": {
            "type": "list",
            "of": "ConfigurationOptionPossibleValue"
        },
        "ConfigurationOptionSetting": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceName",
                    "shape": "ResourceName",
                    "documentation": "<p> A unique resource name for a time-based scaling configuration option. </p>"
                },
                {
                    "name": "Namespace",
                    "shape": "OptionNamespace",
                    "documentation": "<p> A unique namespace identifying the option's associated AWS resource. </p>"
                },
                {
                    "name": "OptionName",
                    "shape": "ConfigurationOptionName",
                    "documentation": "<p> The name of the configuration option. </p>"
                },
                {
                    "name": "Value",
                    "shape": "ConfigurationOptionValue",
                    "documentation": "<p> The current value for the configuration option. </p>"
                }
            ]
        },
        "ConfigurationOptionSettingsList": {
            "type": "list",
            "of": "ConfigurationOptionSetting"
        },
        "ConfigurationOptionSeverity": {
            "type": "string"
        },
        "ConfigurationOptionValue": {
            "type": "string"
        },
        "ConfigurationOptionValueType": {
            "type": "string"
        },
        "ConfigurationOptionsDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> The name of the solution stack these configuration options belong to. </p>"
                },
                {
                    "name": "Options",
                    "shape": "ConfigurationOptionDescriptionsList",
                    "documentation": "<p> A list of <a>ConfigurationOptionDescription</a>. </p>"
                }
            ]
        },
        "ConfigurationSettingsDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> The name of the solution stack this configuration set uses. </p>"
                },
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application associated with this configuration set. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> If not <code>null</code>, the name of the configuration template for this configuration set. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p> Describes this configuration set. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> If not <code>null</code>, the name of the environment for this configuration set. </p>"
                },
                {
                    "name": "DeploymentStatus",
                    "shape": "ConfigurationDeploymentStatus",
                    "documentation": "<p> If this configuration set is associated with an environment, the <code>DeploymentStatus</code> parameter indicates the deployment status of this configuration set: </p> <enumValues> <value name=\"null\"> <p> <code>null</code>: This configuration is not associated with a running environment. </p> </value> <value name=\"pending\"> <p> <code>pending</code>: This is a draft configuration that is not deployed to the associated environment but is in the process of deploying. </p> </value> <value name=\"deployed\"> <p> <code>deployed</code>: This is the configuration that is currently deployed to the associated running environment. </p> </value> <value name=\"failed\"> <p> <code>failed</code>: This is a draft configuration, that failed to successfully deploy. </p> </value> </enumValues> <ul> <li> <code>null</code>: This configuration is not associated with a running environment. </li> <li> <code>pending</code>: This is a draft configuration that is not deployed to the associated environment but is in the process of deploying. </li> <li> <code>deployed</code>: This is the configuration that is currently deployed to the associated running environment. </li> <li> <code>failed</code>: This is a draft configuration that failed to successfully deploy. </li> </ul>"
                },
                {
                    "name": "DateCreated",
                    "shape": "CreationDate",
                    "documentation": "<p> The date (in UTC time) when this configuration set was created. </p>"
                },
                {
                    "name": "DateUpdated",
                    "shape": "UpdateDate",
                    "documentation": "<p> The date (in UTC time) when this configuration set was last modified. </p>"
                },
                {
                    "name": "OptionSettings",
                    "shape": "ConfigurationOptionSettingsList",
                    "documentation": "<p> A list of the configuration options and their values in this configuration set. </p>"
                }
            ]
        },
        "ConfigurationSettingsDescriptionList": {
            "type": "list",
            "of": "ConfigurationSettingsDescription"
        },
        "ConfigurationSettingsDescriptions": {
            "type": "structure",
            "members": [
                {
                    "name": "ConfigurationSettings",
                    "shape": "ConfigurationSettingsDescriptionList",
                    "documentation": "<p> A list of <a>ConfigurationSettingsDescription</a>. </p>"
                }
            ]
        },
        "ConfigurationSettingsValidationMessages": {
            "type": "structure",
            "members": [
                {
                    "name": "Messages",
                    "shape": "ValidationMessagesList",
                    "documentation": "<p> A list of <a>ValidationMessage</a>. </p>"
                }
            ]
        },
        "ConfigurationTemplateName": {
            "type": "string"
        },
        "ConfigurationTemplateNamesList": {
            "type": "list",
            "of": "ConfigurationTemplateName"
        },
        "CreateApplicationMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application.</p> <p> Constraint: This name must be unique within your account. If the specified name already exists, the action returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>Describes the application.</p>"
                }
            ]
        },
        "CreateApplicationVersionMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p>A label identifying this version.</p> <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>Describes this version.</p>"
                },
                {
                    "name": "SourceBundle",
                    "shape": "S3Location",
                    "documentation": "<p> The Amazon S3 bucket and key that identify the location of the source bundle for this version. </p> <p> If data found at the Amazon S3 location exceeds the maximum allowed source bundle size, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. The maximum size allowed is 512 MB. </p> <p>Default: If not specified, AWS Elastic Beanstalk uses a sample application. If only partially specified (for example, a bucket is provided but not the key) or if no data is found at the Amazon S3 location, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p>"
                },
                {
                    "name": "AutoCreateApplication",
                    "shape": "AutoCreateApplication",
                    "documentation": "<p> Determines how the system behaves if the specified application for this version does not already exist: </p> <enumValues> <value name=\"true\"> <p> <code>true</code>: Automatically creates the specified application for this version if it does not already exist. </p> </value> <value name=\"false\"> <p> <code>false</code>: Returns an <code>InvalidParameterValue</code> if the specified application for this version does not already exist. </p> </value> </enumValues> <ul> <li> <code>true</code> : Automatically creates the specified application for this release if it does not already exist. </li> <li> <code>false</code> : Throws an <code>InvalidParameterValue</code> if the specified application for this release does not already exist. </li> </ul> <p> Default: <code>false</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>"
                }
            ]
        },
        "CreateConfigurationTemplateMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application to associate with this configuration template. If no application is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p>The name of the configuration template.</p> <p>Constraint: This name must be unique per application. </p> <p>Default: If a configuration template already exists with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p>The name of the solution stack used by this configuration. The solution stack specifies the operating system, architecture, and application server for a configuration template. It determines the set of configuration options as well as the possible and default values. </p> <p> Use <a>ListAvailableSolutionStacks</a> to obtain a list of available solution stacks. </p> <p> A solution stack name or a source configuration parameter must be specified, otherwise AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p> If a solution stack name is not specified and the source configuration parameter is specified, AWS Elastic Beanstalk uses the same solution stack as the source configuration template. </p>"
                },
                {
                    "name": "SourceConfiguration",
                    "shape": "SourceConfiguration",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk uses the configuration values from the specified configuration template to create a new configuration. </p> <p> Values specified in the <code>OptionSettings</code> parameter of this call overrides any values obtained from the <code>SourceConfiguration</code>. </p> <p> If no configuration template is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Constraint: If both the solution stack name parameter and the source configuration parameters are specified, the solution stack of the source configuration template must match the specified solution stack name or else AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. </p>"
                },
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of the environment used with this configuration template. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>Describes this configuration.</p>"
                },
                {
                    "name": "OptionSettings",
                    "shape": "ConfigurationOptionSettingsList",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk sets the specified configuration option to the requested value. The new value overrides the value obtained from the solution stack or the source configuration template. </p>"
                }
            ]
        },
        "CreateEnvironmentMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application that contains the version to be deployed. </p> <p> If no application is found with this name, <code>CreateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> A unique name for the deployment environment. Used in the application URL. </p> <p>Constraint: Must be from 4 to 23 characters in length. The name can contain only letters, numbers, and hyphens. It cannot start or end with a hyphen. This name must be unique in your account. If the specified name already exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p>Default: If the CNAME parameter is not specified, the environment name becomes part of the CNAME, and therefore part of the visible URL for your application.</p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>Describes this environment.</p>"
                },
                {
                    "name": "CNAMEPrefix",
                    "shape": "DNSCnamePrefix",
                    "documentation": "<p> If specified, the environment attempts to use this value as the prefix for the CNAME. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name. </p>"
                },
                {
                    "name": "Tier",
                    "shape": "EnvironmentTier",
                    "documentation": "<p> This specifies the tier to use for creating this environment. </p>"
                },
                {
                    "name": "Tags",
                    "shape": "Tags",
                    "documentation": "<p> This specifies the tags applied to resources in the environment. </p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p>The name of the application version to deploy.</p> <p> If the specified application has no associated application versions, AWS Elastic Beanstalk <code>UpdateEnvironment</code> returns an <code>InvalidParameterValue</code> error. </p> <p> Default: If not specified, AWS Elastic Beanstalk attempts to launch the sample application in the container. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> The name of the configuration template to use in deployment. If no configuration template is found with this name, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this parameter or a <code>SolutionStackName</code>, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> This is an alternative to specifying a configuration name. If specified, AWS Elastic Beanstalk sets the configuration values to the default values associated with the specified solution stack. </p> <p> Condition: You must specify either this or a <code>TemplateName</code>, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "OptionSettings",
                    "shape": "ConfigurationOptionSettingsList",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk sets the specified configuration options to the requested value in the configuration set for the new environment. These override the values obtained from the solution stack or the configuration template. </p>"
                },
                {
                    "name": "OptionsToRemove",
                    "shape": "OptionsSpecifierList",
                    "documentation": "<p> A list of custom user-defined configuration options to remove from the configuration set for this new environment. </p>"
                }
            ]
        },
        "CreateStorageLocationResultMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "S3Bucket",
                    "shape": "S3Bucket",
                    "documentation": "<p> The name of the Amazon S3 bucket created. </p>"
                }
            ]
        },
        "CreationDate": {
            "type": "timestamp"
        },
        "DNSCname": {
            "type": "string"
        },
        "DNSCnamePrefix": {
            "type": "string"
        },
        "DeleteApplicationMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application to delete.</p>"
                },
                {
                    "name": "TerminateEnvByForce",
                    "shape": "TerminateEnvForce",
                    "documentation": "<p>When set to true, running environments will be terminated before deleting the application.</p>"
                }
            ]
        },
        "DeleteApplicationVersionMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application to delete releases from.</p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p> The label of the version to delete. </p>"
                },
                {
                    "name": "DeleteSourceBundle",
                    "shape": "DeleteSourceBundle",
                    "documentation": "<p>Indicates whether to delete the associated source bundle from Amazon S3: </p> <ul> <li> <code>true</code>: An attempt is made to delete the associated Amazon S3 source bundle specified at time of creation. </li> <li> <code>false</code>: No action is taken on the Amazon S3 source bundle specified at time of creation. </li> </ul> <p> Valid Values: <code>true</code> | <code>false</code> </p>"
                }
            ]
        },
        "DeleteConfigurationTemplateMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application to delete the configuration template from. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p>The name of the configuration template to delete.</p>"
                }
            ]
        },
        "DeleteEnvironmentConfigurationMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application the environment is associated with. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment to delete the draft configuration from. </p>"
                }
            ]
        },
        "DeleteSourceBundle": {
            "type": "boolean"
        },
        "DescribeApplicationVersionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include ones that are associated with the specified application. </p>"
                },
                {
                    "name": "VersionLabels",
                    "shape": "VersionLabelsList",
                    "documentation": "<p> If specified, restricts the returned descriptions to only include ones that have the specified version labels. </p>"
                }
            ]
        },
        "DescribeApplicationsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationNames",
                    "shape": "ApplicationNamesList",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to only include those with the specified names. </p>"
                }
            ]
        },
        "DescribeConfigurationOptionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> The name of the configuration template whose configuration options you want to describe. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment whose configuration options you want to describe. </p>"
                },
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> The name of the solution stack whose configuration options you want to describe. </p>"
                },
                {
                    "name": "Options",
                    "shape": "OptionsSpecifierList",
                    "documentation": "<p> If specified, restricts the descriptions to only the specified options. </p>"
                }
            ]
        },
        "DescribeConfigurationSettingsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The application for the environment or configuration template. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> The name of the configuration template to describe. </p> <p> Conditional: You must specify either this parameter or an EnvironmentName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns a <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment to describe. </p> <p> Condition: You must specify either this or a TemplateName, but not both. If you specify both, AWS Elastic Beanstalk returns an <code>InvalidParameterCombination</code> error. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                }
            ]
        },
        "DescribeEnvironmentResourcesMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of the environment to retrieve AWS resource usage data. </p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment to retrieve AWS resource usage data. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                }
            ]
        },
        "DescribeEnvironmentsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application. </p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version. </p>"
                },
                {
                    "name": "EnvironmentIds",
                    "shape": "EnvironmentIdList",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs. </p>"
                },
                {
                    "name": "EnvironmentNames",
                    "shape": "EnvironmentNamesList",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names. </p>"
                },
                {
                    "name": "IncludeDeleted",
                    "shape": "IncludeDeleted",
                    "documentation": "<p>Indicates whether to include deleted environments: </p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed. </p> <p> <code>false</code>: Do not include deleted environments. </p>"
                },
                {
                    "name": "IncludedDeletedBackTo",
                    "shape": "IncludeDeletedBackTo",
                    "documentation": "<p> If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. </p>"
                }
            ]
        },
        "DescribeEventsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application. </p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration. </p>"
                },
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment. </p>"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID. </p>"
                },
                {
                    "name": "Severity",
                    "shape": "EventSeverity",
                    "documentation": "<p> If specified, limits the events returned from this call to include only those with the specified severity or higher. </p>"
                },
                {
                    "name": "StartTime",
                    "shape": "TimeFilterStart",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time. </p>"
                },
                {
                    "name": "EndTime",
                    "shape": "TimeFilterEnd",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>. </p>"
                },
                {
                    "name": "MaxRecords",
                    "shape": "MaxRecords",
                    "documentation": "<p> Specifies the maximum number of events that can be returned, beginning with the most recent event. </p>"
                },
                {
                    "name": "NextToken",
                    "shape": "Token",
                    "documentation": "<p> Pagination token. If specified, the events return the next batch of results. </p>"
                }
            ]
        },
        "Description": {
            "type": "string"
        },
        "Ec2InstanceId": {
            "type": "string"
        },
        "EndpointURL": {
            "type": "string"
        },
        "EnvironmentDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of this environment.</p>"
                },
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of this environment. </p>"
                },
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application associated with this environment.</p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p>The application version deployed in this environment.</p>"
                },
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> The name of the <code>SolutionStack</code> deployed with this environment. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> The name of the configuration template used to originally launch this environment. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>Describes this environment.</p>"
                },
                {
                    "name": "EndpointURL",
                    "shape": "EndpointURL",
                    "documentation": "<p>For load-balanced, autoscaling environments, the URL to the LoadBalancer. For single-instance environments, the IP address of the instance.</p>"
                },
                {
                    "name": "CNAME",
                    "shape": "DNSCname",
                    "documentation": "<p> The URL to the CNAME for this environment. </p>"
                },
                {
                    "name": "DateCreated",
                    "shape": "CreationDate",
                    "documentation": "<p>The creation date for this environment.</p>"
                },
                {
                    "name": "DateUpdated",
                    "shape": "UpdateDate",
                    "documentation": "<p>The last modified date for this environment.</p>"
                },
                {
                    "name": "Status",
                    "shape": "EnvironmentStatus",
                    "documentation": "<p> The current operational status of the environment: </p> <ul> <li> <code>Launching</code>: Environment is in the process of initial deployment. </li> <li> <code>Updating</code>: Environment is in the process of updating its configuration settings or application version. </li> <li> <code>Ready</code>: Environment is available to have an action performed on it, such as update or terminate. </li> <li> <code>Terminating</code>: Environment is in the shut-down process. </li> <li> <code>Terminated</code>: Environment is not running. </li> </ul>"
                },
                {
                    "name": "AbortableOperationInProgress",
                    "shape": "AbortableOperationInProgress",
                    "documentation": "<p>Indicates if there is an in-progress environment configuration update or application version deployment that you can cancel.</p> <p> <code>true:</code> There is an update in progress. </p> <p> <code>false:</code> There are no updates currently in progress. </p>"
                },
                {
                    "name": "Health",
                    "shape": "EnvironmentHealth",
                    "documentation": "<p> Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment: </p> <enumValues> <value name=\"Red\"> <p> <code>Red</code> : Indicates the environment is not working. </p> </value> <value name=\"Yellow\"> <p> <code>Yellow</code>: Indicates that something is wrong, the application might not be available, but the instances appear running. </p> </value> <value name=\"Green\"> <p> <code>Green</code>: Indicates the environment is healthy and fully functional. </p> </value> </enumValues> <ul> <li> <code>Red</code>: Indicates the environment is not responsive. Occurs when three or more consecutive failures occur for an environment. </li> <li> <code>Yellow</code>: Indicates that something is wrong. Occurs when two consecutive failures occur for an environment. </li> <li> <code>Green</code>: Indicates the environment is healthy and fully functional. </li> <li> <code>Grey</code>: Default health for a new environment. The environment is not fully launched and health checks have not started or health checks are suspended during an <code>UpdateEnvironment</code> or <code>RestartEnvironement</code> request. </li> </ul> <p> Default: <code>Grey</code> </p>"
                },
                {
                    "name": "Resources",
                    "shape": "EnvironmentResourcesDescription",
                    "documentation": "<p>The description of the AWS resources used by this environment.</p>"
                },
                {
                    "name": "Tier",
                    "shape": "EnvironmentTier",
                    "documentation": "<p>Describes the current tier of this environment.</p>"
                }
            ]
        },
        "EnvironmentDescriptionsList": {
            "type": "list",
            "of": "EnvironmentDescription"
        },
        "EnvironmentDescriptionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Environments",
                    "shape": "EnvironmentDescriptionsList",
                    "documentation": "<p> Returns an <a>EnvironmentDescription</a> list. </p>"
                }
            ]
        },
        "EnvironmentHealth": {
            "type": "string"
        },
        "EnvironmentId": {
            "type": "string"
        },
        "EnvironmentIdList": {
            "type": "list",
            "of": "EnvironmentId"
        },
        "EnvironmentInfoDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "InfoType",
                    "shape": "EnvironmentInfoType",
                    "documentation": "<p>The type of information retrieved.</p>"
                },
                {
                    "name": "Ec2InstanceId",
                    "shape": "Ec2InstanceId",
                    "documentation": "<p>The Amazon EC2 Instance ID for this information.</p>"
                },
                {
                    "name": "SampleTimestamp",
                    "shape": "SampleTimestamp",
                    "documentation": "<p>The time stamp when this information was retrieved.</p>"
                },
                {
                    "name": "Message",
                    "shape": "Message",
                    "documentation": "<p>The retrieved information.</p>"
                }
            ]
        },
        "EnvironmentInfoDescriptionList": {
            "type": "list",
            "of": "EnvironmentInfoDescription"
        },
        "EnvironmentInfoType": {
            "type": "string"
        },
        "EnvironmentName": {
            "type": "string"
        },
        "EnvironmentNamesList": {
            "type": "list",
            "of": "EnvironmentName"
        },
        "EnvironmentResourceDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of the environment.</p>"
                },
                {
                    "name": "AutoScalingGroups",
                    "shape": "AutoScalingGroupList",
                    "documentation": "<p> The <code>AutoScalingGroups</code> used by this environment. </p>"
                },
                {
                    "name": "Instances",
                    "shape": "InstanceList",
                    "documentation": "<p>The Amazon EC2 instances used by this environment.</p>"
                },
                {
                    "name": "LaunchConfigurations",
                    "shape": "LaunchConfigurationList",
                    "documentation": "<p>The Auto Scaling launch configurations in use by this environment.</p>"
                },
                {
                    "name": "LoadBalancers",
                    "shape": "LoadBalancerList",
                    "documentation": "<p>The LoadBalancers in use by this environment.</p>"
                },
                {
                    "name": "Triggers",
                    "shape": "TriggerList",
                    "documentation": "<p> The <code>AutoScaling</code> triggers in use by this environment. </p>"
                },
                {
                    "name": "Queues",
                    "shape": "QueueList",
                    "documentation": "<p> The queues used by this environment. </p>"
                }
            ]
        },
        "EnvironmentResourceDescriptionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentResources",
                    "shape": "EnvironmentResourceDescription",
                    "documentation": "<p> A list of <a>EnvironmentResourceDescription</a>. </p>"
                }
            ]
        },
        "EnvironmentResourcesDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancer",
                    "shape": "LoadBalancerDescription",
                    "documentation": "<p>Describes the LoadBalancer.</p>"
                }
            ]
        },
        "EnvironmentStatus": {
            "type": "string"
        },
        "EnvironmentTier": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "String",
                    "documentation": "<p>The name of this environment tier.</p>"
                },
                {
                    "name": "Type",
                    "shape": "String",
                    "documentation": "<p>The type of this environment tier.</p>"
                },
                {
                    "name": "Version",
                    "shape": "String",
                    "documentation": "<p>The version of this environment tier.</p>"
                }
            ]
        },
        "EventDate": {
            "type": "timestamp"
        },
        "EventDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "EventDate",
                    "shape": "EventDate",
                    "documentation": "<p>The date when the event occurred.</p>"
                },
                {
                    "name": "Message",
                    "shape": "EventMessage",
                    "documentation": "<p>The event message.</p>"
                },
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The application associated with the event.</p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p>The release label for the application version associated with this event.</p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p>The name of the configuration associated with this event.</p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of the environment associated with this event.</p>"
                },
                {
                    "name": "RequestId",
                    "shape": "RequestId",
                    "documentation": "<p>The web service request ID for the activity of this event.</p>"
                },
                {
                    "name": "Severity",
                    "shape": "EventSeverity",
                    "documentation": "<p>The severity level of this event. </p>"
                }
            ]
        },
        "EventDescriptionList": {
            "type": "list",
            "of": "EventDescription"
        },
        "EventDescriptionsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Events",
                    "shape": "EventDescriptionList",
                    "documentation": "<p> A list of <a>EventDescription</a>. </p>"
                },
                {
                    "name": "NextToken",
                    "shape": "Token",
                    "documentation": "<p> If returned, this indicates that there are more results to obtain. Use this token in the next <a>DescribeEvents</a> call to get the next batch of events. </p>"
                }
            ]
        },
        "EventMessage": {
            "type": "string"
        },
        "EventSeverity": {
            "type": "string"
        },
        "FileTypeExtension": {
            "type": "string"
        },
        "IncludeDeleted": {
            "type": "boolean"
        },
        "IncludeDeletedBackTo": {
            "type": "timestamp"
        },
        "Instance": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "documentation": "<p>The ID of the Amazon EC2 instance.</p>"
                }
            ]
        },
        "InstanceList": {
            "type": "list",
            "of": "Instance"
        },
        "InsufficientPrivilegesException": {
            "type": "structure",
            "members": []
        },
        "Integer": {
            "type": "integer"
        },
        "LaunchConfiguration": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "ResourceId",
                    "documentation": "<p>The name of the launch configuration.</p>"
                }
            ]
        },
        "LaunchConfigurationList": {
            "type": "list",
            "of": "LaunchConfiguration"
        },
        "ListAvailableSolutionStacksResultMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "SolutionStacks",
                    "shape": "AvailableSolutionStackNamesList",
                    "documentation": "<p> A list of available solution stacks. </p>"
                },
                {
                    "name": "SolutionStackDetails",
                    "shape": "AvailableSolutionStackDetailsList",
                    "documentation": "<p> A list of available solution stacks and their <a>SolutionStackDescription</a>. </p>"
                }
            ]
        },
        "Listener": {
            "type": "structure",
            "members": [
                {
                    "name": "Protocol",
                    "shape": "String",
                    "documentation": "<p>The protocol that is used by the Listener.</p>"
                },
                {
                    "name": "Port",
                    "shape": "Integer",
                    "documentation": "<p>The port that is used by the Listener.</p>"
                }
            ]
        },
        "LoadBalancer": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "ResourceId",
                    "documentation": "<p>The name of the LoadBalancer.</p>"
                }
            ]
        },
        "LoadBalancerDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "LoadBalancerName",
                    "shape": "String",
                    "documentation": "<p>The name of the LoadBalancer.</p>"
                },
                {
                    "name": "Domain",
                    "shape": "String",
                    "documentation": "<p>The domain name of the LoadBalancer.</p>"
                },
                {
                    "name": "Listeners",
                    "shape": "LoadBalancerListenersDescription",
                    "documentation": "<p>A list of Listeners used by the LoadBalancer.</p>"
                }
            ]
        },
        "LoadBalancerList": {
            "type": "list",
            "of": "LoadBalancer"
        },
        "LoadBalancerListenersDescription": {
            "type": "list",
            "of": "Listener"
        },
        "MaxRecords": {
            "type": "integer"
        },
        "Message": {
            "type": "string"
        },
        "OperationInProgressException": {
            "type": "structure",
            "members": []
        },
        "OptionNamespace": {
            "type": "string"
        },
        "OptionRestrictionMaxLength": {
            "type": "integer"
        },
        "OptionRestrictionMaxValue": {
            "type": "integer"
        },
        "OptionRestrictionMinValue": {
            "type": "integer"
        },
        "OptionRestrictionRegex": {
            "type": "structure",
            "members": [
                {
                    "name": "Pattern",
                    "shape": "RegexPattern",
                    "documentation": "<p> The regular expression pattern that a string configuration option value with this restriction must match. </p>"
                },
                {
                    "name": "Label",
                    "shape": "RegexLabel",
                    "documentation": "<p> A unique name representing this regular expression. </p>"
                }
            ]
        },
        "OptionSpecification": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceName",
                    "shape": "ResourceName",
                    "documentation": "<p> A unique resource name for a time-based scaling configuration option. </p>"
                },
                {
                    "name": "Namespace",
                    "shape": "OptionNamespace",
                    "documentation": "<p> A unique namespace identifying the option's associated AWS resource. </p>"
                },
                {
                    "name": "OptionName",
                    "shape": "ConfigurationOptionName",
                    "documentation": "<p> The name of the configuration option. </p>"
                }
            ]
        },
        "OptionsSpecifierList": {
            "type": "list",
            "of": "OptionSpecification"
        },
        "Queue": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "String",
                    "documentation": "<p>The name of the queue.</p>"
                },
                {
                    "name": "URL",
                    "shape": "String",
                    "documentation": "<p>The URL of the queue.</p>"
                }
            ]
        },
        "QueueList": {
            "type": "list",
            "of": "Queue"
        },
        "RebuildEnvironmentMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of the environment to rebuild. </p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment to rebuild. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                }
            ]
        },
        "RegexLabel": {
            "type": "string"
        },
        "RegexPattern": {
            "type": "string"
        },
        "RequestEnvironmentInfoMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p>The ID of the environment of the requested data.</p> <p> If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of the environment of the requested data.</p> <p> If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "InfoType",
                    "shape": "EnvironmentInfoType",
                    "documentation": "<p> The type of information to request. </p>"
                }
            ]
        },
        "RequestId": {
            "type": "string"
        },
        "ResourceId": {
            "type": "string"
        },
        "ResourceName": {
            "type": "string"
        },
        "RestartAppServerMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of the environment to restart the server for. </p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment to restart the server for. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                }
            ]
        },
        "RetrieveEnvironmentInfoMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p>The ID of the data's environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of the data's environment.</p> <p> If no such environment is found, returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "InfoType",
                    "shape": "EnvironmentInfoType",
                    "documentation": "<p> The type of information to retrieve. </p>"
                }
            ]
        },
        "RetrieveEnvironmentInfoResultMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentInfo",
                    "shape": "EnvironmentInfoDescriptionList",
                    "documentation": "<p> The <a>EnvironmentInfoDescription</a> of the environment. </p>"
                }
            ]
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "S3Location": {
            "type": "structure",
            "members": [
                {
                    "name": "S3Bucket",
                    "shape": "S3Bucket",
                    "documentation": "<p>The Amazon S3 bucket where the data is located.</p>"
                },
                {
                    "name": "S3Key",
                    "shape": "S3Key",
                    "documentation": "<p>The Amazon S3 key where the data is located.</p>"
                }
            ]
        },
        "S3LocationNotInServiceRegionException": {
            "type": "structure",
            "members": []
        },
        "S3SubscriptionRequiredException": {
            "type": "structure",
            "members": []
        },
        "SampleTimestamp": {
            "type": "timestamp"
        },
        "SolutionStackDescription": {
            "type": "structure",
            "members": [
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> The name of the solution stack. </p>"
                },
                {
                    "name": "PermittedFileTypes",
                    "shape": "SolutionStackFileTypeList",
                    "documentation": "<p> The permitted file types allowed for a solution stack. </p>"
                }
            ]
        },
        "SolutionStackFileTypeList": {
            "type": "list",
            "of": "FileTypeExtension"
        },
        "SolutionStackName": {
            "type": "string"
        },
        "SourceBundleDeletionException": {
            "type": "structure",
            "members": []
        },
        "SourceConfiguration": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application associated with the configuration.</p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p>The name of the configuration template.</p>"
                }
            ]
        },
        "String": {
            "type": "string"
        },
        "SwapEnvironmentCNAMEsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "SourceEnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of the source environment. </p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>"
                },
                {
                    "name": "SourceEnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the source environment. </p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>"
                },
                {
                    "name": "DestinationEnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p> The ID of the destination environment. </p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>"
                },
                {
                    "name": "DestinationEnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the destination environment. </p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>"
                }
            ]
        },
        "Tag": {
            "type": "structure",
            "members": [
                {
                    "name": "Key",
                    "shape": "TagKey",
                    "documentation": "<p>The key of the tag.</p>"
                },
                {
                    "name": "Value",
                    "shape": "TagValue",
                    "documentation": "<p>The value of the tag.</p>"
                }
            ]
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "Tags": {
            "type": "list",
            "of": "Tag"
        },
        "TerminateEnvForce": {
            "type": "boolean"
        },
        "TerminateEnvironmentMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p>The ID of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of the environment to terminate.</p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "TerminateResources",
                    "shape": "TerminateEnvironmentResources",
                    "documentation": "<p> Indicates whether the associated AWS resources should shut down when the environment is terminated: </p> <enumValues> <value name=\"true\"> <p> <code>true</code>: (default) The user AWS resources (for example, the Auto Scaling group, LoadBalancer, etc.) are terminated along with the environment. </p> </value> <value name=\"false\"> <p> <code>false</code>: The environment is removed from the AWS Elastic Beanstalk but the AWS resources continue to operate. </p> </value> </enumValues> <ul> <li> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated. </li> <li> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate. </li> </ul> <p> For more information, see the <a href=\"http://docs.aws.amazon.com/elasticbeanstalk/latest/ug/\"> AWS Elastic Beanstalk User Guide. </a> </p> <p> Default: <code>true</code> </p> <p> Valid Values: <code>true</code> | <code>false</code> </p>"
                }
            ]
        },
        "TerminateEnvironmentResources": {
            "type": "boolean"
        },
        "TimeFilterEnd": {
            "type": "timestamp"
        },
        "TimeFilterStart": {
            "type": "timestamp"
        },
        "Token": {
            "type": "string"
        },
        "TooManyApplicationVersionsException": {
            "type": "structure",
            "members": []
        },
        "TooManyApplicationsException": {
            "type": "structure",
            "members": []
        },
        "TooManyBucketsException": {
            "type": "structure",
            "members": []
        },
        "TooManyConfigurationTemplatesException": {
            "type": "structure",
            "members": []
        },
        "TooManyEnvironmentsException": {
            "type": "structure",
            "members": []
        },
        "Trigger": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "ResourceId",
                    "documentation": "<p>The name of the trigger.</p>"
                }
            ]
        },
        "TriggerList": {
            "type": "list",
            "of": "Trigger"
        },
        "UpdateApplicationMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application to update. If no such application is found, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p> A new description for the application. </p> <p>Default: If not specified, AWS Elastic Beanstalk does not update the description. </p>"
                }
            ]
        },
        "UpdateApplicationVersionMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application associated with this version. </p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p>The name of the version to update.</p> <p> If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A new description for this release.</p>"
                }
            ]
        },
        "UpdateConfigurationTemplateMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p>The name of the application associated with the configuration template to update.</p> <p> If no application is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p>The name of the configuration template to update.</p> <p> If no configuration template is found with this name, <code>UpdateConfigurationTemplate</code> returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p>A new description for the configuration.</p>"
                },
                {
                    "name": "OptionSettings",
                    "shape": "ConfigurationOptionSettingsList",
                    "documentation": "<p> A list of configuration option settings to update with the new specified option value. </p>"
                },
                {
                    "name": "OptionsToRemove",
                    "shape": "OptionsSpecifierList",
                    "documentation": "<p> A list of configuration options to remove from the configuration set. </p> <p> Constraint: You can remove only <code>UserDefined</code> configuration options. </p>"
                }
            ]
        },
        "UpdateDate": {
            "type": "timestamp"
        },
        "UpdateEnvironmentMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "EnvironmentId",
                    "shape": "EnvironmentId",
                    "documentation": "<p>The ID of the environment to update.</p> <p> If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p> <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
                },
                {
                    "name": "Description",
                    "shape": "Description",
                    "documentation": "<p> If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment. </p>"
                },
                {
                    "name": "Tier",
                    "shape": "EnvironmentTier",
                    "documentation": "<p> This specifies the tier to use to update the environment. </p> <p> Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "VersionLabel",
                    "shape": "VersionLabel",
                    "documentation": "<p> If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>"
                },
                {
                    "name": "SolutionStackName",
                    "shape": "SolutionStackName",
                    "documentation": "<p> This specifies the platform version that the environment will run after the environment is updated. </p>"
                },
                {
                    "name": "OptionSettings",
                    "shape": "ConfigurationOptionSettingsList",
                    "documentation": "<p> If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value. </p>"
                },
                {
                    "name": "OptionsToRemove",
                    "shape": "OptionsSpecifierList",
                    "documentation": "<p> A list of custom user-defined configuration options to remove from the configuration set for this environment. </p>"
                }
            ]
        },
        "UserDefinedOption": {
            "type": "boolean"
        },
        "ValidateConfigurationSettingsMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "ApplicationName",
                    "shape": "ApplicationName",
                    "documentation": "<p> The name of the application that the configuration template or environment belongs to. </p>"
                },
                {
                    "name": "TemplateName",
                    "shape": "ConfigurationTemplateName",
                    "documentation": "<p> The name of the configuration template to validate the settings against. </p> <p> Condition: You cannot specify both this and an environment name. </p>"
                },
                {
                    "name": "EnvironmentName",
                    "shape": "EnvironmentName",
                    "documentation": "<p> The name of the environment to validate the settings against. </p> <p> Condition: You cannot specify both this and a configuration template name. </p>"
                },
                {
                    "name": "OptionSettings",
                    "shape": "ConfigurationOptionSettingsList",
                    "documentation": "<p> A list of the options and desired values to evaluate. </p>"
                }
            ]
        },
        "ValidationMessage": {
            "type": "structure",
            "members": [
                {
                    "name": "Message",
                    "shape": "ValidationMessageString",
                    "documentation": "<p> A message describing the error or warning. </p>"
                },
                {
                    "name": "Severity",
                    "shape": "ValidationSeverity",
                    "documentation": "<p> An indication of the severity of this message: </p> <enumValues> <value name=\"error\"> <p> error: This message indicates that this is not a valid setting for an option. </p> </value> <value name=\"warning\"> <p> warning: This message is providing information you should take into account. </p> </value> </enumValues> <ul> <li> error: This message indicates that this is not a valid setting for an option. </li> <li> warning: This message is providing information you should take into account. </li> </ul>"
                },
                {
                    "name": "Namespace",
                    "shape": "OptionNamespace",
                    "documentation": "<p></p>"
                },
                {
                    "name": "OptionName",
                    "shape": "ConfigurationOptionName",
                    "documentation": "<p></p>"
                }
            ]
        },
        "ValidationMessageString": {
            "type": "string"
        },
        "ValidationMessagesList": {
            "type": "list",
            "of": "ValidationMessage"
        },
        "ValidationSeverity": {
            "type": "string"
        },
        "VersionLabel": {
            "type": "string"
        },
        "VersionLabelsList": {
            "type": "list",
            "of": "VersionLabel"
        }
    }
}