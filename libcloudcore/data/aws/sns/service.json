{
    "metadata": {
        "request-pipeline": [
            "libcloudcore.serializers.xml:XmlSerializer"
        ],
        "namespaces": {
            "": "http://sns.amazonaws.com/doc/2010-03-31/"
        }
    },
    "endpoints": [
        {
            "when": [
                [
                    "region",
                    "starts-with",
                    "cn-"
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com.cn"
            }
        },
        {
            "when": [
                [
                    "region",
                    "not-equals",
                    null
                ]
            ],
            "http": {
                "host": "{service}.{region}.amazonaws.com"
            }
        }
    ],
    "operations": {
        "AddPermission": {
            "documentation": "Adds a statement to a topic's access control policy, granting access for the specified AWS accounts to the specified actions.",
            "input": {
                "shape": "AddPermissionInput"
            }
        },
        "ConfirmSubscription": {
            "documentation": "Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier ``Subscribe`` action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the ``AuthenticateOnUnsubscribe`` flag is set to \"true\".",
            "input": {
                "shape": "ConfirmSubscriptionInput"
            },
            "output": {
                "shape": "ConfirmSubscriptionResponse"
            }
        },
        "CreatePlatformApplication": {
            "documentation": "Creates a platform application object for one of the supported push notification services, such as APNS and GCM, to which devices and mobile apps may register. You must specify PlatformPrincipal and PlatformCredential attributes when using the ``CreatePlatformApplication`` action. The PlatformPrincipal is received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is \"client id\". The PlatformCredential is also received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM, PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client secret\". The PlatformApplicationArn that is returned when using ``CreatePlatformApplication`` is then used as an attribute for the ``CreatePlatformEndpoint`` action. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "CreatePlatformApplicationInput"
            },
            "output": {
                "shape": "CreatePlatformApplicationResponse"
            }
        },
        "CreatePlatformEndpoint": {
            "documentation": "Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM and APNS. ``CreatePlatformEndpoint`` requires the PlatformApplicationArn that is returned from ``CreatePlatformApplication``. The EndpointArn that is returned when using ``CreatePlatformEndpoint`` can then be used by the ``Publish`` action to send a message to a mobile app or by the ``Subscribe`` action for subscription to a topic. The ``CreatePlatformEndpoint`` action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint's ARN is returned without creating a new endpoint. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_. \n\n When using ``CreatePlatformEndpoint`` with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see `Creating an Amazon SNS Endpoint for Baidu <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html>`_.",
            "input": {
                "shape": "CreatePlatformEndpointInput"
            },
            "output": {
                "shape": "CreateEndpointResponse"
            }
        },
        "CreateTopic": {
            "documentation": "Creates a topic to which notifications can be published. Users can create at most 3000 topics. For more information, see `http://aws.amazon.com/sns <http://aws.amazon.com/sns/>`_. This action is idempotent, so if the requester already owns a topic with the specified name, that topic's ARN is returned without creating a new topic.",
            "input": {
                "shape": "CreateTopicInput"
            },
            "output": {
                "shape": "CreateTopicResponse"
            }
        },
        "DeleteEndpoint": {
            "documentation": "Deletes the endpoint from Amazon SNS. This action is idempotent. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "DeleteEndpointInput"
            }
        },
        "DeletePlatformApplication": {
            "documentation": "Deletes a platform application object for one of the supported push notification services, such as APNS and GCM. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "DeletePlatformApplicationInput"
            }
        },
        "DeleteTopic": {
            "documentation": "Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.",
            "input": {
                "shape": "DeleteTopicInput"
            }
        },
        "GetEndpointAttributes": {
            "documentation": "Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM and APNS. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "GetEndpointAttributesInput"
            },
            "output": {
                "shape": "GetEndpointAttributesResponse"
            }
        },
        "GetPlatformApplicationAttributes": {
            "documentation": "Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "GetPlatformApplicationAttributesInput"
            },
            "output": {
                "shape": "GetPlatformApplicationAttributesResponse"
            }
        },
        "GetSubscriptionAttributes": {
            "documentation": "Returns all of the properties of a subscription.",
            "input": {
                "shape": "GetSubscriptionAttributesInput"
            },
            "output": {
                "shape": "GetSubscriptionAttributesResponse"
            }
        },
        "GetTopicAttributes": {
            "documentation": "Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.",
            "input": {
                "shape": "GetTopicAttributesInput"
            },
            "output": {
                "shape": "GetTopicAttributesResponse"
            }
        },
        "ListEndpointsByPlatformApplication": {
            "documentation": "Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM and APNS. The results for ``ListEndpointsByPlatformApplication`` are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call ``ListEndpointsByPlatformApplication`` again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "ListEndpointsByPlatformApplicationInput"
            },
            "output": {
                "shape": "ListEndpointsByPlatformApplicationResponse"
            }
        },
        "ListPlatformApplications": {
            "documentation": "Lists the platform application objects for the supported push notification services, such as APNS and GCM. The results for ``ListPlatformApplications`` are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call ``ListPlatformApplications`` using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "ListPlatformApplicationsInput"
            },
            "output": {
                "shape": "ListPlatformApplicationsResponse"
            }
        },
        "ListSubscriptions": {
            "documentation": "Returns a list of the requester's subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a ``NextToken`` is also returned. Use the ``NextToken`` parameter in a new ``ListSubscriptions`` call to get further results.",
            "input": {
                "shape": "ListSubscriptionsInput"
            },
            "output": {
                "shape": "ListSubscriptionsResponse"
            }
        },
        "ListSubscriptionsByTopic": {
            "documentation": "Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a ``NextToken`` is also returned. Use the ``NextToken`` parameter in a new ``ListSubscriptionsByTopic`` call to get further results.",
            "input": {
                "shape": "ListSubscriptionsByTopicInput"
            },
            "output": {
                "shape": "ListSubscriptionsByTopicResponse"
            }
        },
        "ListTopics": {
            "documentation": "Returns a list of the requester's topics. Each call returns a limited list of topics, up to 100. If there are more topics, a ``NextToken`` is also returned. Use the ``NextToken`` parameter in a new ``ListTopics`` call to get further results.",
            "input": {
                "shape": "ListTopicsInput"
            },
            "output": {
                "shape": "ListTopicsResponse"
            }
        },
        "Publish": {
            "documentation": "Sends a message to all of a topic's subscribed endpoints. When a ``messageId`` is returned, the message has been saved and Amazon SNS will attempt to deliver it to the topic's subscribers shortly. The format of the outgoing message to each subscribed endpoint depends on the notification protocol selected.\n\n To use the ``Publish`` action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn. The EndpointArn is returned when making a call with the ``CreatePlatformEndpoint`` action. The second example below shows a request and response for publishing to a mobile endpoint.",
            "input": {
                "shape": "PublishInput"
            },
            "output": {
                "shape": "PublishResponse"
            }
        },
        "RemovePermission": {
            "documentation": "Removes a statement from a topic's access control policy.",
            "input": {
                "shape": "RemovePermissionInput"
            }
        },
        "SetEndpointAttributes": {
            "documentation": "Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM and APNS. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "SetEndpointAttributesInput"
            }
        },
        "SetPlatformApplicationAttributes": {
            "documentation": "Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM. For more information, see `Using Amazon SNS Mobile Push Notifications <http://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html>`_.",
            "input": {
                "shape": "SetPlatformApplicationAttributesInput"
            }
        },
        "SetSubscriptionAttributes": {
            "documentation": "Allows a subscription owner to set an attribute of the topic to a new value.",
            "input": {
                "shape": "SetSubscriptionAttributesInput"
            }
        },
        "SetTopicAttributes": {
            "documentation": "Allows a topic owner to set an attribute of the topic to a new value.",
            "input": {
                "shape": "SetTopicAttributesInput"
            }
        },
        "Subscribe": {
            "documentation": "Prepares to subscribe an endpoint by sending the endpoint a confirmation message. To actually create a subscription, the endpoint owner must call the ``ConfirmSubscription`` action with the token from the confirmation message. Confirmation tokens are valid for three days.",
            "input": {
                "shape": "SubscribeInput"
            },
            "output": {
                "shape": "SubscribeResponse"
            }
        },
        "Unsubscribe": {
            "documentation": "Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic's owner can unsubscribe, and an AWS signature is required. If the ``Unsubscribe`` call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the ``Unsubscribe`` request was unintended.",
            "input": {
                "shape": "UnsubscribeInput"
            }
        }
    },
    "shapes": {
        "ActionsList": {
            "type": "list",
            "of": "action"
        },
        "AddPermissionInput": {
            "type": "structure",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic whose access control policy you wish to modify.</p>"
                },
                {
                    "name": "Label",
                    "shape": "label",
                    "documentation": "<p>A unique identifier for the new policy statement.</p>"
                },
                {
                    "name": "AWSAccountId",
                    "shape": "DelegatesList",
                    "documentation": "<p>The AWS account IDs of the users (principals) who will be given access to the specified actions. The users must have AWS accounts, but do not need to be signed up for this service. </p>"
                },
                {
                    "name": "ActionName",
                    "shape": "ActionsList",
                    "documentation": "<p>The action you want to allow for the specified principal(s).</p> <p>Valid values: any Amazon SNS action name.</p>"
                }
            ]
        },
        "AuthorizationErrorException": {
            "type": "structure",
            "documentation": "Indicates that the user has been denied access to the requested resource.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "Binary": {
            "type": "blob"
        },
        "ConfirmSubscriptionInput": {
            "type": "structure",
            "documentation": "Input for ConfirmSubscription action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic for which you wish to confirm a subscription.</p>"
                },
                {
                    "name": "Token",
                    "shape": "token",
                    "documentation": "<p>Short-lived token sent to an endpoint during the <code>Subscribe</code> action.</p>"
                },
                {
                    "name": "AuthenticateOnUnsubscribe",
                    "shape": "authenticateOnUnsubscribe",
                    "documentation": "<p>Disallows unauthenticated unsubscribes of the subscription. If the value of this parameter is <code>true</code> and the request has an AWS signature, then only the topic owner and the subscription owner can unsubscribe the endpoint. The unsubscribe action requires AWS authentication. </p>"
                }
            ]
        },
        "ConfirmSubscriptionResponse": {
            "type": "structure",
            "documentation": "Response for ConfirmSubscriptions action.",
            "members": [
                {
                    "name": "SubscriptionArn",
                    "shape": "subscriptionARN",
                    "documentation": "<p>The ARN of the created subscription.</p>"
                }
            ]
        },
        "CreateEndpointResponse": {
            "type": "structure",
            "documentation": "Response from CreateEndpoint action.",
            "members": [
                {
                    "name": "EndpointArn",
                    "shape": "String",
                    "documentation": "<p>EndpointArn returned from CreateEndpoint action.</p>"
                }
            ]
        },
        "CreatePlatformApplicationInput": {
            "type": "structure",
            "documentation": "Input for CreatePlatformApplication action.",
            "members": [
                {
                    "name": "Name",
                    "shape": "String",
                    "documentation": "<p>Application names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, hyphens, and periods, and must be between 1 and 256 characters long.</p>"
                },
                {
                    "name": "Platform",
                    "shape": "String",
                    "documentation": "<p>The following platforms are supported: ADM (Amazon Device Messaging), APNS (Apple Push Notification Service), APNS_SANDBOX, and GCM (Google Cloud Messaging).</p>"
                },
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>For a list of attributes, see <a href=\"http://docs.aws.amazon.com/sns/latest/api/API_SetPlatformApplicationAttributes.html\">SetPlatformApplicationAttributes</a></p>"
                }
            ]
        },
        "CreatePlatformApplicationResponse": {
            "type": "structure",
            "documentation": "Response from CreatePlatformApplication action.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn is returned.</p>"
                }
            ]
        },
        "CreatePlatformEndpointInput": {
            "type": "structure",
            "documentation": "Input for CreatePlatformEndpoint action.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn returned from CreatePlatformApplication is used to create a an endpoint.</p>"
                },
                {
                    "name": "Token",
                    "shape": "String",
                    "documentation": "<p>Unique identifier created by the notification service for an app on a device. The specific name for Token will vary, depending on which notification service is being used. For example, when using APNS as the notification service, you need the device token. Alternatively, when using GCM or ADM, the device token equivalent is called the registration ID.</p>"
                },
                {
                    "name": "CustomUserData",
                    "shape": "String",
                    "documentation": "<p>Arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</p>"
                },
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>For a list of attributes, see <a href=\"http://docs.aws.amazon.com/sns/latest/api/API_SetEndpointAttributes.html\">SetEndpointAttributes</a>.</p>"
                }
            ]
        },
        "CreateTopicInput": {
            "type": "structure",
            "documentation": "Input for CreateTopic action.",
            "members": [
                {
                    "name": "Name",
                    "shape": "topicName",
                    "documentation": "<p>The name of the topic you want to create.</p> <p>Constraints: Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. </p>"
                }
            ]
        },
        "CreateTopicResponse": {
            "type": "structure",
            "documentation": "Response from CreateTopic action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The Amazon Resource Name (ARN) assigned to the created topic.</p>"
                }
            ]
        },
        "DelegatesList": {
            "type": "list",
            "of": "delegate"
        },
        "DeleteEndpointInput": {
            "type": "structure",
            "documentation": "Input for DeleteEndpoint action.",
            "members": [
                {
                    "name": "EndpointArn",
                    "shape": "String",
                    "documentation": "<p>EndpointArn of endpoint to delete.</p>"
                }
            ]
        },
        "DeletePlatformApplicationInput": {
            "type": "structure",
            "documentation": "Input for DeletePlatformApplication action.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn of platform application object to delete.</p>"
                }
            ]
        },
        "DeleteTopicInput": {
            "type": "structure",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic you want to delete.</p>"
                }
            ]
        },
        "Endpoint": {
            "type": "structure",
            "documentation": "Endpoint for mobile app and device.",
            "members": [
                {
                    "name": "EndpointArn",
                    "shape": "String",
                    "documentation": "<p>EndpointArn for mobile app and device.</p>"
                },
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>Attributes for endpoint.</p>"
                }
            ]
        },
        "EndpointDisabledException": {
            "type": "structure",
            "documentation": "Exception error indicating endpoint disabled.",
            "members": [
                {
                    "name": "message",
                    "shape": "string",
                    "documentation": "<p>Message for endpoint disabled.</p>"
                }
            ]
        },
        "GetEndpointAttributesInput": {
            "type": "structure",
            "documentation": "Input for GetEndpointAttributes action.",
            "members": [
                {
                    "name": "EndpointArn",
                    "shape": "String",
                    "documentation": "<p>EndpointArn for GetEndpointAttributes input.</p>"
                }
            ]
        },
        "GetEndpointAttributesResponse": {
            "type": "structure",
            "documentation": "Response from GetEndpointAttributes of the EndpointArn.",
            "members": [
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>Attributes include the following:</p> <ul> <li> <code>CustomUserData</code> -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</li> <li> <code>Enabled</code> -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</li> <li> <code>Token</code> -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</li> </ul>"
                }
            ]
        },
        "GetPlatformApplicationAttributesInput": {
            "type": "structure",
            "documentation": "Input for GetPlatformApplicationAttributes action.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn for GetPlatformApplicationAttributesInput.</p>"
                }
            ]
        },
        "GetPlatformApplicationAttributesResponse": {
            "type": "structure",
            "documentation": "Response for GetPlatformApplicationAttributes action.",
            "members": [
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>Attributes include the following:</p> <ul> <li> <code>EventEndpointCreated</code> -- Topic ARN to which EndpointCreated event notifications should be sent.</li> <li> <code>EventEndpointDeleted</code> -- Topic ARN to which EndpointDeleted event notifications should be sent.</li> <li> <code>EventEndpointUpdated</code> -- Topic ARN to which EndpointUpdate event notifications should be sent.</li> <li> <code>EventDeliveryFailure</code> -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.</li> </ul>"
                }
            ]
        },
        "GetSubscriptionAttributesInput": {
            "type": "structure",
            "documentation": "Input for GetSubscriptionAttributes.",
            "members": [
                {
                    "name": "SubscriptionArn",
                    "shape": "subscriptionARN",
                    "documentation": "<p>The ARN of the subscription whose properties you want to get.</p>"
                }
            ]
        },
        "GetSubscriptionAttributesResponse": {
            "type": "structure",
            "documentation": "Response for GetSubscriptionAttributes action.",
            "members": [
                {
                    "name": "Attributes",
                    "shape": "SubscriptionAttributesMap",
                    "documentation": "<p>A map of the subscription's attributes. Attributes in this map include the following:</p> <ul> <li> <code>SubscriptionArn</code> -- the subscription's ARN</li> <li> <code>TopicArn</code> -- the topic ARN that the subscription is associated with</li> <li> <code>Owner</code> -- the AWS account ID of the subscription's owner</li> <li> <code>ConfirmationWasAuthenticated</code> -- true if the subscription confirmation request was authenticated</li> <li> <code>DeliveryPolicy</code> -- the JSON serialization of the subscription's delivery policy</li> <li> <code>EffectiveDeliveryPolicy</code> -- the JSON serialization of the effective delivery policy that takes into account the topic delivery policy and account system defaults</li> </ul>"
                }
            ]
        },
        "GetTopicAttributesInput": {
            "type": "structure",
            "documentation": "Input for GetTopicAttributes action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic whose properties you want to get.</p>"
                }
            ]
        },
        "GetTopicAttributesResponse": {
            "type": "structure",
            "documentation": "Response for GetTopicAttributes action.",
            "members": [
                {
                    "name": "Attributes",
                    "shape": "TopicAttributesMap",
                    "documentation": "<p>A map of the topic's attributes. Attributes in this map include the following:</p> <ul> <li> <code>TopicArn</code> -- the topic's ARN</li> <li> <code>Owner</code> -- the AWS account ID of the topic's owner</li> <li> <code>Policy</code> -- the JSON serialization of the topic's access control policy</li> <li> <code>DisplayName</code> -- the human-readable name used in the \"From\" field for notifications to email and email-json endpoints</li> <li> <code>SubscriptionsPending</code> -- the number of subscriptions pending confirmation on this topic</li> <li> <code>SubscriptionsConfirmed</code> -- the number of confirmed subscriptions on this topic</li> <li> <code>SubscriptionsDeleted</code> -- the number of deleted subscriptions on this topic</li> <li> <code>DeliveryPolicy</code> -- the JSON serialization of the topic's delivery policy</li> <li> <code>EffectiveDeliveryPolicy</code> -- the JSON serialization of the effective delivery policy that takes into account system defaults</li> </ul>"
                }
            ]
        },
        "InternalErrorException": {
            "type": "structure",
            "documentation": "Indicates an internal service error.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "InvalidParameterException": {
            "type": "structure",
            "documentation": "Indicates that a request parameter does not comply with the associated constraints.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "InvalidParameterValueException": {
            "type": "structure",
            "documentation": "Indicates that a request parameter does not comply with the associated constraints.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "ListEndpointsByPlatformApplicationInput": {
            "type": "structure",
            "documentation": "Input for ListEndpointsByPlatformApplication action.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn for ListEndpointsByPlatformApplicationInput action.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "String",
                    "documentation": "<p>NextToken string is used when calling ListEndpointsByPlatformApplication action to retrieve additional records that are available after the first page results.</p>"
                }
            ]
        },
        "ListEndpointsByPlatformApplicationResponse": {
            "type": "structure",
            "documentation": "Response for ListEndpointsByPlatformApplication action.",
            "members": [
                {
                    "name": "Endpoints",
                    "shape": "ListOfEndpoints",
                    "documentation": "<p>Endpoints returned for ListEndpointsByPlatformApplication action.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "String",
                    "documentation": "<p>NextToken string is returned when calling ListEndpointsByPlatformApplication action if additional records are available after the first page results.</p>"
                }
            ]
        },
        "ListOfEndpoints": {
            "type": "list",
            "of": "Endpoint"
        },
        "ListOfPlatformApplications": {
            "type": "list",
            "of": "PlatformApplication"
        },
        "ListPlatformApplicationsInput": {
            "type": "structure",
            "documentation": "Input for ListPlatformApplications action.",
            "members": [
                {
                    "name": "NextToken",
                    "shape": "String",
                    "documentation": "<p>NextToken string is used when calling ListPlatformApplications action to retrieve additional records that are available after the first page results.</p>"
                }
            ]
        },
        "ListPlatformApplicationsResponse": {
            "type": "structure",
            "documentation": "Response for ListPlatformApplications action.",
            "members": [
                {
                    "name": "PlatformApplications",
                    "shape": "ListOfPlatformApplications",
                    "documentation": "<p>Platform applications returned when calling ListPlatformApplications action.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "String",
                    "documentation": "<p>NextToken string is returned when calling ListPlatformApplications action if additional records are available after the first page results.</p>"
                }
            ]
        },
        "ListSubscriptionsByTopicInput": {
            "type": "structure",
            "documentation": "Input for ListSubscriptionsByTopic action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic for which you wish to find subscriptions.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "nextToken",
                    "documentation": "<p>Token returned by the previous <code>ListSubscriptionsByTopic</code> request.</p>"
                }
            ]
        },
        "ListSubscriptionsByTopicResponse": {
            "type": "structure",
            "documentation": "Response for ListSubscriptionsByTopic action.",
            "members": [
                {
                    "name": "Subscriptions",
                    "shape": "SubscriptionsList",
                    "documentation": "<p>A list of subscriptions.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "nextToken",
                    "documentation": "<p>Token to pass along to the next <code>ListSubscriptionsByTopic</code> request. This element is returned if there are more subscriptions to retrieve.</p>"
                }
            ]
        },
        "ListSubscriptionsInput": {
            "type": "structure",
            "documentation": "Input for ListSubscriptions action.",
            "members": [
                {
                    "name": "NextToken",
                    "shape": "nextToken",
                    "documentation": "<p>Token returned by the previous <code>ListSubscriptions</code> request.</p>"
                }
            ]
        },
        "ListSubscriptionsResponse": {
            "type": "structure",
            "documentation": "Response for ListSubscriptions action",
            "members": [
                {
                    "name": "Subscriptions",
                    "shape": "SubscriptionsList",
                    "documentation": "<p>A list of subscriptions.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "nextToken",
                    "documentation": "<p>Token to pass along to the next <code>ListSubscriptions</code> request. This element is returned if there are more subscriptions to retrieve.</p>"
                }
            ]
        },
        "ListTopicsInput": {
            "type": "structure",
            "members": [
                {
                    "name": "NextToken",
                    "shape": "nextToken",
                    "documentation": "<p>Token returned by the previous <code>ListTopics</code> request.</p>"
                }
            ]
        },
        "ListTopicsResponse": {
            "type": "structure",
            "documentation": "Response for ListTopics action.",
            "members": [
                {
                    "name": "Topics",
                    "shape": "TopicsList",
                    "documentation": "<p>A list of topic ARNs.</p>"
                },
                {
                    "name": "NextToken",
                    "shape": "nextToken",
                    "documentation": "<p>Token to pass along to the next <code>ListTopics</code> request. This element is returned if there are additional topics to retrieve.</p>"
                }
            ]
        },
        "MapStringToString": {
            "type": "map",
            "key": "String",
            "value": "String"
        },
        "MessageAttributeMap": {
            "type": "map",
            "key": "String",
            "value": "MessageAttributeValue"
        },
        "MessageAttributeValue": {
            "type": "structure",
            "documentation": "The user-specified message attribute value. For string data types, the value attribute has the same restrictions on the content as the message body. For more information, see `Publish <http://docs.aws.amazon.com/sns/latest/api/API_Publish.html>`_.\n\n Name, type, and value must not be empty or null. In addition, the message body should not be empty or null. All parts of the message attribute, including name, type, and value, are included in the message size restriction, which is currently 256 KB (262,144 bytes). For more information, see `Using Amazon SNS Message Attributes <http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html>`_.",
            "members": [
                {
                    "name": "DataType",
                    "shape": "String",
                    "documentation": "<p>Amazon SNS supports the following logical data types: String, Number, and Binary. For more information, see <a href=\"http://docs.aws.amazon.com/sns/latest/dg/SNSMessageAttributes.html#SNSMessageAttributes.DataTypes\">Message Attribute Data Types</a>.</p>"
                },
                {
                    "name": "StringValue",
                    "shape": "String",
                    "documentation": "<p>Strings are Unicode with UTF8 binary encoding. For a list of code values, see <a href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\">http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters</a>.</p>"
                },
                {
                    "name": "BinaryValue",
                    "shape": "Binary",
                    "documentation": "<p>Binary type attributes can store any binary data, for example, compressed data, encrypted data, or images.</p>"
                }
            ]
        },
        "NotFoundException": {
            "type": "structure",
            "documentation": "Indicates that the requested resource does not exist.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "PlatformApplication": {
            "type": "structure",
            "documentation": "Platform application object.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn for platform application object.</p>"
                },
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>Attributes for platform application object.</p>"
                }
            ]
        },
        "PlatformApplicationDisabledException": {
            "type": "structure",
            "documentation": "Exception error indicating platform application disabled.",
            "members": [
                {
                    "name": "message",
                    "shape": "string",
                    "documentation": "<p>Message for platform application disabled.</p>"
                }
            ]
        },
        "PublishInput": {
            "type": "structure",
            "documentation": "Input for Publish action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The topic you want to publish to.</p>"
                },
                {
                    "name": "TargetArn",
                    "shape": "String",
                    "documentation": "<p>Either TopicArn or EndpointArn, but not both.</p>"
                },
                {
                    "name": "Message",
                    "shape": "message",
                    "documentation": "<p>The message you want to send to the topic.</p> <p>If you want to send the same message to all transport protocols, include the text of the message as a String value.</p> <p>If you want to send different messages for each transport protocol, set the value of the <code>MessageStructure</code> parameter to <code>json</code> and use a JSON object for the <code>Message</code> parameter. See the Examples section for the format of the JSON object. </p> <p>Constraints: Messages must be UTF-8 encoded strings at most 256 KB in size (262144 bytes, not 262144 characters).</p> <p>JSON-specific constraints: <ul> <li>Keys in the JSON object that correspond to supported transport protocols must have simple JSON string values. </li> <li>The values will be parsed (unescaped) before they are used in outgoing messages.</li> <li>Outbound notifications are JSON encoded (meaning that the characters will be reescaped for sending).</li> <li>Values have a minimum length of 0 (the empty string, \"\", is allowed).</li> <li>Values have a maximum length bounded by the overall message size (so, including multiple protocols may limit message sizes).</li> <li>Non-string values will cause the key to be ignored.</li> <li>Keys that do not correspond to supported transport protocols are ignored.</li> <li>Duplicate keys are not allowed.</li> <li>Failure to parse or validate any key or value in the message will cause the <code>Publish</code> call to return an error (no partial delivery).</li> </ul> </p>"
                },
                {
                    "name": "Subject",
                    "shape": "subject",
                    "documentation": "<p>Optional parameter to be used as the \"Subject\" line when the message is delivered to email endpoints. This field will also be included, if present, in the standard JSON messages delivered to other endpoints.</p> <p>Constraints: Subjects must be ASCII text that begins with a letter, number, or punctuation mark; must not include line breaks or control characters; and must be less than 100 characters long.</p>"
                },
                {
                    "name": "MessageStructure",
                    "shape": "messageStructure",
                    "documentation": "<p>Set <code>MessageStructure</code> to <code>json</code> if you want to send a different message for each protocol. For example, using one publish action, you can send a short message to your SMS subscribers and a longer message to your email subscribers. If you set <code>MessageStructure</code> to <code>json</code>, the value of the <code>Message</code> parameter must: </p> <ul> <li>be a syntactically valid JSON object; and</li> <li>contain at least a top-level JSON key of \"default\" with a value that is a string.</li> </ul> <p> You can define other top-level keys that define the message you want to send to a specific transport protocol (e.g., \"http\"). </p> <p>For information about sending different messages for each protocol using the AWS Management Console, go to <a href=\"http://docs.aws.amazon.com/sns/latest/gsg/Publish.html#sns-message-formatting-by-protocol\">Create Different Messages for Each Protocol</a> in the <i>Amazon Simple Notification Service Getting Started Guide</i>. </p> <p>Valid value: <code>json</code></p>"
                },
                {
                    "name": "MessageAttributes",
                    "shape": "MessageAttributeMap",
                    "documentation": "<p>Message attributes for Publish action.</p>"
                }
            ]
        },
        "PublishResponse": {
            "type": "structure",
            "documentation": "Response for Publish action.",
            "members": [
                {
                    "name": "MessageId",
                    "shape": "messageId",
                    "documentation": "<p>Unique identifier assigned to the published message.</p> <p>Length Constraint: Maximum 100 characters</p>"
                }
            ]
        },
        "RemovePermissionInput": {
            "type": "structure",
            "documentation": "Input for RemovePermission action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic whose access control policy you wish to modify.</p>"
                },
                {
                    "name": "Label",
                    "shape": "label",
                    "documentation": "<p>The unique label of the statement you want to remove.</p>"
                }
            ]
        },
        "SetEndpointAttributesInput": {
            "type": "structure",
            "documentation": "Input for SetEndpointAttributes action.",
            "members": [
                {
                    "name": "EndpointArn",
                    "shape": "String",
                    "documentation": "<p>EndpointArn used for SetEndpointAttributes action.</p>"
                },
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>A map of the endpoint attributes. Attributes in this map include the following:</p> <ul> <li> <code>CustomUserData</code> -- arbitrary user data to associate with the endpoint. Amazon SNS does not use this data. The data must be in UTF-8 format and less than 2KB.</li> <li> <code>Enabled</code> -- flag that enables/disables delivery to the endpoint. Amazon SNS will set this to false when a notification service indicates to Amazon SNS that the endpoint is invalid. Users can set it back to true, typically after updating Token.</li> <li> <code>Token</code> -- device token, also referred to as a registration id, for an app and mobile device. This is returned from the notification service when an app and mobile device are registered with the notification service.</li> </ul>"
                }
            ]
        },
        "SetPlatformApplicationAttributesInput": {
            "type": "structure",
            "documentation": "Input for SetPlatformApplicationAttributes action.",
            "members": [
                {
                    "name": "PlatformApplicationArn",
                    "shape": "String",
                    "documentation": "<p>PlatformApplicationArn for SetPlatformApplicationAttributes action.</p>"
                },
                {
                    "name": "Attributes",
                    "shape": "MapStringToString",
                    "documentation": "<p>A map of the platform application attributes. Attributes in this map include the following:</p> <ul> <li> <code>PlatformCredential</code> -- The credential received from the notification service. For APNS/APNS_SANDBOX, PlatformCredential is \"private key\". For GCM, PlatformCredential is \"API key\". For ADM, PlatformCredential is \"client secret\".</li> <li> <code>PlatformPrincipal</code> -- The principal received from the notification service. For APNS/APNS_SANDBOX, PlatformPrincipal is \"SSL certificate\". For GCM, PlatformPrincipal is not applicable. For ADM, PlatformPrincipal is \"client id\".</li> <li> <code>EventEndpointCreated</code> -- Topic ARN to which EndpointCreated event notifications should be sent.</li> <li> <code>EventEndpointDeleted</code> -- Topic ARN to which EndpointDeleted event notifications should be sent.</li> <li> <code>EventEndpointUpdated</code> -- Topic ARN to which EndpointUpdate event notifications should be sent.</li> <li> <code>EventDeliveryFailure</code> -- Topic ARN to which DeliveryFailure event notifications should be sent upon Direct Publish delivery failure (permanent) to one of the application's endpoints.</li> </ul>"
                }
            ]
        },
        "SetSubscriptionAttributesInput": {
            "type": "structure",
            "documentation": "Input for SetSubscriptionAttributes action.",
            "members": [
                {
                    "name": "SubscriptionArn",
                    "shape": "subscriptionARN",
                    "documentation": "<p>The ARN of the subscription to modify.</p>"
                },
                {
                    "name": "AttributeName",
                    "shape": "attributeName",
                    "documentation": "<p>The name of the attribute you want to set. Only a subset of the subscriptions attributes are mutable.</p> <p>Valid values: <code>DeliveryPolicy</code> | <code>RawMessageDelivery</code></p>"
                },
                {
                    "name": "AttributeValue",
                    "shape": "attributeValue",
                    "documentation": "<p>The new value for the attribute in JSON format.</p>"
                }
            ]
        },
        "SetTopicAttributesInput": {
            "type": "structure",
            "documentation": "Input for SetTopicAttributes action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic to modify.</p>"
                },
                {
                    "name": "AttributeName",
                    "shape": "attributeName",
                    "documentation": "<p>The name of the attribute you want to set. Only a subset of the topic's attributes are mutable.</p> <p>Valid values: <code>Policy</code> | <code>DisplayName</code> | <code>DeliveryPolicy</code></p>"
                },
                {
                    "name": "AttributeValue",
                    "shape": "attributeValue",
                    "documentation": "<p>The new value for the attribute.</p>"
                }
            ]
        },
        "String": {
            "type": "string"
        },
        "SubscribeInput": {
            "type": "structure",
            "documentation": "Input for Subscribe action.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the topic you want to subscribe to.</p>"
                },
                {
                    "name": "Protocol",
                    "shape": "protocol",
                    "documentation": "<p>The protocol you want to use. Supported protocols include:</p> <ul> <li> <code>http</code> -- delivery of JSON-encoded message via HTTP POST</li> <li> <code>https</code> -- delivery of JSON-encoded message via HTTPS POST</li> <li> <code>email</code> -- delivery of message via SMTP</li> <li> <code>email-json</code> -- delivery of JSON-encoded message via SMTP</li> <li> <code>sms</code> -- delivery of message via SMS</li> <li> <code>sqs</code> -- delivery of JSON-encoded message to an Amazon SQS queue</li> <li> <code>application</code> -- delivery of JSON-encoded message to an EndpointArn for a mobile app and device.</li> </ul>"
                },
                {
                    "name": "Endpoint",
                    "shape": "endpoint",
                    "documentation": "<p>The endpoint that you want to receive notifications. Endpoints vary by protocol:</p> <ul> <li>For the <code>http</code> protocol, the endpoint is an URL beginning with \"http://\"</li> <li>For the <code>https</code> protocol, the endpoint is a URL beginning with \"https://\"</li> <li>For the <code>email</code> protocol, the endpoint is an email address</li> <li>For the <code>email-json</code> protocol, the endpoint is an email address</li> <li>For the <code>sms</code> protocol, the endpoint is a phone number of an SMS-enabled device</li> <li>For the <code>sqs</code> protocol, the endpoint is the ARN of an Amazon SQS queue</li> <li>For the <code>application</code> protocol, the endpoint is the EndpointArn of a mobile app and device.</li> </ul>"
                }
            ]
        },
        "SubscribeResponse": {
            "type": "structure",
            "documentation": "Response for Subscribe action.",
            "members": [
                {
                    "name": "SubscriptionArn",
                    "shape": "subscriptionARN",
                    "documentation": "<p>The ARN of the subscription, if the service was able to create a subscription immediately (without requiring endpoint owner confirmation).</p>"
                }
            ]
        },
        "Subscription": {
            "type": "structure",
            "documentation": "A wrapper type for the attributes of an Amazon SNS subscription.",
            "members": [
                {
                    "name": "SubscriptionArn",
                    "shape": "subscriptionARN",
                    "documentation": "<p>The subscription's ARN.</p>"
                },
                {
                    "name": "Owner",
                    "shape": "account",
                    "documentation": "<p>The subscription's owner.</p>"
                },
                {
                    "name": "Protocol",
                    "shape": "protocol",
                    "documentation": "<p>The subscription's protocol.</p>"
                },
                {
                    "name": "Endpoint",
                    "shape": "endpoint",
                    "documentation": "<p>The subscription's endpoint (format depends on the protocol).</p>"
                },
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The ARN of the subscription's topic.</p>"
                }
            ]
        },
        "SubscriptionAttributesMap": {
            "type": "map",
            "key": "attributeName",
            "value": "attributeValue"
        },
        "SubscriptionLimitExceededException": {
            "type": "structure",
            "documentation": "Indicates that the customer already owns the maximum allowed number of subscriptions.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "SubscriptionsList": {
            "type": "list",
            "of": "Subscription"
        },
        "Topic": {
            "type": "structure",
            "documentation": "A wrapper type for the topic's Amazon Resource Name (ARN). To retrieve a topic's attributes, use ``GetTopicAttributes``.",
            "members": [
                {
                    "name": "TopicArn",
                    "shape": "topicARN",
                    "documentation": "<p>The topic's ARN.</p>"
                }
            ]
        },
        "TopicAttributesMap": {
            "type": "map",
            "key": "attributeName",
            "value": "attributeValue"
        },
        "TopicLimitExceededException": {
            "type": "structure",
            "documentation": "Indicates that the customer already owns the maximum allowed number of topics.",
            "members": [
                {
                    "name": "message",
                    "shape": "string"
                }
            ]
        },
        "TopicsList": {
            "type": "list",
            "of": "Topic"
        },
        "UnsubscribeInput": {
            "type": "structure",
            "documentation": "Input for Unsubscribe action.",
            "members": [
                {
                    "name": "SubscriptionArn",
                    "shape": "subscriptionARN",
                    "documentation": "<p>The ARN of the subscription to be deleted.</p>"
                }
            ]
        },
        "account": {
            "type": "string"
        },
        "action": {
            "type": "string"
        },
        "attributeName": {
            "type": "string"
        },
        "attributeValue": {
            "type": "string"
        },
        "authenticateOnUnsubscribe": {
            "type": "string"
        },
        "delegate": {
            "type": "string"
        },
        "endpoint": {
            "type": "string"
        },
        "label": {
            "type": "string"
        },
        "message": {
            "type": "string"
        },
        "messageId": {
            "type": "string"
        },
        "messageStructure": {
            "type": "string"
        },
        "nextToken": {
            "type": "string"
        },
        "protocol": {
            "type": "string"
        },
        "string": {
            "type": "string"
        },
        "subject": {
            "type": "string"
        },
        "subscriptionARN": {
            "type": "string"
        },
        "token": {
            "type": "string"
        },
        "topicARN": {
            "type": "string"
        },
        "topicName": {
            "type": "string"
        }
    }
}