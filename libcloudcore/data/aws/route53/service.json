{
    "metadata": {},
    "operations": {
        "AssociateVPCWithHostedZone": {
            "documentation": "<p> This action associates a VPC with an hosted zone. </p> <p> To associate a VPC with an hosted zone, send a <code>POST</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i>/associatevpc</code> resource. The request body must include an XML document with a <code>AssociateVPCWithHostedZoneRequest</code> element. The response returns the <code>AssociateVPCWithHostedZoneResponse</code> element that contains <code>ChangeInfo</code> for you to track the progress of the <code>AssociateVPCWithHostedZoneRequest</code> you made. See <code>GetChange</code> operation for how to track the progress of your change.</p>",
            "input": {
                "shape": "AssociateVPCWithHostedZoneRequest"
            },
            "output": {
                "shape": "AssociateVPCWithHostedZoneResponse"
            }
        },
        "ChangeResourceRecordSets": {
            "documentation": "<p>Use this action to create or change your authoritative DNS information. To use this action, send a <code>POST</code> request to the <code>2013-04-01/hostedzone/<i>hosted Zone ID</i>/rrset</code> resource. The request body must include an XML document with a <code>ChangeResourceRecordSetsRequest</code> element.</p> <p>Changes are a list of change items and are considered transactional. For more information on transactional changes, also known as change batches, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/RRSchanges.html#RRSchanges_API\">Creating, Changing, and Deleting Resource Record Sets Using the Route 53 API</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <important>Due to the nature of transactional changes, you cannot delete the same resource record set more than once in a single change batch. If you attempt to delete the same change batch more than once, Route 53 returns an <code>InvalidChangeBatch</code> error.</important> <p>In response to a <code>ChangeResourceRecordSets</code> request, your DNS data is changed on all Route 53 DNS servers. Initially, the status of a change is <code>PENDING</code>. This means the change has not yet propagated to all the authoritative Route 53 DNS servers. When the change is propagated to all hosts, the change returns a status of <code>INSYNC</code>.</p> <p>Note the following limitations on a <code>ChangeResourceRecordSets</code> request:</p> <p>- A request cannot contain more than 100 Change elements.</p> <p>- A request cannot contain more than 1000 ResourceRecord elements.</p> <p>The sum of the number of characters (including spaces) in all <code>Value</code> elements in a request cannot exceed 32,000 characters.</p>",
            "input": {
                "shape": "ChangeResourceRecordSetsRequest"
            },
            "output": {
                "shape": "ChangeResourceRecordSetsResponse"
            }
        },
        "ChangeTagsForResource": {
            "documentation": "",
            "input": {
                "shape": "ChangeTagsForResourceRequest"
            },
            "output": {
                "shape": "ChangeTagsForResourceResponse"
            }
        },
        "CreateHealthCheck": {
            "documentation": "<p> This action creates a new health check.</p> <p> To create a new health check, send a <code>POST</code> request to the <code>2013-04-01/healthcheck</code> resource. The request body must include an XML document with a <code>CreateHealthCheckRequest</code> element. The response returns the <code>CreateHealthCheckResponse</code> element that contains metadata about the health check.</p>",
            "input": {
                "shape": "CreateHealthCheckRequest"
            },
            "output": {
                "shape": "CreateHealthCheckResponse"
            }
        },
        "CreateHostedZone": {
            "documentation": "<p> This action creates a new hosted zone.</p> <p>To create a new hosted zone, send a <code>POST</code> request to the <code>2013-04-01/hostedzone</code> resource. The request body must include an XML document with a <code>CreateHostedZoneRequest</code> element. The response returns the <code>CreateHostedZoneResponse</code> element that contains metadata about the hosted zone.</p> <p>Route 53 automatically creates a default SOA record and four NS records for the zone. The NS records in the hosted zone are the name servers you give your registrar to delegate your domain to. For more information about SOA and NS records, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html\">NS and SOA Records that Route 53 Creates for a Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>When you create a zone, its initial status is <code>PENDING</code>. This means that it is not yet available on all DNS servers. The status of the zone changes to <code>INSYNC</code> when the NS and SOA records are available on all Route 53 DNS servers. </p> <p>When trying to create a hosted zone using a reusable delegation set, you could specify an optional DelegationSetId, and Route53 would assign those 4 NS records for the zone, instead of alloting a new one.</p>",
            "input": {
                "shape": "CreateHostedZoneRequest"
            },
            "output": {
                "shape": "CreateHostedZoneResponse"
            }
        },
        "CreateReusableDelegationSet": {
            "documentation": "<p> This action creates a reusable delegationSet.</p> <p> To create a new reusable delegationSet, send a <code>POST</code> request to the <code>2013-04-01/delegationset</code> resource. The request body must include an XML document with a <code>CreateReusableDelegationSetRequest</code> element. The response returns the <code>CreateReusableDelegationSetResponse</code> element that contains metadata about the delegationSet. </p> <p> If the optional parameter HostedZoneId is specified, it marks the delegationSet associated with that particular hosted zone as reusable. </p>",
            "input": {
                "shape": "CreateReusableDelegationSetRequest"
            },
            "output": {
                "shape": "CreateReusableDelegationSetResponse"
            }
        },
        "DeleteHealthCheck": {
            "documentation": "<p>This action deletes a health check. To delete a health check, send a <code>DELETE</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i></code> resource.</p> <important> You can delete a health check only if there are no resource record sets associated with this health check. If resource record sets are associated with this health check, you must disassociate them before you can delete your health check. If you try to delete a health check that is associated with resource record sets, Route 53 will deny your request with a <code>HealthCheckInUse</code> error. For information about disassociating the records from your health check, see <a>ChangeResourceRecordSets</a>.</important>",
            "input": {
                "shape": "DeleteHealthCheckRequest"
            },
            "output": {
                "shape": "DeleteHealthCheckResponse"
            }
        },
        "DeleteHostedZone": {
            "documentation": "<p>This action deletes a hosted zone. To delete a hosted zone, send a <code>DELETE</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i></code> resource.</p> <p>For more information about deleting a hosted zone, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DeleteHostedZone.html\">Deleting a Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <important> You can delete a hosted zone only if there are no resource record sets other than the default SOA record and NS resource record sets. If your hosted zone contains other resource record sets, you must delete them before you can delete your hosted zone. If you try to delete a hosted zone that contains other resource record sets, Route 53 will deny your request with a <code>HostedZoneNotEmpty</code> error. For information about deleting records from your hosted zone, see <a>ChangeResourceRecordSets</a>.</important>",
            "input": {
                "shape": "DeleteHostedZoneRequest"
            },
            "output": {
                "shape": "DeleteHostedZoneResponse"
            }
        },
        "DeleteReusableDelegationSet": {
            "documentation": "<p>This action deletes a reusable delegation set. To delete a reusable delegation set, send a <code>DELETE</code> request to the <code>2013-04-01/delegationset/<i>delegation set ID</i></code> resource.</p> <important> You can delete a reusable delegation set only if there are no associated hosted zones. If your reusable delegation set contains associated hosted zones, you must delete them before you can delete your reusable delegation set. If you try to delete a reusable delegation set that contains associated hosted zones, Route 53 will deny your request with a <code>DelegationSetInUse</code> error.</important>",
            "input": {
                "shape": "DeleteReusableDelegationSetRequest"
            },
            "output": {
                "shape": "DeleteReusableDelegationSetResponse"
            }
        },
        "DisassociateVPCFromHostedZone": {
            "documentation": "<p> This action disassociates a VPC from an hosted zone. </p> <p> To disassociate a VPC to a hosted zone, send a <code>POST</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i>/disassociatevpc</code> resource. The request body must include an XML document with a <code>DisassociateVPCFromHostedZoneRequest</code> element. The response returns the <code>DisassociateVPCFromHostedZoneResponse</code> element that contains <code>ChangeInfo</code> for you to track the progress of the <code>DisassociateVPCFromHostedZoneRequest</code> you made. See <code>GetChange</code> operation for how to track the progress of your change.</p>",
            "input": {
                "shape": "DisassociateVPCFromHostedZoneRequest"
            },
            "output": {
                "shape": "DisassociateVPCFromHostedZoneResponse"
            }
        },
        "GetChange": {
            "documentation": "<p> This action returns the current status of a change batch request. The status is one of the following values:</p> <p>- <code>PENDING</code> indicates that the changes in this request have not replicated to all Route 53 DNS servers. This is the initial status of all change batch requests.</p> <p>- <code>INSYNC</code> indicates that the changes have replicated to all Amazon Route 53 DNS servers. </p>",
            "input": {
                "shape": "GetChangeRequest"
            },
            "output": {
                "shape": "GetChangeResponse"
            }
        },
        "GetCheckerIpRanges": {
            "documentation": "<p> To retrieve a list of the IP ranges used by Amazon Route 53 health checkers to check the health of your resources, send a <code>GET</code> request to the <code>2013-04-01/checkeripranges</code> resource. You can use these IP addresses to configure router and firewall rules to allow health checkers to check the health of your resources.</p>",
            "input": {
                "shape": "GetCheckerIpRangesRequest"
            },
            "output": {
                "shape": "GetCheckerIpRangesResponse"
            }
        },
        "GetGeoLocation": {
            "documentation": "<p> To retrieve a single geo location, send a <code>GET</code> request to the <code>2013-04-01/geolocation</code> resource with one of these options: continentcode | countrycode | countrycode and subdivisioncode.</p>",
            "input": {
                "shape": "GetGeoLocationRequest"
            },
            "output": {
                "shape": "GetGeoLocationResponse"
            }
        },
        "GetHealthCheck": {
            "documentation": "<p> To retrieve the health check, send a <code>GET</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i></code> resource. </p>",
            "input": {
                "shape": "GetHealthCheckRequest"
            },
            "output": {
                "shape": "GetHealthCheckResponse"
            }
        },
        "GetHealthCheckCount": {
            "documentation": "<p> To retrieve a count of all your health checks, send a <code>GET</code> request to the <code>2013-04-01/healthcheckcount</code> resource.</p>",
            "input": {
                "shape": "GetHealthCheckCountRequest"
            },
            "output": {
                "shape": "GetHealthCheckCountResponse"
            }
        },
        "GetHealthCheckLastFailureReason": {
            "documentation": "<p>If you want to learn why a health check is currently failing or why it failed most recently (if at all), you can get the failure reason for the most recent failure. Send a <code>GET</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i>/lastfailurereason</code> resource.</p>",
            "input": {
                "shape": "GetHealthCheckLastFailureReasonRequest"
            },
            "output": {
                "shape": "GetHealthCheckLastFailureReasonResponse"
            }
        },
        "GetHealthCheckStatus": {
            "documentation": "<p> To retrieve the health check status, send a <code>GET</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i>/status</code> resource. You can use this call to get a health check's current status. </p>",
            "input": {
                "shape": "GetHealthCheckStatusRequest"
            },
            "output": {
                "shape": "GetHealthCheckStatusResponse"
            }
        },
        "GetHostedZone": {
            "documentation": "<p> To retrieve the delegation set for a hosted zone, send a <code>GET</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i></code> resource. The delegation set is the four Route 53 name servers that were assigned to the hosted zone when you created it.</p>",
            "input": {
                "shape": "GetHostedZoneRequest"
            },
            "output": {
                "shape": "GetHostedZoneResponse"
            }
        },
        "GetHostedZoneCount": {
            "documentation": "<p> To retrieve a count of all your hosted zones, send a <code>GET</code> request to the <code>2013-04-01/hostedzonecount</code> resource.</p>",
            "input": {
                "shape": "GetHostedZoneCountRequest"
            },
            "output": {
                "shape": "GetHostedZoneCountResponse"
            }
        },
        "GetReusableDelegationSet": {
            "documentation": "<p> To retrieve the reusable delegation set, send a <code>GET</code> request to the <code>2013-04-01/delegationset/<i>delegation set ID</i></code> resource.</p>",
            "input": {
                "shape": "GetReusableDelegationSetRequest"
            },
            "output": {
                "shape": "GetReusableDelegationSetResponse"
            }
        },
        "ListGeoLocations": {
            "documentation": "<p> To retrieve a list of supported geo locations, send a <code>GET</code> request to the <code>2013-04-01/geolocations</code> resource. The response to this request includes a <code>GeoLocationDetailsList</code> element with zero, one, or multiple <code>GeoLocationDetails</code> child elements. The list is sorted by country code, and then subdivision code, followed by continents at the end of the list. </p> <p> By default, the list of geo locations is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. If the list is truncated, <code>IsTruncated</code> will be set to <i>true</i> and a combination of <code>NextContinentCode, NextCountryCode, NextSubdivisionCode</code> will be populated. You can pass these as parameters to <code>StartContinentCode, StartCountryCode, StartSubdivisionCode</code> to control the geo location that the list begins with. </p>",
            "input": {
                "shape": "ListGeoLocationsRequest"
            },
            "output": {
                "shape": "ListGeoLocationsResponse"
            }
        },
        "ListHealthChecks": {
            "documentation": "<p> To retrieve a list of your health checks, send a <code>GET</code> request to the <code>2013-04-01/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero, one, or multiple <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with. </p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>",
            "input": {
                "shape": "ListHealthChecksRequest"
            },
            "output": {
                "shape": "ListHealthChecksResponse"
            }
        },
        "ListHostedZones": {
            "documentation": "<p> To retrieve a list of your hosted zones, send a <code>GET</code> request to the <code>2013-04-01/hostedzone</code> resource. The response to this request includes a <code>HostedZones</code> element with zero, one, or multiple <code>HostedZone</code> child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the hosted zone that the list begins with. </p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>",
            "input": {
                "shape": "ListHostedZonesRequest"
            },
            "output": {
                "shape": "ListHostedZonesResponse"
            }
        },
        "ListHostedZonesByName": {
            "documentation": "<p> To retrieve a list of your hosted zones in lexicographic order, send a <code>GET</code> request to the <code>2013-04-01/hostedzonesbyname</code> resource. The response to this request includes a <code>HostedZones</code> element with zero or more <code>HostedZone</code> child elements lexicographically ordered by DNS name. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>DNSName</code> and <code>HostedZoneId</code> parameters to control the hosted zone that the list begins with.</p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>",
            "input": {
                "shape": "ListHostedZonesByNameRequest"
            },
            "output": {
                "shape": "ListHostedZonesByNameResponse"
            }
        },
        "ListResourceRecordSets": {
            "documentation": "<p>Imagine all the resource record sets in a zone listed out in front of you. Imagine them sorted lexicographically first by DNS name (with the labels reversed, like \"com.amazon.www\" for example), and secondarily, lexicographically by record type. This operation retrieves at most MaxItems resource record sets from this list, in order, starting at a position specified by the Name and Type arguments:</p> <ul> <li>If both Name and Type are omitted, this means start the results at the first RRSET in the HostedZone.</li> <li>If Name is specified but Type is omitted, this means start the results at the first RRSET in the list whose name is greater than or equal to Name. </li> <li>If both Name and Type are specified, this means start the results at the first RRSET in the list whose name is greater than or equal to Name and whose type is greater than or equal to Type.</li> <li>It is an error to specify the Type but not the Name.</li> </ul> <p>Use ListResourceRecordSets to retrieve a single known record set by specifying the record set's name and type, and setting MaxItems = 1</p> <p>To retrieve all the records in a HostedZone, first pause any processes making calls to ChangeResourceRecordSets. Initially call ListResourceRecordSets without a Name and Type to get the first page of record sets. For subsequent calls, set Name and Type to the NextName and NextType values returned by the previous response. </p> <p>In the presence of concurrent ChangeResourceRecordSets calls, there is no consistency of results across calls to ListResourceRecordSets. The only way to get a consistent multi-page snapshot of all RRSETs in a zone is to stop making changes while pagination is in progress.</p> <p>However, the results from ListResourceRecordSets are consistent within a page. If MakeChange calls are taking place concurrently, the result of each one will either be completely visible in your results or not at all. You will not see partial changes, or changes that do not ultimately succeed. (This follows from the fact that MakeChange is atomic) </p> <p>The results from ListResourceRecordSets are strongly consistent with ChangeResourceRecordSets. To be precise, if a single process makes a call to ChangeResourceRecordSets and receives a successful response, the effects of that change will be visible in a subsequent call to ListResourceRecordSets by that process.</p>",
            "input": {
                "shape": "ListResourceRecordSetsRequest"
            },
            "output": {
                "shape": "ListResourceRecordSetsResponse"
            }
        },
        "ListReusableDelegationSets": {
            "documentation": "<p> To retrieve a list of your reusable delegation sets, send a <code>GET</code> request to the <code>2013-04-01/delegationset</code> resource. The response to this request includes a <code>DelegationSets</code> element with zero, one, or multiple <code>DelegationSet</code> child elements. By default, the list of delegation sets is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the delegation set that the list begins with. </p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>",
            "input": {
                "shape": "ListReusableDelegationSetsRequest"
            },
            "output": {
                "shape": "ListReusableDelegationSetsResponse"
            }
        },
        "ListTagsForResource": {
            "documentation": "",
            "input": {
                "shape": "ListTagsForResourceRequest"
            },
            "output": {
                "shape": "ListTagsForResourceResponse"
            }
        },
        "ListTagsForResources": {
            "documentation": "",
            "input": {
                "shape": "ListTagsForResourcesRequest"
            },
            "output": {
                "shape": "ListTagsForResourcesResponse"
            }
        },
        "UpdateHealthCheck": {
            "documentation": "<p> This action updates an existing health check.</p> <p> To update a health check, send a <code>POST</code> request to the <code>2013-04-01/healthcheck/<i>health check ID</i></code> resource. The request body must include an XML document with an <code>UpdateHealthCheckRequest</code> element. The response returns an <code>UpdateHealthCheckResponse</code> element, which contains metadata about the health check.</p>",
            "input": {
                "shape": "UpdateHealthCheckRequest"
            },
            "output": {
                "shape": "UpdateHealthCheckResponse"
            }
        },
        "UpdateHostedZoneComment": {
            "documentation": "<p> To update the hosted zone comment, send a <code>POST</code> request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i></code> resource. The request body must include an XML document with a <code>UpdateHostedZoneCommentRequest</code> element. The response to this request includes the modified <code>HostedZone</code> element.</p> <note> The comment can have a maximum length of 256 characters.</note>",
            "input": {
                "shape": "UpdateHostedZoneCommentRequest"
            },
            "output": {
                "shape": "UpdateHostedZoneCommentResponse"
            }
        }
    },
    "shapes": {
        "AliasHealthEnabled": {
            "type": "boolean"
        },
        "AliasTarget": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "documentation": "<p><i>Alias resource record sets only:</i> The value of the hosted zone ID for the AWS resource.</p> <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>."
                },
                {
                    "name": "DNSName",
                    "shape": "DNSName",
                    "documentation": "<p><i>Alias resource record sets only:</i> The external DNS name associated with the AWS Resource.</p> <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>."
                },
                {
                    "name": "EvaluateTargetHealth",
                    "shape": "AliasHealthEnabled",
                    "documentation": "<p><i>Alias resource record sets only:</i> A boolean value that indicates whether this Resource Record Set should respect the health status of any health checks associated with the ALIAS target record which it is linked to.</p> <p>For more information and an example, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingAliasRRSets.html\">Creating Alias Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p>."
                }
            ]
        },
        "AssociateVPCComment": {
            "type": "string"
        },
        "AssociateVPCWithHostedZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the hosted zone you want to associate your VPC with.</p> <p>Note that you cannot associate a VPC with a hosted zone that doesn't have an existing VPC association.</p>"
                },
                {
                    "name": "VPC",
                    "shape": "VPC",
                    "documentation": "<p>The VPC that you want your hosted zone to be associated with. </p>"
                },
                {
                    "name": "Comment",
                    "shape": "AssociateVPCComment",
                    "documentation": "<p><i>Optional:</i> Any comments you want to include about a <code>AssociateVPCWithHostedZoneRequest</code>.</p>"
                }
            ]
        },
        "AssociateVPCWithHostedZoneResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ChangeInfo",
                    "shape": "ChangeInfo",
                    "documentation": "<p>A complex type that contains the ID, the status, and the date and time of your <code>AssociateVPCWithHostedZoneRequest</code>.</p>"
                }
            ]
        },
        "Change": {
            "type": "structure",
            "members": [
                {
                    "name": "Action",
                    "shape": "ChangeAction",
                    "documentation": "<p>The action to perform.</p> <p>Valid values: <code>CREATE</code> | <code>DELETE</code> | <code>UPSERT</code></p>"
                },
                {
                    "name": "ResourceRecordSet",
                    "shape": "ResourceRecordSet",
                    "documentation": "<p>Information about the resource record set to create or delete.</p>"
                }
            ]
        },
        "ChangeAction": {
            "type": "string"
        },
        "ChangeBatch": {
            "type": "structure",
            "members": [
                {
                    "name": "Comment",
                    "shape": "ResourceDescription",
                    "documentation": "<p><i>Optional:</i> Any comments you want to include about a change batch request.</p>"
                },
                {
                    "name": "Changes",
                    "shape": "Changes",
                    "documentation": "<p>A complex type that contains one <code>Change</code> element for each resource record set that you want to create or delete.</p>"
                }
            ]
        },
        "ChangeInfo": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "documentation": "<p>The ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.</p>"
                },
                {
                    "name": "Status",
                    "shape": "ChangeStatus",
                    "documentation": "<p>The current state of the request. <code>PENDING</code> indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.</p> <p>Valid Values: <code>PENDING</code> | <code>INSYNC</code></p>"
                },
                {
                    "name": "SubmittedAt",
                    "shape": "TimeStamp",
                    "documentation": "<p>The date and time the change was submitted, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.</p>"
                },
                {
                    "name": "Comment",
                    "shape": "ResourceDescription",
                    "documentation": "<p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>"
                }
            ]
        },
        "ChangeResourceRecordSetsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the hosted zone that contains the resource record sets that you want to change.</p>"
                },
                {
                    "name": "ChangeBatch",
                    "shape": "ChangeBatch",
                    "documentation": "<p>A complex type that contains an optional comment and the <code>Changes</code> element.</p>"
                }
            ]
        },
        "ChangeResourceRecordSetsResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ChangeInfo",
                    "shape": "ChangeInfo",
                    "documentation": "<p>A complex type that contains information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <a>GetChange</a> action to get detailed information about the change.</p>"
                }
            ]
        },
        "ChangeStatus": {
            "type": "string"
        },
        "ChangeTagsForResourceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceType",
                    "shape": "TagResourceType",
                    "location": "uri",
                    "locationName": "ResourceType",
                    "documentation": "<p>The type of the resource.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>"
                },
                {
                    "name": "ResourceId",
                    "shape": "TagResourceId",
                    "location": "uri",
                    "locationName": "ResourceId",
                    "documentation": "<p>The ID of the resource for which you want to add, change, or delete tags.</p>"
                },
                {
                    "name": "AddTags",
                    "shape": "TagList",
                    "documentation": "<p>A complex type that contains a list of <code>Tag</code> elements. Each <code>Tag</code> element identifies a tag that you want to add or update for the specified resource.</p>"
                },
                {
                    "name": "RemoveTagKeys",
                    "shape": "TagKeyList",
                    "documentation": "<p>A list of <code>Tag</code> keys that you want to remove from the specified resource.</p>"
                }
            ]
        },
        "ChangeTagsForResourceResponse": {
            "type": "structure",
            "members": []
        },
        "Changes": {
            "type": "list"
        },
        "CheckerIpRanges": {
            "type": "list"
        },
        "ConflictingDomainExists": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "CreateHealthCheckRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "CallerReference",
                    "shape": "HealthCheckNonce",
                    "documentation": "<p>A unique string that identifies the request and that allows failed <code>CreateHealthCheck</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a health check. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project.</p> <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
                },
                {
                    "name": "HealthCheckConfig",
                    "shape": "HealthCheckConfig",
                    "documentation": "<p>A complex type that contains health check configuration.</p>"
                }
            ]
        },
        "CreateHealthCheckResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheck",
                    "shape": "HealthCheck",
                    "documentation": "<p>A complex type that contains identifying information about the health check.</p>"
                },
                {
                    "name": "Location",
                    "shape": "ResourceURI",
                    "location": "header",
                    "locationName": "Location",
                    "documentation": "<p>The unique URL representing the new health check.</p>"
                }
            ]
        },
        "CreateHostedZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "DNSName",
                    "documentation": "<p>The name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.</p> <p>This is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of <code>NameServers</code> elements returned in <code>DelegationSet</code>.</p>"
                },
                {
                    "name": "VPC",
                    "shape": "VPC",
                    "documentation": "<p>The VPC that you want your hosted zone to be associated with. By providing this parameter, your newly created hosted cannot be resolved anywhere other than the given VPC.</p>"
                },
                {
                    "name": "CallerReference",
                    "shape": "Nonce",
                    "documentation": "<p>A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a hosted zone. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project, such as <code>DNSMigration_01</code>.</p> <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
                },
                {
                    "name": "HostedZoneConfig",
                    "shape": "HostedZoneConfig",
                    "documentation": "<p>A complex type that contains an optional comment about your hosted zone.</p>"
                },
                {
                    "name": "DelegationSetId",
                    "shape": "ResourceId",
                    "documentation": "<p>The delegation set id of the reusable delgation set whose NS records you want to assign to the new hosted zone.</p>"
                }
            ]
        },
        "CreateHostedZoneResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZone",
                    "shape": "HostedZone",
                    "documentation": "<p>A complex type that contains identifying information about the hosted zone.</p>"
                },
                {
                    "name": "ChangeInfo",
                    "shape": "ChangeInfo",
                    "documentation": "<p>A complex type that contains information about the request to create a hosted zone. This includes an ID that you use when you call the <a>GetChange</a> action to get the current status of the change request.</p>"
                },
                {
                    "name": "DelegationSet",
                    "shape": "DelegationSet",
                    "documentation": "<p>A complex type that contains name server information.</p>"
                },
                {
                    "name": "VPC",
                    "shape": "VPC"
                },
                {
                    "name": "Location",
                    "shape": "ResourceURI",
                    "location": "header",
                    "locationName": "Location",
                    "documentation": "<p>The unique URL representing the new hosted zone.</p>"
                }
            ]
        },
        "CreateReusableDelegationSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "CallerReference",
                    "shape": "Nonce",
                    "documentation": "<p>A unique string that identifies the request and that allows failed <code>CreateReusableDelegationSet</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a reusable delegation set. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project, such as <code>DNSMigration_01</code>.</p> <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
                },
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "documentation": "<p>The ID of the hosted zone whose delegation set you want to mark as reusable. It is an optional parameter.</p>"
                }
            ]
        },
        "CreateReusableDelegationSetResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "DelegationSet",
                    "shape": "DelegationSet",
                    "documentation": "<p>A complex type that contains name server information.</p>"
                },
                {
                    "name": "Location",
                    "shape": "ResourceURI",
                    "location": "header",
                    "locationName": "Location",
                    "documentation": "<p>The unique URL representing the new reusbale delegation set.</p>"
                }
            ]
        },
        "DNSName": {
            "type": "string"
        },
        "DelegationSet": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId"
                },
                {
                    "name": "CallerReference",
                    "shape": "Nonce"
                },
                {
                    "name": "NameServers",
                    "shape": "DelegationSetNameServers",
                    "documentation": "<p>A complex type that contains the authoritative name servers for the hosted zone. Use the method provided by your domain registrar to add an NS record to your domain for each <code>NameServer</code> that is assigned to your hosted zone.</p>"
                }
            ]
        },
        "DelegationSetAlreadyCreated": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "DelegationSetAlreadyReusable": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "DelegationSetInUse": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "DelegationSetNameServers": {
            "type": "list"
        },
        "DelegationSetNotAvailable": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "DelegationSetNotReusable": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "DelegationSets": {
            "type": "list"
        },
        "DeleteHealthCheckRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckId",
                    "shape": "HealthCheckId",
                    "location": "uri",
                    "locationName": "HealthCheckId",
                    "documentation": "<p>The ID of the health check to delete.</p>"
                }
            ]
        },
        "DeleteHealthCheckResponse": {
            "type": "structure",
            "members": []
        },
        "DeleteHostedZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the hosted zone you want to delete.</p>"
                }
            ]
        },
        "DeleteHostedZoneResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ChangeInfo",
                    "shape": "ChangeInfo",
                    "documentation": "<p>A complex type that contains the ID, the status, and the date and time of your delete request.</p>"
                }
            ]
        },
        "DeleteReusableDelegationSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the reusable delegation set you want to delete.</p>"
                }
            ]
        },
        "DeleteReusableDelegationSetResponse": {
            "type": "structure",
            "members": []
        },
        "DisassociateVPCComment": {
            "type": "string"
        },
        "DisassociateVPCFromHostedZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the hosted zone you want to disassociate your VPC from.</p> <p>Note that you cannot disassociate the last VPC from a hosted zone.</p>"
                },
                {
                    "name": "VPC",
                    "shape": "VPC",
                    "documentation": "<p>The VPC that you want your hosted zone to be disassociated from. </p>"
                },
                {
                    "name": "Comment",
                    "shape": "DisassociateVPCComment",
                    "documentation": "<p><i>Optional:</i> Any comments you want to include about a <code>DisassociateVPCFromHostedZoneRequest</code>.</p>"
                }
            ]
        },
        "DisassociateVPCFromHostedZoneResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ChangeInfo",
                    "shape": "ChangeInfo",
                    "documentation": "<p>A complex type that contains the ID, the status, and the date and time of your <code>DisassociateVPCFromHostedZoneRequest</code>.</p>"
                }
            ]
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ErrorMessages": {
            "type": "list"
        },
        "FailureThreshold": {
            "type": "integer"
        },
        "FullyQualifiedDomainName": {
            "type": "string"
        },
        "GeoLocation": {
            "type": "structure",
            "members": [
                {
                    "name": "ContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "documentation": "<p>The code for a continent geo location. Note: only continent locations have a continent code.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code></p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <a>InvalidInput</a> error.</p>"
                },
                {
                    "name": "CountryCode",
                    "shape": "GeoLocationCountryCode",
                    "documentation": "<p>The code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>"
                },
                {
                    "name": "SubdivisionCode",
                    "shape": "GeoLocationSubdivisionCode",
                    "documentation": "<p>The code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.</p> <p>Constraint: Specifying <code>SubdivisionCode</code> without <code>CountryCode</code> returns an <a>InvalidInput</a> error.</p>"
                }
            ]
        },
        "GeoLocationContinentCode": {
            "type": "string"
        },
        "GeoLocationContinentName": {
            "type": "string"
        },
        "GeoLocationCountryCode": {
            "type": "string"
        },
        "GeoLocationCountryName": {
            "type": "string"
        },
        "GeoLocationDetails": {
            "type": "structure",
            "members": [
                {
                    "name": "ContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "documentation": "<p>The code for a continent geo location. Note: only continent locations have a continent code.</p>"
                },
                {
                    "name": "ContinentName",
                    "shape": "GeoLocationContinentName",
                    "documentation": "<p>The name of the continent. This element is only present if <code>ContinentCode</code> is also present.</p>"
                },
                {
                    "name": "CountryCode",
                    "shape": "GeoLocationCountryCode",
                    "documentation": "<p>The code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>"
                },
                {
                    "name": "CountryName",
                    "shape": "GeoLocationCountryName",
                    "documentation": "<p>The name of the country. This element is only present if <code>CountryCode</code> is also present.</p>"
                },
                {
                    "name": "SubdivisionCode",
                    "shape": "GeoLocationSubdivisionCode",
                    "documentation": "<p>The code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.</p>"
                },
                {
                    "name": "SubdivisionName",
                    "shape": "GeoLocationSubdivisionName",
                    "documentation": "<p>The name of the subdivision. This element is only present if <code>SubdivisionCode</code> is also present.</p>"
                }
            ]
        },
        "GeoLocationDetailsList": {
            "type": "list"
        },
        "GeoLocationSubdivisionCode": {
            "type": "string"
        },
        "GeoLocationSubdivisionName": {
            "type": "string"
        },
        "GetChangeRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the change batch request. The value that you specify here is the value that <code>ChangeResourceRecordSets</code> returned in the Id element when you submitted the request.</p>"
                }
            ]
        },
        "GetChangeResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ChangeInfo",
                    "shape": "ChangeInfo",
                    "documentation": "<p>A complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.</p>"
                }
            ]
        },
        "GetCheckerIpRangesRequest": {
            "type": "structure",
            "members": []
        },
        "GetCheckerIpRangesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "CheckerIpRanges",
                    "shape": "CheckerIpRanges",
                    "documentation": "<p>A complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.</p>"
                }
            ]
        },
        "GetGeoLocationRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "location": "querystring",
                    "locationName": "continentcode",
                    "documentation": "<p>The code for a continent geo location. Note: only continent locations have a continent code.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code></p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <a>InvalidInput</a> error.</p>"
                },
                {
                    "name": "CountryCode",
                    "shape": "GeoLocationCountryCode",
                    "location": "querystring",
                    "locationName": "countrycode",
                    "documentation": "<p>The code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>"
                },
                {
                    "name": "SubdivisionCode",
                    "shape": "GeoLocationSubdivisionCode",
                    "location": "querystring",
                    "locationName": "subdivisioncode",
                    "documentation": "<p>The code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.</p> <p>Constraint: Specifying <code>SubdivisionCode</code> without <code>CountryCode</code> returns an <a>InvalidInput</a> error.</p>"
                }
            ]
        },
        "GetGeoLocationResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "GeoLocationDetails",
                    "shape": "GeoLocationDetails",
                    "documentation": "<p>A complex type that contains the information about the specified geo location.</p>"
                }
            ]
        },
        "GetHealthCheckCountRequest": {
            "type": "structure",
            "members": []
        },
        "GetHealthCheckCountResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckCount",
                    "shape": "HealthCheckCount",
                    "documentation": "<p> The number of health checks associated with the current AWS account.</p>"
                }
            ]
        },
        "GetHealthCheckLastFailureReasonRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckId",
                    "shape": "HealthCheckId",
                    "location": "uri",
                    "locationName": "HealthCheckId",
                    "documentation": "<p>The ID of the health check for which you want to retrieve the reason for the most recent failure.</p>"
                }
            ]
        },
        "GetHealthCheckLastFailureReasonResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckObservations",
                    "shape": "HealthCheckObservations",
                    "documentation": "<p>A list that contains one <code>HealthCheckObservation</code> element for each Route 53 health checker.</p>"
                }
            ]
        },
        "GetHealthCheckRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckId",
                    "shape": "HealthCheckId",
                    "location": "uri",
                    "locationName": "HealthCheckId",
                    "documentation": "<p>The ID of the health check to retrieve.</p>"
                }
            ]
        },
        "GetHealthCheckResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheck",
                    "shape": "HealthCheck",
                    "documentation": "<p>A complex type that contains the information about the specified health check.</p>"
                }
            ]
        },
        "GetHealthCheckStatusRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckId",
                    "shape": "HealthCheckId",
                    "location": "uri",
                    "locationName": "HealthCheckId",
                    "documentation": "<p>The ID of the health check for which you want to retrieve the most recent status.</p>"
                }
            ]
        },
        "GetHealthCheckStatusResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckObservations",
                    "shape": "HealthCheckObservations",
                    "documentation": "<p>A list that contains one <code>HealthCheckObservation</code> element for each Route 53 health checker.</p>"
                }
            ]
        },
        "GetHostedZoneCountRequest": {
            "type": "structure",
            "members": []
        },
        "GetHostedZoneCountResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZoneCount",
                    "shape": "HostedZoneCount",
                    "documentation": "<p> The number of hosted zones associated with the current AWS account.</p>"
                }
            ]
        },
        "GetHostedZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p>The ID of the hosted zone for which you want to get a list of the name servers in the delegation set.</p>"
                }
            ]
        },
        "GetHostedZoneResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZone",
                    "shape": "HostedZone",
                    "documentation": "<p>A complex type that contains the information about the specified hosted zone.</p>"
                },
                {
                    "name": "DelegationSet",
                    "shape": "DelegationSet",
                    "documentation": "<p>A complex type that contains information about the name servers for the specified hosted zone.</p>"
                },
                {
                    "name": "VPCs",
                    "shape": "VPCs",
                    "documentation": "<p>A complex type that contains information about VPCs associated with the specified hosted zone.</p>"
                }
            ]
        },
        "GetReusableDelegationSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p>The ID of the reusable delegation set for which you want to get a list of the name server.</p>"
                }
            ]
        },
        "GetReusableDelegationSetResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "DelegationSet",
                    "shape": "DelegationSet",
                    "documentation": "<p>A complex type that contains the information about the nameservers for the specified delegation set ID.</p>"
                }
            ]
        },
        "HealthCheck": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "HealthCheckId",
                    "documentation": "<p>The ID of the specified health check.</p>"
                },
                {
                    "name": "CallerReference",
                    "shape": "HealthCheckNonce",
                    "documentation": "<p>A unique string that identifies the request to create the health check.</p>"
                },
                {
                    "name": "HealthCheckConfig",
                    "shape": "HealthCheckConfig",
                    "documentation": "<p>A complex type that contains the health check configuration.</p>"
                },
                {
                    "name": "HealthCheckVersion",
                    "shape": "HealthCheckVersion",
                    "documentation": "<p>The version of the health check. You can optionally pass this value in a call to <code>UpdateHealthCheck</code> to prevent overwriting another change to the health check.</p>"
                }
            ]
        },
        "HealthCheckAlreadyExists": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "HealthCheckConfig": {
            "type": "structure",
            "members": [
                {
                    "name": "IPAddress",
                    "shape": "IPAddress",
                    "documentation": "<p>IP Address of the instance being checked. </p>"
                },
                {
                    "name": "Port",
                    "shape": "Port",
                    "documentation": "<p>Port on which connection will be opened to the instance to health check. For HTTP and HTTP_STR_MATCH this defaults to 80 if the port is not specified. For HTTPS and HTTPS_STR_MATCH this defaults to 443 if the port is not specified.</p>"
                },
                {
                    "name": "Type",
                    "shape": "HealthCheckType",
                    "documentation": "<p>The type of health check to be performed. Currently supported types are TCP, HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH.</p>"
                },
                {
                    "name": "ResourcePath",
                    "shape": "ResourcePath",
                    "documentation": "<p>Path to ping on the instance to check the health. Required for HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH health checks, HTTP request is issued to the instance on the given port and path.</p>"
                },
                {
                    "name": "FullyQualifiedDomainName",
                    "shape": "FullyQualifiedDomainName",
                    "documentation": "<p>Fully qualified domain name of the instance to be health checked.</p>"
                },
                {
                    "name": "SearchString",
                    "shape": "SearchString",
                    "documentation": "<p>A string to search for in the body of a health check response. Required for HTTP_STR_MATCH and HTTPS_STR_MATCH health checks.</p>"
                },
                {
                    "name": "RequestInterval",
                    "shape": "RequestInterval",
                    "documentation": "<p>The number of seconds between the time that Route 53 gets a response from your endpoint and the time that it sends the next health-check request.</p> <p>Each Route 53 health checker makes requests at this interval. Valid values are 10 and 30. The default value is 30.</p>"
                },
                {
                    "name": "FailureThreshold",
                    "shape": "FailureThreshold",
                    "documentation": "<p>The number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.</p> <p>Valid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.</p>"
                }
            ]
        },
        "HealthCheckCount": {
            "type": "long"
        },
        "HealthCheckId": {
            "type": "string"
        },
        "HealthCheckInUse": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "HealthCheckNonce": {
            "type": "string"
        },
        "HealthCheckObservation": {
            "type": "structure",
            "members": [
                {
                    "name": "IPAddress",
                    "shape": "IPAddress",
                    "documentation": "<p>The IP address of the Route 53 health checker that performed the health check.</p>"
                },
                {
                    "name": "StatusReport",
                    "shape": "StatusReport",
                    "documentation": "<p>A complex type that contains information about the health check status for the current observation.</p>"
                }
            ]
        },
        "HealthCheckObservations": {
            "type": "list"
        },
        "HealthCheckType": {
            "type": "string"
        },
        "HealthCheckVersion": {
            "type": "long"
        },
        "HealthCheckVersionMismatch": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "HealthChecks": {
            "type": "list"
        },
        "HostedZone": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "documentation": "<p>The ID of the specified hosted zone.</p>"
                },
                {
                    "name": "Name",
                    "shape": "DNSName",
                    "documentation": "<p>The name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.</p> <p>This is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of <code>NameServers</code> elements returned in <code>DelegationSet</code>.</p>"
                },
                {
                    "name": "CallerReference",
                    "shape": "Nonce",
                    "documentation": "<p>A unique string that identifies the request to create the hosted zone.</p>"
                },
                {
                    "name": "Config",
                    "shape": "HostedZoneConfig",
                    "documentation": "<p>A complex type that contains the <code>Comment</code> element.</p>"
                },
                {
                    "name": "ResourceRecordSetCount",
                    "shape": "HostedZoneRRSetCount",
                    "documentation": "<p>Total number of resource record sets in the hosted zone.</p>"
                }
            ]
        },
        "HostedZoneAlreadyExists": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "HostedZoneConfig": {
            "type": "structure",
            "members": [
                {
                    "name": "Comment",
                    "shape": "ResourceDescription",
                    "documentation": "<p>An optional comment about your hosted zone. If you don't want to specify a comment, you can omit the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the XML document.</p>"
                },
                {
                    "name": "PrivateZone",
                    "shape": "IsPrivateZone",
                    "documentation": "<p>A value that indicates whether this is a private hosted zone. The value is returned in the response; do not specify it in the request.</p>"
                }
            ]
        },
        "HostedZoneCount": {
            "type": "long"
        },
        "HostedZoneNotEmpty": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "HostedZoneNotFound": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "HostedZoneRRSetCount": {
            "type": "long"
        },
        "HostedZones": {
            "type": "list"
        },
        "IPAddress": {
            "type": "string"
        },
        "IPAddressCidr": {
            "type": "string"
        },
        "IncompatibleVersion": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "InvalidArgument": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "InvalidChangeBatch": {
            "type": "structure",
            "members": [
                {
                    "name": "messages",
                    "shape": "ErrorMessages",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "InvalidDomainName": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "InvalidInput": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "InvalidVPCId": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "IsPrivateZone": {
            "type": "boolean"
        },
        "LastVPCAssociation": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "LimitsExceeded": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "ListGeoLocationsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "StartContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "location": "querystring",
                    "locationName": "startcontinentcode",
                    "documentation": "<p>The first continent code in the lexicographic ordering of geo locations that you want the <code>ListGeoLocations</code> request to list. For non-continent geo locations, this should be null.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code></p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <a>InvalidInput</a> error.</p>"
                },
                {
                    "name": "StartCountryCode",
                    "shape": "GeoLocationCountryCode",
                    "location": "querystring",
                    "locationName": "startcountrycode",
                    "documentation": "<p>The first country code in the lexicographic ordering of geo locations that you want the <code>ListGeoLocations</code> request to list.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>"
                },
                {
                    "name": "StartSubdivisionCode",
                    "shape": "GeoLocationSubdivisionCode",
                    "location": "querystring",
                    "locationName": "startsubdivisioncode",
                    "documentation": "<p>The first subdivision code in the lexicographic ordering of geo locations that you want the <code>ListGeoLocations</code> request to list.</p> <p>Constraint: Specifying <code>SubdivisionCode</code> without <code>CountryCode</code> returns an <a>InvalidInput</a> error.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "location": "querystring",
                    "locationName": "maxitems",
                    "documentation": "<p>The maximum number of geo locations you want in the response body.</p>"
                }
            ]
        },
        "ListGeoLocationsResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "GeoLocationDetailsList",
                    "shape": "GeoLocationDetailsList",
                    "documentation": "<p>A complex type that contains information about the geo locations that are returned by the request.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "PageTruncated",
                    "documentation": "<p> A flag that indicates whether there are more geo locations to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the values included in the <a>ListGeoLocationsResponse$NextContinentCode</a>, <a>ListGeoLocationsResponse$NextCountryCode</a> and <a>ListGeoLocationsResponse$NextSubdivisionCode</a> elements.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "NextContinentCode",
                    "shape": "GeoLocationContinentCode",
                    "documentation": "<p>If the results were truncated, the continent code of the next geo location in the list. This element is present only if <a>ListGeoLocationsResponse$IsTruncated</a> is true and the next geo location to list is a continent location. </p>"
                },
                {
                    "name": "NextCountryCode",
                    "shape": "GeoLocationCountryCode",
                    "documentation": "<p>If the results were truncated, the country code of the next geo location in the list. This element is present only if <a>ListGeoLocationsResponse$IsTruncated</a> is true and the next geo location to list is not a continent location. </p>"
                },
                {
                    "name": "NextSubdivisionCode",
                    "shape": "GeoLocationSubdivisionCode",
                    "documentation": "<p>If the results were truncated, the subdivision code of the next geo location in the list. This element is present only if <a>ListGeoLocationsResponse$IsTruncated</a> is true and the next geo location has a subdivision. </p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "documentation": "<p>The maximum number of records you requested. The maximum value of <code>MaxItems</code> is 100.</p>"
                }
            ]
        },
        "ListHealthChecksRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Marker",
                    "shape": "PageMarker",
                    "location": "querystring",
                    "locationName": "marker",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "location": "querystring",
                    "locationName": "maxitems",
                    "documentation": "<p>Specify the maximum number of health checks to return per page of results.</p>"
                }
            ]
        },
        "ListHealthChecksResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthChecks",
                    "shape": "HealthChecks",
                    "documentation": "<p>A complex type that contains information about the health checks associated with the current AWS account.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "PageMarker",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "PageTruncated",
                    "documentation": "<p> A flag indicating whether there are more health checks to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "NextMarker",
                    "shape": "PageMarker",
                    "documentation": "<p> Indicates where to continue listing health checks. If <a>ListHealthChecksResponse$IsTruncated</a> is <code>true</code>, make another request to <code>ListHealthChecks</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "documentation": "<p>The maximum number of health checks to be included in the response body. If the number of health checks associated with this AWS account exceeds <code>MaxItems</code>, the value of <a>ListHealthChecksResponse$IsTruncated</a> in the response is <code>true</code>. Call <code>ListHealthChecks</code> again and specify the value of <a>ListHealthChecksResponse$NextMarker</a> in the <a>ListHostedZonesRequest$Marker</a> element to get the next page of results.</p>"
                }
            ]
        },
        "ListHostedZonesByNameRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "DNSName",
                    "shape": "DNSName",
                    "location": "querystring",
                    "locationName": "dnsname",
                    "documentation": "<p>The first name in the lexicographic ordering of domain names that you want the <code>ListHostedZonesByNameRequest</code> request to list.</p> <p>If the request returned more than one page of results, submit another request and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> from the last response in the <code>DNSName</code> and <code>HostedZoneId</code> parameters to get the next page of results.</p>"
                },
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "location": "querystring",
                    "locationName": "hostedzoneid",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> from the last response in the <code>DNSName</code> and <code>HostedZoneId</code> parameters to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "location": "querystring",
                    "locationName": "maxitems",
                    "documentation": "<p>Specify the maximum number of hosted zones to return per page of results.</p>"
                }
            ]
        },
        "ListHostedZonesByNameResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZones",
                    "shape": "HostedZones",
                    "documentation": "<p>A complex type that contains information about the hosted zones associated with the current AWS account.</p>"
                },
                {
                    "name": "DNSName",
                    "shape": "DNSName",
                    "documentation": "<p>The <code>DNSName</code> value sent in the request.</p>"
                },
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "documentation": "<p>The <code>HostedZoneId</code> value sent in the request.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "PageTruncated",
                    "documentation": "<p>A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "NextDNSName",
                    "shape": "DNSName",
                    "documentation": "<p>If <a>ListHostedZonesByNameResponse$IsTruncated</a> is <code>true</code>, there are more hosted zones associated with the current AWS account. To get the next page of results, make another request to <code>ListHostedZonesByName</code>. Specify the value of <a>ListHostedZonesByNameResponse$NextDNSName</a> in the <a>ListHostedZonesByNameRequest$DNSName</a> element and <a>ListHostedZonesByNameResponse$NextHostedZoneId</a> in the <a>ListHostedZonesByNameRequest$HostedZoneId</a> element.</p>"
                },
                {
                    "name": "NextHostedZoneId",
                    "shape": "ResourceId",
                    "documentation": "<p>If <a>ListHostedZonesByNameResponse$IsTruncated</a> is <code>true</code>, there are more hosted zones associated with the current AWS account. To get the next page of results, make another request to <code>ListHostedZonesByName</code>. Specify the value of <a>ListHostedZonesByNameResponse$NextDNSName</a> in the <a>ListHostedZonesByNameRequest$DNSName</a> element and <a>ListHostedZonesByNameResponse$NextHostedZoneId</a> in the <a>ListHostedZonesByNameRequest$HostedZoneId</a> element.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "documentation": "<p>The maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds <code>MaxItems</code>, the value of <a>ListHostedZonesByNameResponse$IsTruncated</a> in the response is <code>true</code>. Call <code>ListHostedZonesByName</code> again and specify the value of <a>ListHostedZonesByNameResponse$NextDNSName</a> and <a>ListHostedZonesByNameResponse$NextHostedZoneId</a> elements respectively to get the next page of results.</p>"
                }
            ]
        },
        "ListHostedZonesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Marker",
                    "shape": "PageMarker",
                    "location": "querystring",
                    "locationName": "marker",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "location": "querystring",
                    "locationName": "maxitems",
                    "documentation": "<p>Specify the maximum number of hosted zones to return per page of results.</p>"
                },
                {
                    "name": "DelegationSetId",
                    "shape": "ResourceId",
                    "location": "querystring",
                    "locationName": "delegationsetid"
                }
            ]
        },
        "ListHostedZonesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZones",
                    "shape": "HostedZones",
                    "documentation": "<p>A complex type that contains information about the hosted zones associated with the current AWS account.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "PageMarker",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "PageTruncated",
                    "documentation": "<p> A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "NextMarker",
                    "shape": "PageMarker",
                    "documentation": "<p> Indicates where to continue listing hosted zones. If <a>ListHostedZonesResponse$IsTruncated</a> is <code>true</code>, make another request to <code>ListHostedZones</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "documentation": "<p>The maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds <code>MaxItems</code>, the value of <a>ListHostedZonesResponse$IsTruncated</a> in the response is <code>true</code>. Call <code>ListHostedZones</code> again and specify the value of <a>ListHostedZonesResponse$NextMarker</a> in the <a>ListHostedZonesRequest$Marker</a> element to get the next page of results.</p>"
                }
            ]
        },
        "ListResourceRecordSetsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZoneId",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p> The ID of the hosted zone that contains the resource record sets that you want to get.</p>"
                },
                {
                    "name": "StartRecordName",
                    "shape": "DNSName",
                    "location": "querystring",
                    "locationName": "name",
                    "documentation": "<p>The first name in the lexicographic ordering of domain names that you want the <code>ListResourceRecordSets</code> request to list.</p>"
                },
                {
                    "name": "StartRecordType",
                    "shape": "RRType",
                    "location": "querystring",
                    "locationName": "type",
                    "documentation": "<p>The DNS type at which to begin the listing of resource record sets. </p> <p>Valid values: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code></p> <p>Values for Weighted Resource Record Sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>TXT</code></p> <p> Values for Regional Resource Record Sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>TXT</code></p> <p>Values for Alias Resource Record Sets: <code>A</code> | <code>AAAA</code></p> <p>Constraint: Specifying <code>type</code> without specifying <code>name</code> returns an <a>InvalidInput</a> error.</p>"
                },
                {
                    "name": "StartRecordIdentifier",
                    "shape": "ResourceRecordSetIdentifier",
                    "location": "querystring",
                    "locationName": "identifier",
                    "documentation": "<p><i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, specify the value of <code>ListResourceRecordSetsResponse$NextRecordIdentifier</code> from the previous response to get the next resource record set that has the current DNS name and type.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "location": "querystring",
                    "locationName": "maxitems",
                    "documentation": "<p>The maximum number of records you want in the response body.</p>"
                }
            ]
        },
        "ListResourceRecordSetsResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceRecordSets",
                    "shape": "ResourceRecordSets",
                    "documentation": "<p>A complex type that contains information about the resource record sets that are returned by the request.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "PageTruncated",
                    "documentation": "<p> A flag that indicates whether there are more resource record sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <a>ListResourceRecordSetsResponse$NextRecordName</a> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "NextRecordName",
                    "shape": "DNSName",
                    "documentation": "<p>If the results were truncated, the name of the next record in the list. This element is present only if <a>ListResourceRecordSetsResponse$IsTruncated</a> is true. </p>"
                },
                {
                    "name": "NextRecordType",
                    "shape": "RRType",
                    "documentation": "<p>If the results were truncated, the type of the next record in the list. This element is present only if <a>ListResourceRecordSetsResponse$IsTruncated</a> is true. </p>"
                },
                {
                    "name": "NextRecordIdentifier",
                    "shape": "ResourceRecordSetIdentifier",
                    "documentation": "<p><i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, the value of <code>SetIdentifier</code> for the next resource record set that has the current DNS name and type.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "documentation": "<p>The maximum number of records you requested. The maximum value of <code>MaxItems</code> is 100.</p>"
                }
            ]
        },
        "ListReusableDelegationSetsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Marker",
                    "shape": "PageMarker",
                    "location": "querystring",
                    "locationName": "marker",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "location": "querystring",
                    "locationName": "maxitems",
                    "documentation": "<p>Specify the maximum number of reusable delegation sets to return per page of results.</p>"
                }
            ]
        },
        "ListReusableDelegationSetsResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "DelegationSets",
                    "shape": "DelegationSets",
                    "documentation": "<p>A complex type that contains information about the reusable delegation sets associated with the current AWS account.</p>"
                },
                {
                    "name": "Marker",
                    "shape": "PageMarker",
                    "documentation": "<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
                },
                {
                    "name": "IsTruncated",
                    "shape": "PageTruncated",
                    "documentation": "<p> A flag indicating whether there are more reusable delegation sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
                },
                {
                    "name": "NextMarker",
                    "shape": "PageMarker",
                    "documentation": "<p> Indicates where to continue listing reusable delegation sets. If <a>ListReusableDelegationSetsResponse$IsTruncated</a> is <code>true</code>, make another request to <code>ListReusableDelegationSets</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
                },
                {
                    "name": "MaxItems",
                    "shape": "PageMaxItems",
                    "documentation": "<p>The maximum number of reusable delegation sets to be included in the response body. If the number of reusable delegation sets associated with this AWS account exceeds <code>MaxItems</code>, the value of <a>ListReusablDelegationSetsResponse$IsTruncated</a> in the response is <code>true</code>. Call <code>ListReusableDelegationSets</code> again and specify the value of <a>ListReusableDelegationSetsResponse$NextMarker</a> in the <a>ListReusableDelegationSetsRequest$Marker</a> element to get the next page of results.</p>"
                }
            ]
        },
        "ListTagsForResourceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceType",
                    "shape": "TagResourceType",
                    "location": "uri",
                    "locationName": "ResourceType",
                    "documentation": "<p>The type of the resource.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>"
                },
                {
                    "name": "ResourceId",
                    "shape": "TagResourceId",
                    "location": "uri",
                    "locationName": "ResourceId",
                    "documentation": "<p>The ID of the resource for which you want to retrieve tags.</p>"
                }
            ]
        },
        "ListTagsForResourceResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceTagSet",
                    "shape": "ResourceTagSet",
                    "documentation": "<p>A <code>ResourceTagSet</code> containing tags associated with the specified resource.</p>"
                }
            ]
        },
        "ListTagsForResourcesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceType",
                    "shape": "TagResourceType",
                    "location": "uri",
                    "locationName": "ResourceType",
                    "documentation": "<p>The type of the resources.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>"
                },
                {
                    "name": "ResourceIds",
                    "shape": "TagResourceIdList",
                    "documentation": "<p>A complex type that contains the ResourceId element for each resource for which you want to get a list of tags.</p>"
                }
            ]
        },
        "ListTagsForResourcesResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceTagSets",
                    "shape": "ResourceTagSetList",
                    "documentation": "<p>A list of <code>ResourceTagSet</code>s containing tags associated with the specified resources.</p>"
                }
            ]
        },
        "NoSuchChange": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "NoSuchDelegationSet": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "NoSuchGeoLocation": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "NoSuchHealthCheck": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "NoSuchHostedZone": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "Nonce": {
            "type": "string"
        },
        "PageMarker": {
            "type": "string"
        },
        "PageMaxItems": {
            "type": "string"
        },
        "PageTruncated": {
            "type": "boolean"
        },
        "Port": {
            "type": "integer"
        },
        "PriorRequestNotComplete": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "PublicZoneVPCAssociation": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "RData": {
            "type": "string"
        },
        "RRType": {
            "type": "string"
        },
        "RequestInterval": {
            "type": "integer"
        },
        "ResourceDescription": {
            "type": "string"
        },
        "ResourceId": {
            "type": "string"
        },
        "ResourcePath": {
            "type": "string"
        },
        "ResourceRecord": {
            "type": "structure",
            "members": [
                {
                    "name": "Value",
                    "shape": "RData",
                    "documentation": "<p>The value of the <code>Value</code> element for the current resource record set.</p>"
                }
            ]
        },
        "ResourceRecordSet": {
            "type": "structure",
            "members": [
                {
                    "name": "Name",
                    "shape": "DNSName",
                    "documentation": "<p>The domain name of the current resource record set.</p>"
                },
                {
                    "name": "Type",
                    "shape": "RRType",
                    "documentation": "<p>The type of the current resource record set.</p>"
                },
                {
                    "name": "SetIdentifier",
                    "shape": "ResourceRecordSetIdentifier",
                    "documentation": "<p><i>Weighted, Latency, Geo, and Failover resource record sets only:</i> An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type.</p>"
                },
                {
                    "name": "Weight",
                    "shape": "ResourceRecordSetWeight",
                    "documentation": "<p><i>Weighted resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that determines what portion of traffic for the current resource record set is routed to the associated location.</p>"
                },
                {
                    "name": "Region",
                    "shape": "ResourceRecordSetRegion",
                    "documentation": "<p><i>Latency-based resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that specifies the AWS region for the current resource record set.</p>"
                },
                {
                    "name": "GeoLocation",
                    "shape": "GeoLocation",
                    "documentation": "<p><i>Geo location resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that specifies the geo location for the current resource record set.</p>"
                },
                {
                    "name": "Failover",
                    "shape": "ResourceRecordSetFailover",
                    "documentation": "<p><i>Failover resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that indicates whether the current resource record set is a primary or secondary resource record set. A failover set may contain at most one resource record set marked as primary and one resource record set marked as secondary. A resource record set marked as primary will be returned if any of the following are true: (1) an associated health check is passing, (2) if the resource record set is an alias with the evaluate target health and at least one target resource record set is healthy, (3) both the primary and secondary resource record set are failing health checks or (4) there is no secondary resource record set. A secondary resource record set will be returned if: (1) the primary is failing a health check and either the secondary is passing a health check or has no associated health check, or (2) there is no primary resource record set. </p> <p>Valid values: <code>PRIMARY</code> | <code>SECONDARY</code></p>"
                },
                {
                    "name": "TTL",
                    "shape": "TTL",
                    "documentation": "<p>The cache time to live for the current resource record set.</p>"
                },
                {
                    "name": "ResourceRecords",
                    "shape": "ResourceRecords",
                    "documentation": "<p>A complex type that contains the resource records for the current resource record set.</p>"
                },
                {
                    "name": "AliasTarget",
                    "shape": "AliasTarget",
                    "documentation": "<p><i>Alias resource record sets only:</i> Information about the AWS resource to which you are redirecting traffic.</p>"
                },
                {
                    "name": "HealthCheckId",
                    "shape": "HealthCheckId",
                    "documentation": "<p><i>Health Check resource record sets only, not required for alias resource record sets:</i> An identifier that is used to identify health check associated with the resource record set.</p>"
                }
            ]
        },
        "ResourceRecordSetFailover": {
            "type": "string"
        },
        "ResourceRecordSetIdentifier": {
            "type": "string"
        },
        "ResourceRecordSetRegion": {
            "type": "string"
        },
        "ResourceRecordSetWeight": {
            "type": "long"
        },
        "ResourceRecordSets": {
            "type": "list"
        },
        "ResourceRecords": {
            "type": "list"
        },
        "ResourceTagSet": {
            "type": "structure",
            "members": [
                {
                    "name": "ResourceType",
                    "shape": "TagResourceType",
                    "documentation": "<p>The type of the resource.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>"
                },
                {
                    "name": "ResourceId",
                    "shape": "TagResourceId",
                    "documentation": "<p>The ID for the specified resource.</p>"
                },
                {
                    "name": "Tags",
                    "shape": "TagList",
                    "documentation": "<p>The tags associated with the specified resource.</p>"
                }
            ]
        },
        "ResourceTagSetList": {
            "type": "list"
        },
        "ResourceURI": {
            "type": "string"
        },
        "SearchString": {
            "type": "string"
        },
        "Status": {
            "type": "string"
        },
        "StatusReport": {
            "type": "structure",
            "members": [
                {
                    "name": "Status",
                    "shape": "Status",
                    "documentation": "<p>The observed health check status.</p>"
                },
                {
                    "name": "CheckedTime",
                    "shape": "TimeStamp",
                    "documentation": "<p>The date and time the health check status was observed, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC), which is synonymous with Greenwich Mean Time in this context.</p>"
                }
            ]
        },
        "TTL": {
            "type": "long"
        },
        "Tag": {
            "type": "structure",
            "members": [
                {
                    "name": "Key",
                    "shape": "TagKey",
                    "documentation": "<p>The key for a <code>Tag</code>.</p>"
                },
                {
                    "name": "Value",
                    "shape": "TagValue",
                    "documentation": "<p>The value for a <code>Tag</code>.</p>"
                }
            ]
        },
        "TagKey": {
            "type": "string"
        },
        "TagKeyList": {
            "type": "list"
        },
        "TagList": {
            "type": "list"
        },
        "TagResourceId": {
            "type": "string"
        },
        "TagResourceIdList": {
            "type": "list"
        },
        "TagResourceType": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ThrottlingException": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "TimeStamp": {
            "type": "timestamp"
        },
        "TooManyHealthChecks": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage"
                }
            ]
        },
        "TooManyHostedZones": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "UpdateHealthCheckRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheckId",
                    "shape": "HealthCheckId",
                    "location": "uri",
                    "locationName": "HealthCheckId",
                    "documentation": "<p>The ID of the health check to update.</p>"
                },
                {
                    "name": "HealthCheckVersion",
                    "shape": "HealthCheckVersion",
                    "documentation": "<p>Optional. When you specify a health check version, Route 53 compares this value with the current value in the health check, which prevents you from updating the health check when the versions don't match. Using <code>HealthCheckVersion</code> lets you prevent overwriting another change to the health check.</p>"
                },
                {
                    "name": "IPAddress",
                    "shape": "IPAddress",
                    "documentation": "<p>The IP address of the resource that you want to check.</p> <p>Specify this value only if you want to change it.</p>"
                },
                {
                    "name": "Port",
                    "shape": "Port",
                    "documentation": "<p>The port on which you want Route 53 to open a connection to perform health checks.</p> <p>Specify this value only if you want to change it.</p>"
                },
                {
                    "name": "ResourcePath",
                    "shape": "ResourcePath",
                    "documentation": "<p>The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. </p> <p>Specify this value only if you want to change it.</p>"
                },
                {
                    "name": "FullyQualifiedDomainName",
                    "shape": "FullyQualifiedDomainName",
                    "documentation": "<p>Fully qualified domain name of the instance to be health checked.</p> <p>Specify this value only if you want to change it.</p>"
                },
                {
                    "name": "SearchString",
                    "shape": "SearchString",
                    "documentation": "<p>If the value of <code>Type</code> is <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>, the string that you want Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy. </p> <p>Specify this value only if you want to change it.</p>"
                },
                {
                    "name": "FailureThreshold",
                    "shape": "FailureThreshold",
                    "documentation": "<p>The number of consecutive health checks that an endpoint must pass or fail for Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.</p> <p>Valid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.</p> <p>Specify this value only if you want to change it.</p>"
                }
            ]
        },
        "UpdateHealthCheckResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HealthCheck",
                    "shape": "HealthCheck"
                }
            ]
        },
        "UpdateHostedZoneCommentRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "Id",
                    "shape": "ResourceId",
                    "location": "uri",
                    "locationName": "Id",
                    "documentation": "<p>The ID of the hosted zone you want to update.</p>"
                },
                {
                    "name": "Comment",
                    "shape": "ResourceDescription",
                    "documentation": "<p>A comment about your hosted zone.</p>"
                }
            ]
        },
        "UpdateHostedZoneCommentResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "HostedZone",
                    "shape": "HostedZone"
                }
            ]
        },
        "VPC": {
            "type": "structure",
            "members": [
                {
                    "name": "VPCRegion",
                    "shape": "VPCRegion"
                },
                {
                    "name": "VPCId",
                    "shape": "VPCId"
                }
            ]
        },
        "VPCAssociationNotFound": {
            "type": "structure",
            "members": [
                {
                    "name": "message",
                    "shape": "ErrorMessage",
                    "documentation": "<p>Descriptive message for the error response.</p>"
                }
            ]
        },
        "VPCId": {
            "type": "string"
        },
        "VPCRegion": {
            "type": "string"
        },
        "VPCs": {
            "type": "list"
        }
    }
}