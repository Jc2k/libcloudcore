{
    "metadata": {
        "request-pipeline": [
            "libcloudcore.auth.token:TokenAuth",
            "libcloudcore.serializers.xmlrpc:XmlrpcSerializer"
        ],
        "token": {
            "stored-in-param": "apikey"
        },
        "endpoint": "https://rpc.ote.gandi.net/xmlrpc/"
    },
    "documentation": "",
    "operations": {
        "hosting_vm_list": {
            "wire_name": "hosting.vm.list",
            "input": {
                "shape": "HostingVmListRequest"
            },
            "output": {
                "shape": "HostingVmListResponse"
            },
            "errors": [],
            "documentation": "\nList virtual machines."
        },
        "version_info": {
            "wire_name": "version.info",
            "input": {
                "shape": "VersionInfoRequest"
            },
            "output": {
                "shape": "VersionInfoResponse"
            },
            "errors": [],
            "documentation": "\nReturn the API version number"
        },
        "account_credit": {
            "wire_name": "account.credit",
            "documentation": "\nBuy credits.\n\n.. versionadded:: 3.3.26",
            "errors": [],
            "input": {
                "shape": "AccountCreditRequest"
            },
            "output": {
                "shape": "AccountCreditResponse"
            }
        },
        "account_info": {
            "wire_name": "account.info",
            "documentation": "\nGet information about a hosting account.",
            "errors": [],
            "input": {
                "shape": "AccountInfoRequest"
            },
            "output": {
                "shape": "AccountInfoResponse"
            }
        },
        "catalog_list": {
            "wire_name": "catalog.list",
            "documentation": "\nList catalog entries.\nThe default currency is EUR.\nThe default grid is A.\nOverride the parameters in order to get the price of a product\nassociated with your currency and your price grid.",
            "errors": [],
            "input": {
                "shape": "CatalogListRequest"
            },
            "output": {
                "shape": "CatalogListResponse"
            }
        },
        "cert_change_dcv": {
            "wire_name": "cert.change_dcv",
            "documentation": "\nAsk comodo to change the DCV method for that operation.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertChangeDcvRequest"
            },
            "output": {
                "shape": "CertChangeDcvResponse"
            }
        },
        "cert_count": {
            "wire_name": "cert.count",
            "documentation": "\nCounts certificates handled by this account.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertCountRequest"
            },
            "output": {
                "shape": "CertCountResponse"
            }
        },
        "cert_create": {
            "wire_name": "cert.create",
            "documentation": "\nCreate a certificate.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertCreateRequest"
            },
            "output": {
                "shape": "CertCreateResponse"
            }
        },
        "cert_delete": {
            "wire_name": "cert.delete",
            "documentation": "\nDelete a certificate.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertDeleteRequest"
            },
            "output": {
                "shape": "CertDeleteResponse"
            }
        },
        "cert_get_dcv_params": {
            "wire_name": "cert.get_dcv_params",
            "documentation": "\nGet params for DCV (Domain Control Validation).\nDCV is a security control that validate/grant access to the registred\ndomain name.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertGetDcvParamsRequest"
            },
            "output": {
                "shape": "CertGetDcvParamsResponse"
            }
        },
        "cert_hosted_count": {
            "wire_name": "cert.hosted.count",
            "documentation": "\nCount SSL instances associated to the contact\nrepresented by **apikey**.\n\n.. versionadded:: 3.3.28",
            "errors": [],
            "input": {
                "shape": "CertHostedCountRequest"
            },
            "output": {
                "shape": "CertHostedCountResponse"
            }
        },
        "cert_hosted_create": {
            "wire_name": "cert.hosted.create",
            "documentation": "\nCreate a SSL certificate to be used by Paas and Iaas rproxy services\n\n.. versionadded:: 3.3.28",
            "errors": [],
            "input": {
                "shape": "CertHostedCreateRequest"
            },
            "output": {
                "shape": "CertHostedCreateResponse"
            }
        },
        "cert_hosted_delete": {
            "wire_name": "cert.hosted.delete",
            "documentation": "\nDelete a certificate\n\n.. versionadded:: 3.3.28",
            "errors": [],
            "input": {
                "shape": "CertHostedDeleteRequest"
            },
            "output": {
                "shape": "CertHostedDeleteResponse"
            }
        },
        "cert_hosted_info": {
            "wire_name": "cert.hosted.info",
            "documentation": "\nInfo about a SSL instance associated to the contact\nrepresented by **apikey**.\n\n.. versionadded:: 3.3.28",
            "errors": [],
            "input": {
                "shape": "CertHostedInfoRequest"
            },
            "output": {
                "shape": "CertHostedInfoResponse"
            }
        },
        "cert_hosted_list": {
            "wire_name": "cert.hosted.list",
            "documentation": "\nList SSL instances associated to the contact\nrepresented by **apikey**.\n\n.. versionadded:: 3.3.28",
            "errors": [],
            "input": {
                "shape": "CertHostedListRequest"
            },
            "output": {
                "shape": "CertHostedListResponse"
            }
        },
        "cert_info": {
            "wire_name": "cert.info",
            "documentation": "\nGet certificate information.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertInfoRequest"
            },
            "output": {
                "shape": "CertInfoResponse"
            }
        },
        "cert_list": {
            "wire_name": "cert.list",
            "documentation": "\nLists certificates handled by this account.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertListRequest"
            },
            "output": {
                "shape": "CertListResponse"
            }
        },
        "cert_package_list": {
            "wire_name": "cert.package.list",
            "documentation": "\nLists certificate packages.",
            "errors": [],
            "input": {
                "shape": "CertPackageListRequest"
            },
            "output": {
                "shape": "CertPackageListResponse"
            }
        },
        "cert_renew": {
            "wire_name": "cert.renew",
            "documentation": "\nRenew a certificate.\nYou must pass a new CSR, the end date will be current end_date +\nduration.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertRenewRequest"
            },
            "output": {
                "shape": "CertRenewResponse"
            }
        },
        "cert_resend_dcv": {
            "wire_name": "cert.resend_dcv",
            "documentation": "\nAsk comodo to resend the DCV for that operation.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertResendDcvRequest"
            },
            "output": {
                "shape": "CertResendDcvResponse"
            }
        },
        "cert_update": {
            "wire_name": "cert.update",
            "documentation": "\nReplace the certificate CSR.\n\n.. versionadded:: 3.2.8",
            "errors": [],
            "input": {
                "shape": "CertUpdateRequest"
            },
            "output": {
                "shape": "CertUpdateResponse"
            }
        },
        "changeowner_create": {
            "wire_name": "changeowner.create",
            "documentation": "\nDefine the new owner of a domain and with him/her the\n'admin', 'tech' and 'bill' contacts.\n\nA special method is needed for this action because\nspecial rules may apply regarding of the tld.",
            "errors": [],
            "input": {
                "shape": "ChangeownerCreateRequest"
            },
            "output": {
                "shape": "ChangeownerCreateResponse"
            }
        },
        "contact_balance": {
            "wire_name": "contact.balance",
            "documentation": "\nGet contact financial balance.",
            "errors": [],
            "input": {
                "shape": "ContactBalanceRequest"
            },
            "output": {
                "shape": "ContactBalanceResponse"
            }
        },
        "contact_can_associate": {
            "wire_name": "contact.can_associate",
            "documentation": "\nCheck if a contact description can be associated to a domain.",
            "errors": [],
            "input": {
                "shape": "ContactCanAssociateRequest"
            },
            "output": {
                "shape": "ContactCanAssociateResponse"
            }
        },
        "contact_can_associate_domain": {
            "wire_name": "contact.can_associate_domain",
            "documentation": "\nCheck if a contact can be associated to a domain.",
            "errors": [],
            "input": {
                "shape": "ContactCanAssociateDomainRequest"
            },
            "output": {
                "shape": "ContactCanAssociateDomainResponse"
            }
        },
        "contact_count": {
            "wire_name": "contact.count",
            "documentation": "\nCount contacts associated to the one represented by **apikey**.\n\n.. versionadded:: 3.2.7\n\n.. note:: Non reseller cannot have \u201cassociated\u201d contacts and                   will always get ``0`` as result.",
            "errors": [],
            "input": {
                "shape": "ContactCountRequest"
            },
            "output": {
                "shape": "ContactCountResponse"
            }
        },
        "contact_create": {
            "wire_name": "contact.create",
            "documentation": "\nCreate a contact.",
            "errors": [],
            "input": {
                "shape": "ContactCreateRequest"
            },
            "output": {
                "shape": "ContactCreateResponse"
            }
        },
        "contact_delete": {
            "wire_name": "contact.delete",
            "documentation": "\nDelete a contact.\n\nIf no **handle** is provided, the contact represented by\n**apikey** is deleted.\n\n.. versionadded:: 3.1.9",
            "errors": [],
            "input": {
                "shape": "ContactDeleteRequest"
            },
            "output": {
                "shape": "ContactDeleteResponse"
            }
        },
        "contact_info": {
            "wire_name": "contact.info",
            "documentation": "\nGet contact information.\n\nIf no **handle** is provided, information about the contact\nrepresented by **apikey** are returned.",
            "errors": [],
            "input": {
                "shape": "ContactInfoRequest"
            },
            "output": {
                "shape": "ContactInfoResponse"
            }
        },
        "contact_list": {
            "wire_name": "contact.list",
            "documentation": "\nList contacts associated to the one represented by **apikey**.\n\n.. note:: Non reseller cannot have \u201cassociated\u201d contacts and                   will always get an empty result.",
            "errors": [],
            "input": {
                "shape": "ContactListRequest"
            },
            "output": {
                "shape": "ContactListResponse"
            }
        },
        "contact_reachability_resend": {
            "wire_name": "contact.reachability.resend",
            "documentation": "\nResend the reachability validation message to the contact.\nICANN-accredited Registrars have to verify contact information.\nThe :meth:`contact.create`, :meth:`contact.update` and\n:meth:`domain.create` send messages to the created contact in order to\nvalidate its information.\nThis method is about to resend immediately this verification message\nif the contact has not acknowledge the previous message.\nUse the :meth:`contact.reachability.info` to get the validation status\nof the contact.\n\n.. versionadded:: 3.3.14",
            "errors": [],
            "input": {
                "shape": "ContactReachabilityResendRequest"
            },
            "output": {
                "shape": "ContactReachabilityResendResponse"
            }
        },
        "contact_release": {
            "wire_name": "contact.release",
            "documentation": "\nRelease a contact from a reseller account.\n\nA reseller account may manage multiple contacts.\nThis method allows releasing one of them.\n\n.. note:: Only resellers can use this method. It will have                   no effect for other kind of accounts.\n\n.. versionadded:: 3.2.9",
            "errors": [],
            "input": {
                "shape": "ContactReleaseRequest"
            },
            "output": {
                "shape": "ContactReleaseResponse"
            }
        },
        "contact_update": {
            "wire_name": "contact.update",
            "documentation": "\nUpdate a contact.\n\nIf the contact is associated to some domains, the same rules\nas in :func:`can_associate_domain` will be applied, and the\ndomains will be updated if possible.\n\nIf no **handle** is provided, information about the contact\nrepresented by **apikey** are returned.",
            "errors": [],
            "input": {
                "shape": "ContactUpdateRequest"
            },
            "output": {
                "shape": "ContactUpdateResponse"
            }
        },
        "datacenter_list": {
            "wire_name": "datacenter.list",
            "documentation": "\nList available datacenters.",
            "errors": [],
            "input": {
                "shape": "DatacenterListRequest"
            },
            "output": {
                "shape": "DatacenterListResponse"
            }
        },
        "disk_count": {
            "wire_name": "disk.count",
            "documentation": "\nCount the number of disks.",
            "errors": [],
            "input": {
                "shape": "DiskCountRequest"
            },
            "output": {
                "shape": "DiskCountResponse"
            }
        },
        "disk_create": {
            "wire_name": "disk.create",
            "documentation": "\nCreate an empty disk with respect to the attributes specified by           **disk_spec**.\nIt checks the available quota.",
            "errors": [],
            "input": {
                "shape": "DiskCreateRequest"
            },
            "output": {
                "shape": "DiskCreateResponse"
            }
        },
        "disk_create_from": {
            "wire_name": "disk.create_from",
            "documentation": "\nCreate a disk with the same data as the disk identified by          **src_disk_id**.\n``kernel_id``, ``kernel_cmdline``, ``size``, and ``label`` will          be copied from the source disk.",
            "errors": [],
            "input": {
                "shape": "DiskCreateFromRequest"
            },
            "output": {
                "shape": "DiskCreateFromResponse"
            }
        },
        "disk_delete": {
            "wire_name": "disk.delete",
            "documentation": "\nDelete a disk. ALL DATA WILL BE ERASED.\nFree the quota used by the disk size.\nThe disk must not be attached to a VM.",
            "errors": [],
            "input": {
                "shape": "DiskDeleteRequest"
            },
            "output": {
                "shape": "DiskDeleteResponse"
            }
        },
        "disk_info": {
            "wire_name": "disk.info",
            "documentation": "\nGet information about a disk.",
            "errors": [],
            "input": {
                "shape": "DiskInfoRequest"
            },
            "output": {
                "shape": "DiskInfoResponse"
            }
        },
        "disk_list": {
            "wire_name": "disk.list",
            "documentation": "\nList the disks.",
            "errors": [],
            "input": {
                "shape": "DiskListRequest"
            },
            "output": {
                "shape": "DiskListResponse"
            }
        },
        "disk_list_kernels": {
            "wire_name": "disk.list_kernels",
            "documentation": "\nList of available kernels for the given datacenter.",
            "errors": [],
            "input": {
                "shape": "DiskListKernelsRequest"
            },
            "output": {
                "shape": "DiskListKernelsResponse"
            }
        },
        "disk_list_options": {
            "wire_name": "disk.list_options",
            "documentation": "\nList available options for the given kernel version.",
            "errors": [],
            "input": {
                "shape": "DiskListOptionsRequest"
            },
            "output": {
                "shape": "DiskListOptionsResponse"
            }
        },
        "disk_rollback_from": {
            "wire_name": "disk.rollback_from",
            "documentation": "\nRollback a disk to the last taken snapshot.\n\nIt creates a disk to get a new id, then asks the backend to rollback\nthe disk with a 'disk_rollback' operation. The current source disk of\nthe snapshot is put in state 'rollback'. This state prevents\nmodifications on the disk from some operations. The disk is not\ncounted in the quota.\nThe caller gets the new disk id in the returned operating mapping with\nop['id'].",
            "errors": [],
            "input": {
                "shape": "DiskRollbackFromRequest"
            },
            "output": {
                "shape": "DiskRollbackFromResponse"
            }
        },
        "disk_update": {
            "wire_name": "disk.update",
            "documentation": "\nUpdate a disk with respect to the attributes specified by           **disk_spec**.\nBy now, you can't shrink a disk.\n\nIf you update *kernel* or *kernel_cmdline*, you will have to restart\nthe VM where the disk is attached.\n\nIf the size is modified the logged user must have enough\nfree disk quota.\n\nWhen updating *name* or *size*, if the disk is attached to a VM,\nthis VM will be automatically rebooted.",
            "errors": [],
            "input": {
                "shape": "DiskUpdateRequest"
            },
            "output": {
                "shape": "DiskUpdateResponse"
            }
        },
        "domain_autorenew_activate": {
            "wire_name": "domain.autorenew.activate",
            "documentation": "\nActivate the autorenewal functionality for a domain.\n\n.. versionadded:: 3.1.7\n.. versionchanged:: 3.3.0 added optional parameters for duration",
            "errors": [],
            "input": {
                "shape": "DomainAutorenewActivateRequest"
            },
            "output": {
                "shape": "DomainAutorenewActivateResponse"
            }
        },
        "domain_autorenew_deactivate": {
            "wire_name": "domain.autorenew.deactivate",
            "documentation": "\nDeactivate the autorenewal functionality for a domain.\n\n.. versionadded:: 3.1.7",
            "errors": [],
            "input": {
                "shape": "DomainAutorenewDeactivateRequest"
            },
            "output": {
                "shape": "DomainAutorenewDeactivateResponse"
            }
        },
        "domain_available": {
            "wire_name": "domain.available",
            "documentation": "\nCheck the availability of some domains.\n\n.. versionchanged:: 3.1.9 add ``opts`` parameter\n\n.. note:: If a language is specified in opts parameter,                   it will be for all IDN domains in the list\n\n.. note:: The size of the struct returned by this methods is the same                   as the number of **domains**.",
            "errors": [],
            "input": {
                "shape": "DomainAvailableRequest"
            },
            "output": {
                "shape": "DomainAvailableResponse"
            }
        },
        "domain_claims_accept": {
            "wire_name": "domain.claims.accept",
            "documentation": "\nAccept a specific claims notice\n\n.. warning:: you must forward the information provided by the             :meth:`info` method to your end customer to inform them that the              domain name in question is subject to a trademark claim.\n\n.. warning:: acceptations are only valid until the notice expires             (about 48h)\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainClaimsAcceptRequest"
            },
            "output": {
                "shape": "DomainClaimsAcceptResponse"
            }
        },
        "domain_claims_check": {
            "wire_name": "domain.claims.check",
            "documentation": "\nCheck for potential copyright claims on domains\n\nThis method is only useful for the first 90 days of a ngtld,         afterwards the results will always be negative.\n\n.. warning:: some ngtlds will keep the claim check for more             than 90 days, and some will keep them forever\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainClaimsCheckRequest"
            },
            "output": {
                "shape": "DomainClaimsCheckResponse"
            }
        },
        "domain_claims_info": {
            "wire_name": "domain.claims.info",
            "documentation": "\nReturns information about a trademark claims on a specific domain.\n\nThis structure contains the *notice_id* key needed by the\n:meth:`accept` method.\n\n.. warning:: This method will only return information for domains             with an existing (and non-expired) claim notice,             use the :meth:`check` method first.\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainClaimsInfoRequest"
            },
            "output": {
                "shape": "DomainClaimsInfoResponse"
            }
        },
        "domain_contacts_set": {
            "wire_name": "domain.contacts.set",
            "documentation": "\nSet the contacts of a domain.",
            "errors": [],
            "input": {
                "shape": "DomainContactsSetRequest"
            },
            "output": {
                "shape": "DomainContactsSetResponse"
            }
        },
        "domain_count": {
            "wire_name": "domain.count",
            "documentation": "\nCount domains associated to the contact represented by **apikey**.",
            "errors": [],
            "input": {
                "shape": "DomainCountRequest"
            },
            "output": {
                "shape": "DomainCountResponse"
            }
        },
        "domain_create": {
            "wire_name": "domain.create",
            "documentation": "\nCreate a domain.",
            "errors": [],
            "input": {
                "shape": "DomainCreateRequest"
            },
            "output": {
                "shape": "DomainCreateResponse"
            }
        },
        "domain_delete_accept": {
            "wire_name": "domain.delete.accept",
            "documentation": "\nPositive confirmation for the foa request.",
            "errors": [],
            "input": {
                "shape": "DomainDeleteAcceptRequest"
            },
            "output": {
                "shape": "DomainDeleteAcceptResponse"
            }
        },
        "domain_delete_available": {
            "wire_name": "domain.delete.available",
            "documentation": "\nCheck if a Domain is deletable\n\n.. versionadded:: 3.3.25\n.. warning:: This method is restricted",
            "errors": [],
            "input": {
                "shape": "DomainDeleteAvailableRequest"
            },
            "output": {
                "shape": "DomainDeleteAvailableResponse"
            }
        },
        "domain_delete_decline": {
            "wire_name": "domain.delete.decline",
            "documentation": "\nNegative confirmation for the foa request.",
            "errors": [],
            "input": {
                "shape": "DomainDeleteDeclineRequest"
            },
            "output": {
                "shape": "DomainDeleteDeclineResponse"
            }
        },
        "domain_delete_info": {
            "wire_name": "domain.delete.info",
            "documentation": "\nReturn the infos of the transfer.",
            "errors": [],
            "input": {
                "shape": "DomainDeleteInfoRequest"
            },
            "output": {
                "shape": "DomainDeleteInfoResponse"
            }
        },
        "domain_delete_proceed": {
            "wire_name": "domain.delete.proceed",
            "documentation": "\nDelete a Domain\n\n.. versionadded:: 3.3.25\n.. warning:: This method is restricted",
            "errors": [],
            "input": {
                "shape": "DomainDeleteProceedRequest"
            },
            "output": {
                "shape": "DomainDeleteProceedResponse"
            }
        },
        "domain_dnssec_create": {
            "wire_name": "domain.dnssec.create",
            "documentation": "\nCreate a new operation to add a DNSSEC key to a domain.\n\n.. note:: there is currently a limit of 4 keys per domain\n\n.. versionadded:: 3.1.0",
            "errors": [],
            "input": {
                "shape": "DomainDnssecCreateRequest"
            },
            "output": {
                "shape": "DomainDnssecCreateResponse"
            }
        },
        "domain_dnssec_delete": {
            "wire_name": "domain.dnssec.delete",
            "documentation": "\nCreate a new operation to delete a DNSSEC key\n(remove it from its domain)\n\n.. versionadded:: 3.1.0",
            "errors": [],
            "input": {
                "shape": "DomainDnssecDeleteRequest"
            },
            "output": {
                "shape": "DomainDnssecDeleteResponse"
            }
        },
        "domain_dnssec_list": {
            "wire_name": "domain.dnssec.list",
            "documentation": "\nList DNSSEC keys associated to the given domain.\n\n.. versionadded:: 3.1.0",
            "errors": [],
            "input": {
                "shape": "DomainDnssecListRequest"
            },
            "output": {
                "shape": "DomainDnssecListResponse"
            }
        },
        "domain_eoi_count": {
            "wire_name": "domain.eoi.count",
            "documentation": "\nCount Expression Of Interest.\n\n.. versionadded:: 3.2.6",
            "errors": [],
            "input": {
                "shape": "DomainEoiCountRequest"
            },
            "output": {
                "shape": "DomainEoiCountResponse"
            }
        },
        "domain_eoi_create": {
            "wire_name": "domain.eoi.create",
            "documentation": "\nCreate an Expression Of Interest for a given domain.\n\nExpression Of Interest is a reservation for a domain in a new tld\nthat is not available yet (e.g. gTLD).\n\n.. versionadded:: 3.2.6",
            "errors": [],
            "input": {
                "shape": "DomainEoiCreateRequest"
            },
            "output": {
                "shape": "DomainEoiCreateResponse"
            }
        },
        "domain_eoi_delete": {
            "wire_name": "domain.eoi.delete",
            "documentation": "\nDelete an Expression Of Interest for a given domain.\n\n.. versionadded:: 3.2.6",
            "errors": [],
            "input": {
                "shape": "DomainEoiDeleteRequest"
            },
            "output": {
                "shape": "DomainEoiDeleteResponse"
            }
        },
        "domain_eoi_info": {
            "wire_name": "domain.eoi.info",
            "documentation": "\nGet Expression Of Interest informations for a given domain.\n\n.. versionadded:: 3.2.6",
            "errors": [],
            "input": {
                "shape": "DomainEoiInfoRequest"
            },
            "output": {
                "shape": "DomainEoiInfoResponse"
            }
        },
        "domain_eoi_list": {
            "wire_name": "domain.eoi.list",
            "documentation": "\nList Expressions Of Interest.\n\n.. versionadded:: 3.2.6",
            "errors": [],
            "input": {
                "shape": "DomainEoiListRequest"
            },
            "output": {
                "shape": "DomainEoiListResponse"
            }
        },
        "domain_forward_count": {
            "wire_name": "domain.forward.count",
            "documentation": "\nCount mail forwards related to a domain.",
            "errors": [],
            "input": {
                "shape": "DomainForwardCountRequest"
            },
            "output": {
                "shape": "DomainForwardCountResponse"
            }
        },
        "domain_forward_create": {
            "wire_name": "domain.forward.create",
            "documentation": "\nCreate a mail forward.",
            "errors": [],
            "input": {
                "shape": "DomainForwardCreateRequest"
            },
            "output": {
                "shape": "DomainForwardCreateResponse"
            }
        },
        "domain_forward_delete": {
            "wire_name": "domain.forward.delete",
            "documentation": "\nDelete a forward.",
            "errors": [],
            "input": {
                "shape": "DomainForwardDeleteRequest"
            },
            "output": {
                "shape": "DomainForwardDeleteResponse"
            }
        },
        "domain_forward_list": {
            "wire_name": "domain.forward.list",
            "documentation": "\nList mail forwards related to a domain.",
            "errors": [],
            "input": {
                "shape": "DomainForwardListRequest"
            },
            "output": {
                "shape": "DomainForwardListResponse"
            }
        },
        "domain_forward_update": {
            "wire_name": "domain.forward.update",
            "documentation": "\nUpdate a forward.\n\nThis method will override email addresses for this forward",
            "errors": [],
            "input": {
                "shape": "DomainForwardUpdateRequest"
            },
            "output": {
                "shape": "DomainForwardUpdateResponse"
            }
        },
        "domain_gandimail_activate": {
            "wire_name": "domain.gandimail.activate",
            "documentation": "\nActivate the gandimail service for domain\n\nPlease don't activate gandimail on domains that do not actually use it\n(an external provider, or yourself).\nOtherwise they may not receive mail from our services.",
            "errors": [],
            "input": {
                "shape": "DomainGandimailActivateRequest"
            },
            "output": {
                "shape": "DomainGandimailActivateResponse"
            }
        },
        "domain_gandimail_deactivate": {
            "wire_name": "domain.gandimail.deactivate",
            "documentation": "\nDeactivate the gandimail service for domain\n\n@see:   L{activate}",
            "errors": [],
            "input": {
                "shape": "DomainGandimailDeactivateRequest"
            },
            "output": {
                "shape": "DomainGandimailDeactivateResponse"
            }
        },
        "domain_gandimail_info": {
            "wire_name": "domain.gandimail.info",
            "documentation": "\nInformation about a gandimail domain",
            "errors": [],
            "input": {
                "shape": "DomainGandimailInfoRequest"
            },
            "output": {
                "shape": "DomainGandimailInfoResponse"
            }
        },
        "domain_host_count": {
            "wire_name": "domain.host.count",
            "documentation": "\nCount glue records associated to the given domain.",
            "errors": [],
            "input": {
                "shape": "DomainHostCountRequest"
            },
            "output": {
                "shape": "DomainHostCountResponse"
            }
        },
        "domain_host_create": {
            "wire_name": "domain.host.create",
            "documentation": "\nCreate a glue record",
            "errors": [],
            "input": {
                "shape": "DomainHostCreateRequest"
            },
            "output": {
                "shape": "DomainHostCreateResponse"
            }
        },
        "domain_host_delete": {
            "wire_name": "domain.host.delete",
            "documentation": "\nDelete a glue record\n\n.. note:: it's impossible to delete a host that is still linked to         its domain (immediate error) \u2026 or any other domain at the same         registry (the operation will fail)",
            "errors": [],
            "input": {
                "shape": "DomainHostDeleteRequest"
            },
            "output": {
                "shape": "DomainHostDeleteResponse"
            }
        },
        "domain_host_info": {
            "wire_name": "domain.host.info",
            "documentation": "\nGet glue record information.",
            "errors": [],
            "input": {
                "shape": "DomainHostInfoRequest"
            },
            "output": {
                "shape": "DomainHostInfoResponse"
            }
        },
        "domain_host_list": {
            "wire_name": "domain.host.list",
            "documentation": "\nList glue records associated to the given domain.",
            "errors": [],
            "input": {
                "shape": "DomainHostListRequest"
            },
            "output": {
                "shape": "DomainHostListResponse"
            }
        },
        "domain_host_update": {
            "wire_name": "domain.host.update",
            "documentation": "\nUpdate a glue record",
            "errors": [],
            "input": {
                "shape": "DomainHostUpdateRequest"
            },
            "output": {
                "shape": "DomainHostUpdateResponse"
            }
        },
        "domain_info": {
            "wire_name": "domain.info",
            "documentation": "\nGet domain information.",
            "errors": [],
            "input": {
                "shape": "DomainInfoRequest"
            },
            "output": {
                "shape": "DomainInfoResponse"
            }
        },
        "domain_list": {
            "wire_name": "domain.list",
            "documentation": "\nList domains associated to the contact represented by **apikey**.",
            "errors": [],
            "input": {
                "shape": "DomainListRequest"
            },
            "output": {
                "shape": "DomainListResponse"
            }
        },
        "domain_mailbox_alias_set": {
            "wire_name": "domain.mailbox.alias.set",
            "documentation": "\nOverwrite aliases for a mailbox.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxAliasSetRequest"
            },
            "output": {
                "shape": "DomainMailboxAliasSetResponse"
            }
        },
        "domain_mailbox_count": {
            "wire_name": "domain.mailbox.count",
            "documentation": "\nCount mailboxes associated to the given domain.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxCountRequest"
            },
            "output": {
                "shape": "DomainMailboxCountResponse"
            }
        },
        "domain_mailbox_create": {
            "wire_name": "domain.mailbox.create",
            "documentation": "\nCreate a mailbox.\n\n.. versionchanged:: 3.1.8 Create a ``mailbox_add`` operation\n.. versionchanged:: 3.3.0 Operation renamed to ``mailbox_create``",
            "errors": [],
            "input": {
                "shape": "DomainMailboxCreateRequest"
            },
            "output": {
                "shape": "DomainMailboxCreateResponse"
            }
        },
        "domain_mailbox_delete": {
            "wire_name": "domain.mailbox.delete",
            "documentation": "\nDelete a mailbox\n\n.. versionchanged:: 3.1.8 Create ``mailbox_del`` operation\n.. versionchanged:: 3.3.0 Operation renamed to ``mailbox_delete``",
            "errors": [],
            "input": {
                "shape": "DomainMailboxDeleteRequest"
            },
            "output": {
                "shape": "DomainMailboxDeleteResponse"
            }
        },
        "domain_mailbox_info": {
            "wire_name": "domain.mailbox.info",
            "documentation": "\nGet mailbox information.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxInfoRequest"
            },
            "output": {
                "shape": "DomainMailboxInfoResponse"
            }
        },
        "domain_mailbox_list": {
            "wire_name": "domain.mailbox.list",
            "documentation": "\nList mailboxes associated to the given domain.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxListRequest"
            },
            "output": {
                "shape": "DomainMailboxListResponse"
            }
        },
        "domain_mailbox_purge": {
            "wire_name": "domain.mailbox.purge",
            "documentation": "\nPurge a mailbox",
            "errors": [],
            "input": {
                "shape": "DomainMailboxPurgeRequest"
            },
            "output": {
                "shape": "DomainMailboxPurgeResponse"
            }
        },
        "domain_mailbox_responder_activate": {
            "wire_name": "domain.mailbox.responder.activate",
            "documentation": "\nSchedule a responder activation.\n\n.. note:: The response email will be sent only once per day and             per sender.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxResponderActivateRequest"
            },
            "output": {
                "shape": "DomainMailboxResponderActivateResponse"
            }
        },
        "domain_mailbox_responder_deactivate": {
            "wire_name": "domain.mailbox.responder.deactivate",
            "documentation": "\nSchedule a responder deactivation.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxResponderDeactivateRequest"
            },
            "output": {
                "shape": "DomainMailboxResponderDeactivateResponse"
            }
        },
        "domain_mailbox_update": {
            "wire_name": "domain.mailbox.update",
            "documentation": "\nUpdate a mailbox.",
            "errors": [],
            "input": {
                "shape": "DomainMailboxUpdateRequest"
            },
            "output": {
                "shape": "DomainMailboxUpdateResponse"
            }
        },
        "domain_misc_ukrights": {
            "wire_name": "domain.misc.ukrights",
            "documentation": "\nRights of registration for .uk domains\n\nThis method is related to the rights of registration for .uk domains\n(started on June 10th, 2014 for a period of 5 years)\n\nFor each domain, returns whether or not the contact can register the\ndomain name, along with the reason.\n\nReason for a non-egibility can be one of *NAME*, *ORGANIZATION*,\n*STREET*, *CITY*, *STATE*, *ZIP*, *COUNTRY* or *EMAIL*\n\nThere is only one reason returned even if multiple contact\nproperties are not matching.\n\n**Warning:** this method only accepts first level *.uk* domains, and\n**not** second level domains (like *.co.uk*)\n\n.. versionadded:: 3.3.13",
            "errors": [],
            "input": {
                "shape": "DomainMiscUkrightsRequest"
            },
            "output": {
                "shape": "DomainMiscUkrightsResponse"
            }
        },
        "domain_nameservers_set": {
            "wire_name": "domain.nameservers.set",
            "documentation": "\nSet domain nameservers.",
            "errors": [],
            "input": {
                "shape": "DomainNameserversSetRequest"
            },
            "output": {
                "shape": "DomainNameserversSetResponse"
            }
        },
        "domain_owner_set": {
            "wire_name": "domain.owner.set",
            "documentation": "\nDefine the new owner of a domain and with him/her the\n'admin', 'tech' and 'bill' contacts.\n\nA special method is needed for this action because\nspecial rules may apply regarding of the tld.",
            "errors": [],
            "input": {
                "shape": "DomainOwnerSetRequest"
            },
            "output": {
                "shape": "DomainOwnerSetResponse"
            }
        },
        "domain_packmail_autorenew": {
            "wire_name": "domain.packmail.autorenew",
            "documentation": "\nActivate the autorenew for a Packmail.",
            "errors": [],
            "input": {
                "shape": "DomainPackmailAutorenewRequest"
            },
            "output": {
                "shape": "DomainPackmailAutorenewResponse"
            }
        },
        "domain_packmail_create": {
            "wire_name": "domain.packmail.create",
            "documentation": "\nSwitch a Gandi Mail to the ``paid`` version, known as Packmail.",
            "errors": [],
            "input": {
                "shape": "DomainPackmailCreateRequest"
            },
            "output": {
                "shape": "DomainPackmailCreateResponse"
            }
        },
        "domain_packmail_delete": {
            "wire_name": "domain.packmail.delete",
            "documentation": "\nSwitch back a Gandi Mail to the ``free`` version.",
            "errors": [],
            "input": {
                "shape": "DomainPackmailDeleteRequest"
            },
            "output": {
                "shape": "DomainPackmailDeleteResponse"
            }
        },
        "domain_packmail_info": {
            "wire_name": "domain.packmail.info",
            "documentation": "\nGet Gandi Mail information.",
            "errors": [],
            "input": {
                "shape": "DomainPackmailInfoRequest"
            },
            "output": {
                "shape": "DomainPackmailInfoResponse"
            }
        },
        "domain_packmail_renew": {
            "wire_name": "domain.packmail.renew",
            "documentation": "\nRenew a Packmail.",
            "errors": [],
            "input": {
                "shape": "DomainPackmailRenewRequest"
            },
            "output": {
                "shape": "DomainPackmailRenewResponse"
            }
        },
        "domain_packmail_update": {
            "wire_name": "domain.packmail.update",
            "documentation": "\nChange the storage quota of a Packmail.",
            "errors": [],
            "input": {
                "shape": "DomainPackmailUpdateRequest"
            },
            "output": {
                "shape": "DomainPackmailUpdateResponse"
            }
        },
        "domain_price": {
            "wire_name": "domain.price",
            "documentation": "\nReturn the price of some domains, and their availablity.\n\n.. versionadded:: 3.3.28",
            "errors": [],
            "input": {
                "shape": "DomainPriceRequest"
            },
            "output": {
                "shape": "DomainPriceResponse"
            }
        },
        "domain_push": {
            "wire_name": "domain.push",
            "documentation": "\nSends .DE / .AT domains to transit / billwithdraw status and change the tag\nor delete a .UK domain.\n\n.. versionadded:: 3.3.30",
            "errors": [],
            "input": {
                "shape": "DomainPushRequest"
            },
            "output": {
                "shape": "DomainPushResponse"
            }
        },
        "domain_release": {
            "wire_name": "domain.release",
            "documentation": "\nRelease a domain from a reseller account\n\n.. note:: Only resellers can use this method. It will have                   no effect for other kind of accounts.\n\n.. versionadded:: 3.2.10",
            "errors": [],
            "input": {
                "shape": "DomainReleaseRequest"
            },
            "output": {
                "shape": "DomainReleaseResponse"
            }
        },
        "domain_renew": {
            "wire_name": "domain.renew",
            "documentation": "\nRenew a domain.",
            "errors": [],
            "input": {
                "shape": "DomainRenewRequest"
            },
            "output": {
                "shape": "DomainRenewResponse"
            }
        },
        "domain_reseller_set": {
            "wire_name": "domain.reseller.set",
            "documentation": "\nSet a new reseller to a domain\n\n.. versionadded:: 3.1.9",
            "errors": [],
            "input": {
                "shape": "DomainResellerSetRequest"
            },
            "output": {
                "shape": "DomainResellerSetResponse"
            }
        },
        "domain_restore": {
            "wire_name": "domain.restore",
            "documentation": "\nRestore a domain.\n\n.. versionadded:: 3.1.6",
            "errors": [],
            "input": {
                "shape": "DomainRestoreRequest"
            },
            "output": {
                "shape": "DomainRestoreResponse"
            }
        },
        "domain_smd_count": {
            "wire_name": "domain.smd.count",
            "documentation": "\nCount stored SMDs\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainSmdCountRequest"
            },
            "output": {
                "shape": "DomainSmdCountResponse"
            }
        },
        "domain_smd_create": {
            "wire_name": "domain.smd.create",
            "documentation": "\nCreate a new SMD element from a SMD file\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainSmdCreateRequest"
            },
            "output": {
                "shape": "DomainSmdCreateResponse"
            }
        },
        "domain_smd_delete": {
            "wire_name": "domain.smd.delete",
            "documentation": "\nDelete a SMD\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainSmdDeleteRequest"
            },
            "output": {
                "shape": "DomainSmdDeleteResponse"
            }
        },
        "domain_smd_extract": {
            "wire_name": "domain.smd.extract",
            "documentation": "\nExtract information from a Signed Mark Data file contents\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainSmdExtractRequest"
            },
            "output": {
                "shape": "DomainSmdExtractResponse"
            }
        },
        "domain_smd_info": {
            "wire_name": "domain.smd.info",
            "documentation": "\nVarious information about a SMD\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainSmdInfoRequest"
            },
            "output": {
                "shape": "DomainSmdInfoResponse"
            }
        },
        "domain_smd_list": {
            "wire_name": "domain.smd.list",
            "documentation": "\nList stored SMDs\n\n.. versionadded:: 3.3.11",
            "errors": [],
            "input": {
                "shape": "DomainSmdListRequest"
            },
            "output": {
                "shape": "DomainSmdListResponse"
            }
        },
        "domain_status_lock": {
            "wire_name": "domain.status.lock",
            "documentation": "\nLock a domain.\n\nSet the ``clientTransferProhibited`` status value.",
            "errors": [],
            "input": {
                "shape": "DomainStatusLockRequest"
            },
            "output": {
                "shape": "DomainStatusLockResponse"
            }
        },
        "domain_status_unlock": {
            "wire_name": "domain.status.unlock",
            "documentation": "\nUnlock a domain.\n\nUnset the ``clientTransferProhibited`` status value.",
            "errors": [],
            "input": {
                "shape": "DomainStatusUnlockRequest"
            },
            "output": {
                "shape": "DomainStatusUnlockResponse"
            }
        },
        "domain_tld_list": {
            "wire_name": "domain.tld.list",
            "documentation": "\nList available TLD extensions.",
            "errors": [],
            "input": {
                "shape": "DomainTldListRequest"
            },
            "output": {
                "shape": "DomainTldListResponse"
            }
        },
        "domain_tld_region": {
            "wire_name": "domain.tld.region",
            "documentation": "\nList available TLD extensions folded by region.",
            "errors": [],
            "input": {
                "shape": "DomainTldRegionRequest"
            },
            "output": {
                "shape": "DomainTldRegionResponse"
            }
        },
        "domain_transferin_available": {
            "wire_name": "domain.transferin.available",
            "documentation": "\nCheck if a Domain is transferable\n\n.. versionadded:: 3.1.9",
            "errors": [],
            "input": {
                "shape": "DomainTransferinAvailableRequest"
            },
            "output": {
                "shape": "DomainTransferinAvailableResponse"
            }
        },
        "domain_transferin_proceed": {
            "wire_name": "domain.transferin.proceed",
            "documentation": "\nTransfer a domain",
            "errors": [],
            "input": {
                "shape": "DomainTransferinProceedRequest"
            },
            "output": {
                "shape": "DomainTransferinProceedResponse"
            }
        },
        "domain_webredir_count": {
            "wire_name": "domain.webredir.count",
            "documentation": "\nCount redirections associated to the given domain.",
            "errors": [],
            "input": {
                "shape": "DomainWebredirCountRequest"
            },
            "output": {
                "shape": "DomainWebredirCountResponse"
            }
        },
        "domain_webredir_create": {
            "wire_name": "domain.webredir.create",
            "documentation": "\nCreate a web redirection.",
            "errors": [],
            "input": {
                "shape": "DomainWebredirCreateRequest"
            },
            "output": {
                "shape": "DomainWebredirCreateResponse"
            }
        },
        "domain_webredir_delete": {
            "wire_name": "domain.webredir.delete",
            "documentation": "\nDelete a web redirection.",
            "errors": [],
            "input": {
                "shape": "DomainWebredirDeleteRequest"
            },
            "output": {
                "shape": "DomainWebredirDeleteResponse"
            }
        },
        "domain_webredir_list": {
            "wire_name": "domain.webredir.list",
            "documentation": "\nList redirections associated to the given domain.",
            "errors": [],
            "input": {
                "shape": "DomainWebredirListRequest"
            },
            "output": {
                "shape": "DomainWebredirListResponse"
            }
        },
        "domain_webredir_update": {
            "wire_name": "domain.webredir.update",
            "documentation": "\nUpdate a web redirection.",
            "errors": [],
            "input": {
                "shape": "DomainWebredirUpdateRequest"
            },
            "output": {
                "shape": "DomainWebredirUpdateResponse"
            }
        },
        "domain_zone_clone": {
            "wire_name": "domain.zone.clone",
            "documentation": "\nClone a zone and its records.\n\nThis creates a new zone based on the zone referenced by\n**zone_id** and its version referenced by **version_id**.\n\nIf a **version_id** of ``0`` is provided, the current version\nof the zone referenced by **zone_id** will be used.",
            "errors": [],
            "input": {
                "shape": "DomainZoneCloneRequest"
            },
            "output": {
                "shape": "DomainZoneCloneResponse"
            }
        },
        "domain_zone_count": {
            "wire_name": "domain.zone.count",
            "documentation": "\nCounts accessible zones.",
            "errors": [],
            "input": {
                "shape": "DomainZoneCountRequest"
            },
            "output": {
                "shape": "DomainZoneCountResponse"
            }
        },
        "domain_zone_create": {
            "wire_name": "domain.zone.create",
            "documentation": "\nCreate an empty zone.",
            "errors": [],
            "input": {
                "shape": "DomainZoneCreateRequest"
            },
            "output": {
                "shape": "DomainZoneCreateResponse"
            }
        },
        "domain_zone_delete": {
            "wire_name": "domain.zone.delete",
            "documentation": "\nDelete a zone.\n\n.. warning:: All versions and records of the given zone                      are also deleted.",
            "errors": [],
            "input": {
                "shape": "DomainZoneDeleteRequest"
            },
            "output": {
                "shape": "DomainZoneDeleteResponse"
            }
        },
        "domain_zone_info": {
            "wire_name": "domain.zone.info",
            "documentation": "\nGet zone information.",
            "errors": [],
            "input": {
                "shape": "DomainZoneInfoRequest"
            },
            "output": {
                "shape": "DomainZoneInfoResponse"
            }
        },
        "domain_zone_list": {
            "wire_name": "domain.zone.list",
            "documentation": "\nList accessible DNS zones.\n\nAccessible zones fit in three categories: public Gandi zones,\nzones created by the contact and active zones linked to\ndomains for which the contact represented by **apikey** is at\nleast technical.",
            "errors": [],
            "input": {
                "shape": "DomainZoneListRequest"
            },
            "output": {
                "shape": "DomainZoneListResponse"
            }
        },
        "domain_zone_record_add": {
            "wire_name": "domain.zone.record.add",
            "documentation": "\nAdd a new record to zone/version",
            "errors": [],
            "input": {
                "shape": "DomainZoneRecordAddRequest"
            },
            "output": {
                "shape": "DomainZoneRecordAddResponse"
            }
        },
        "domain_zone_record_count": {
            "wire_name": "domain.zone.record.count",
            "documentation": "\nCount number of records for a given zone/version,\nwith an optional filter (see :meth:`record_list`)",
            "errors": [],
            "input": {
                "shape": "DomainZoneRecordCountRequest"
            },
            "output": {
                "shape": "DomainZoneRecordCountResponse"
            }
        },
        "domain_zone_record_delete": {
            "wire_name": "domain.zone.record.delete",
            "documentation": "\nRemove some records from a zone/version,\nfilters are the same as for :meth:`list`",
            "errors": [],
            "input": {
                "shape": "DomainZoneRecordDeleteRequest"
            },
            "output": {
                "shape": "DomainZoneRecordDeleteResponse"
            }
        },
        "domain_zone_record_list": {
            "wire_name": "domain.zone.record.list",
            "documentation": "\nList records of a version of a DNS zone.",
            "errors": [],
            "input": {
                "shape": "DomainZoneRecordListRequest"
            },
            "output": {
                "shape": "DomainZoneRecordListResponse"
            }
        },
        "domain_zone_record_set": {
            "wire_name": "domain.zone.record.set",
            "documentation": "\nSets the records for a zone/version",
            "errors": [],
            "input": {
                "shape": "DomainZoneRecordSetRequest"
            },
            "output": {
                "shape": "DomainZoneRecordSetResponse"
            }
        },
        "domain_zone_record_update": {
            "wire_name": "domain.zone.record.update",
            "documentation": "\nUpdate one record by its id.\n\n.. versionadded:: 3.1.7",
            "errors": [],
            "input": {
                "shape": "DomainZoneRecordUpdateRequest"
            },
            "output": {
                "shape": "DomainZoneRecordUpdateResponse"
            }
        },
        "domain_zone_set": {
            "wire_name": "domain.zone.set",
            "documentation": "\nSet the current zone of a domain.\n\n.. warning::\nIt can take up to 20 minutes for a new zone or version to\nbe loaded on Gandi's nameservers. See `Gandi DNS FAQ\n<http://wiki.gandi.net/en/dns/zone/faq#how_can_i_manage_my_gandi_dns_zone_file>`_.",
            "errors": [],
            "input": {
                "shape": "DomainZoneSetRequest"
            },
            "output": {
                "shape": "DomainZoneSetResponse"
            }
        },
        "domain_zone_update": {
            "wire_name": "domain.zone.update",
            "documentation": "\nUpdate a zone.",
            "errors": [],
            "input": {
                "shape": "DomainZoneUpdateRequest"
            },
            "output": {
                "shape": "DomainZoneUpdateResponse"
            }
        },
        "domain_zone_version_count": {
            "wire_name": "domain.zone.version.count",
            "documentation": "\nCount the versions associated with a zone.\n\n.. versionadded:: 3.1.7",
            "errors": [],
            "input": {
                "shape": "DomainZoneVersionCountRequest"
            },
            "output": {
                "shape": "DomainZoneVersionCountResponse"
            }
        },
        "domain_zone_version_delete": {
            "wire_name": "domain.zone.version.delete",
            "documentation": "\nDelete a specific version of a zone.",
            "errors": [],
            "input": {
                "shape": "DomainZoneVersionDeleteRequest"
            },
            "output": {
                "shape": "DomainZoneVersionDeleteResponse"
            }
        },
        "domain_zone_version_list": {
            "wire_name": "domain.zone.version.list",
            "documentation": "\nList a zone's versions, with their creation date.\n\n.. versionadded:: 3.1.7",
            "errors": [],
            "input": {
                "shape": "DomainZoneVersionListRequest"
            },
            "output": {
                "shape": "DomainZoneVersionListResponse"
            }
        },
        "domain_zone_version_new": {
            "wire_name": "domain.zone.version.new",
            "documentation": "\nCreate a new version from another version.\nThis will duplicate the version's records.\n\nNote that cloned records will have new identifiers.",
            "errors": [],
            "input": {
                "shape": "DomainZoneVersionNewRequest"
            },
            "output": {
                "shape": "DomainZoneVersionNewResponse"
            }
        },
        "domain_zone_version_set": {
            "wire_name": "domain.zone.version.set",
            "documentation": "\nSet the active version of a zone.\n\n.. warning::\nIt can take up to 20 minutes for a new zone or version to\nbe loaded on Gandi's nameservers. See `Gandi DNS FAQ\n<http://wiki.gandi.net/en/dns/zone/faq#how_can_i_manage_my_gandi_dns_zone_file>`_.",
            "errors": [],
            "input": {
                "shape": "DomainZoneVersionSetRequest"
            },
            "output": {
                "shape": "DomainZoneVersionSetResponse"
            }
        },
        "hosting_account_credit": {
            "wire_name": "hosting.account.credit",
            "documentation": "\nBuy credits.\n\n.. versionadded:: 3.3.26",
            "errors": [],
            "input": {
                "shape": "HostingAccountCreditRequest"
            },
            "output": {
                "shape": "HostingAccountCreditResponse"
            }
        },
        "hosting_account_info": {
            "wire_name": "hosting.account.info",
            "documentation": "\nGet information about a hosting account.",
            "errors": [],
            "input": {
                "shape": "HostingAccountInfoRequest"
            },
            "output": {
                "shape": "HostingAccountInfoResponse"
            }
        },
        "hosting_catalog_list": {
            "wire_name": "hosting.catalog.list",
            "documentation": "\nList credits consumption by resource",
            "errors": [],
            "input": {
                "shape": "HostingCatalogListRequest"
            },
            "output": {
                "shape": "HostingCatalogListResponse"
            }
        },
        "hosting_catalog_price": {
            "wire_name": "hosting.catalog.price",
            "documentation": "\nRetrieve the prices for a given product_type/quantity/flavor/state.\n\nPrices are returned in the same order they where entered.",
            "errors": [],
            "input": {
                "shape": "HostingCatalogPriceRequest"
            },
            "output": {
                "shape": "HostingCatalogPriceResponse"
            }
        },
        "hosting_datacenter_list": {
            "wire_name": "hosting.datacenter.list",
            "documentation": "\nList available datacenters.",
            "errors": [],
            "input": {
                "shape": "HostingDatacenterListRequest"
            },
            "output": {
                "shape": "HostingDatacenterListResponse"
            }
        },
        "hosting_disk_count": {
            "wire_name": "hosting.disk.count",
            "documentation": "\nCount the number of disks.",
            "errors": [],
            "input": {
                "shape": "HostingDiskCountRequest"
            },
            "output": {
                "shape": "HostingDiskCountResponse"
            }
        },
        "hosting_disk_create": {
            "wire_name": "hosting.disk.create",
            "documentation": "\nCreate an empty disk with respect to the attributes specified by           **disk_spec**.\nIt checks the available quota.",
            "errors": [],
            "input": {
                "shape": "HostingDiskCreateRequest"
            },
            "output": {
                "shape": "HostingDiskCreateResponse"
            }
        },
        "hosting_disk_create_from": {
            "wire_name": "hosting.disk.create_from",
            "documentation": "\nCreate a disk with the same data as the disk identified by          **src_disk_id**.\n``kernel_id``, ``kernel_cmdline``, ``size``, and ``label`` will          be copied from the source disk.",
            "errors": [],
            "input": {
                "shape": "HostingDiskCreateFromRequest"
            },
            "output": {
                "shape": "HostingDiskCreateFromResponse"
            }
        },
        "hosting_disk_delete": {
            "wire_name": "hosting.disk.delete",
            "documentation": "\nDelete a disk. ALL DATA WILL BE ERASED.\nFree the quota used by the disk size.\nThe disk must not be attached to a VM.",
            "errors": [],
            "input": {
                "shape": "HostingDiskDeleteRequest"
            },
            "output": {
                "shape": "HostingDiskDeleteResponse"
            }
        },
        "hosting_disk_info": {
            "wire_name": "hosting.disk.info",
            "documentation": "\nGet information about a disk.",
            "errors": [],
            "input": {
                "shape": "HostingDiskInfoRequest"
            },
            "output": {
                "shape": "HostingDiskInfoResponse"
            }
        },
        "hosting_disk_list": {
            "wire_name": "hosting.disk.list",
            "documentation": "\nList the disks.",
            "errors": [],
            "input": {
                "shape": "HostingDiskListRequest"
            },
            "output": {
                "shape": "HostingDiskListResponse"
            }
        },
        "hosting_disk_list_kernels": {
            "wire_name": "hosting.disk.list_kernels",
            "documentation": "\nList of available kernels for the given datacenter.",
            "errors": [],
            "input": {
                "shape": "HostingDiskListKernelsRequest"
            },
            "output": {
                "shape": "HostingDiskListKernelsResponse"
            }
        },
        "hosting_disk_list_options": {
            "wire_name": "hosting.disk.list_options",
            "documentation": "\nList available options for the given kernel version.",
            "errors": [],
            "input": {
                "shape": "HostingDiskListOptionsRequest"
            },
            "output": {
                "shape": "HostingDiskListOptionsResponse"
            }
        },
        "hosting_disk_rollback_from": {
            "wire_name": "hosting.disk.rollback_from",
            "documentation": "\nRollback a disk to the last taken snapshot.\n\nIt creates a disk to get a new id, then asks the backend to rollback\nthe disk with a 'disk_rollback' operation. The current source disk of\nthe snapshot is put in state 'rollback'. This state prevents\nmodifications on the disk from some operations. The disk is not\ncounted in the quota.\nThe caller gets the new disk id in the returned operating mapping with\nop['id'].",
            "errors": [],
            "input": {
                "shape": "HostingDiskRollbackFromRequest"
            },
            "output": {
                "shape": "HostingDiskRollbackFromResponse"
            }
        },
        "hosting_disk_update": {
            "wire_name": "hosting.disk.update",
            "documentation": "\nUpdate a disk with respect to the attributes specified by           **disk_spec**.\nBy now, you can't shrink a disk.\n\nIf you update *kernel* or *kernel_cmdline*, you will have to restart\nthe VM where the disk is attached.\n\nIf the size is modified the logged user must have enough\nfree disk quota.\n\nWhen updating *name* or *size*, if the disk is attached to a VM,\nthis VM will be automatically rebooted.",
            "errors": [],
            "input": {
                "shape": "HostingDiskUpdateRequest"
            },
            "output": {
                "shape": "HostingDiskUpdateResponse"
            }
        },
        "hosting_iface_count": {
            "wire_name": "hosting.iface.count",
            "documentation": "\nCount network interfaces.",
            "errors": [],
            "input": {
                "shape": "HostingIfaceCountRequest"
            },
            "output": {
                "shape": "HostingIfaceCountResponse"
            }
        },
        "hosting_iface_create": {
            "wire_name": "hosting.iface.create",
            "documentation": "\nCreate a network interface using attributes specified by **iface_spec**.",
            "errors": [],
            "input": {
                "shape": "HostingIfaceCreateRequest"
            },
            "output": {
                "shape": "HostingIfaceCreateResponse"
            }
        },
        "hosting_iface_delete": {
            "wire_name": "hosting.iface.delete",
            "documentation": "\nDelete a network interface.",
            "errors": [],
            "input": {
                "shape": "HostingIfaceDeleteRequest"
            },
            "output": {
                "shape": "HostingIfaceDeleteResponse"
            }
        },
        "hosting_iface_info": {
            "wire_name": "hosting.iface.info",
            "documentation": "\nGet information about a network interface.",
            "errors": [],
            "input": {
                "shape": "HostingIfaceInfoRequest"
            },
            "output": {
                "shape": "HostingIfaceInfoResponse"
            }
        },
        "hosting_iface_list": {
            "wire_name": "hosting.iface.list",
            "documentation": "\nList network interfaces.",
            "errors": [],
            "input": {
                "shape": "HostingIfaceListRequest"
            },
            "output": {
                "shape": "HostingIfaceListResponse"
            }
        },
        "hosting_iface_update": {
            "wire_name": "hosting.iface.update",
            "documentation": "\nUpdates a network interface using attributes specified by **iface_spec**.",
            "errors": [],
            "input": {
                "shape": "HostingIfaceUpdateRequest"
            },
            "output": {
                "shape": "HostingIfaceUpdateResponse"
            }
        },
        "hosting_image_info": {
            "wire_name": "hosting.image.info",
            "documentation": "\nGet information about a disk image.",
            "errors": [],
            "input": {
                "shape": "HostingImageInfoRequest"
            },
            "output": {
                "shape": "HostingImageInfoResponse"
            }
        },
        "hosting_image_list": {
            "wire_name": "hosting.image.list",
            "documentation": "\nList available disk images.",
            "errors": [],
            "input": {
                "shape": "HostingImageListRequest"
            },
            "output": {
                "shape": "HostingImageListResponse"
            }
        },
        "hosting_ip_count": {
            "wire_name": "hosting.ip.count",
            "documentation": "\nCount IP addresses.",
            "errors": [],
            "input": {
                "shape": "HostingIpCountRequest"
            },
            "output": {
                "shape": "HostingIpCountResponse"
            }
        },
        "hosting_ip_info": {
            "wire_name": "hosting.ip.info",
            "documentation": "\nGet information about an IP Address.",
            "errors": [],
            "input": {
                "shape": "HostingIpInfoRequest"
            },
            "output": {
                "shape": "HostingIpInfoResponse"
            }
        },
        "hosting_ip_list": {
            "wire_name": "hosting.ip.list",
            "documentation": "\nList IP addresses.",
            "errors": [],
            "input": {
                "shape": "HostingIpListRequest"
            },
            "output": {
                "shape": "HostingIpListResponse"
            }
        },
        "hosting_ip_update": {
            "wire_name": "hosting.ip.update",
            "documentation": "\nUpdate an IP address using the attributes specified by **ip_spec**",
            "errors": [],
            "input": {
                "shape": "HostingIpUpdateRequest"
            },
            "output": {
                "shape": "HostingIpUpdateResponse"
            }
        },
        "hosting_metric_available": {
            "wire_name": "hosting.metric.available",
            "documentation": "\nList availables metrics for hosting resources.",
            "errors": [],
            "input": {
                "shape": "HostingMetricAvailableRequest"
            },
            "output": {
                "shape": "HostingMetricAvailableResponse"
            }
        },
        "hosting_metric_query": {
            "wire_name": "hosting.metric.query",
            "documentation": "\nQuery metrics for hosting resources.\nAll dates are in UTC.",
            "errors": [],
            "input": {
                "shape": "HostingMetricQueryRequest"
            },
            "output": {
                "shape": "HostingMetricQueryResponse"
            }
        },
        "hosting_package_count": {
            "wire_name": "hosting.package.count",
            "documentation": "\nThis method returns the number of publicly\navailable hosting products packages.\nFilters can be used in order to refine the results.",
            "errors": [],
            "input": {
                "shape": "HostingPackageCountRequest"
            },
            "output": {
                "shape": "HostingPackageCountResponse"
            }
        },
        "hosting_package_list": {
            "wire_name": "hosting.package.list",
            "documentation": "\nThis method returns the results of a search executed on publicly\navailable hosting products packages.\nFilters can be used in order to refine the results.",
            "errors": [],
            "input": {
                "shape": "HostingPackageListRequest"
            },
            "output": {
                "shape": "HostingPackageListResponse"
            }
        },
        "hosting_product_create": {
            "wire_name": "hosting.product.create",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "HostingProductCreateRequest"
            },
            "output": {
                "shape": "HostingProductCreateResponse"
            }
        },
        "hosting_product_delete": {
            "wire_name": "hosting.product.delete",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "HostingProductDeleteRequest"
            },
            "output": {
                "shape": "HostingProductDeleteResponse"
            }
        },
        "hosting_product_renew": {
            "wire_name": "hosting.product.renew",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "HostingProductRenewRequest"
            },
            "output": {
                "shape": "HostingProductRenewResponse"
            }
        },
        "hosting_product_update": {
            "wire_name": "hosting.product.update",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "HostingProductUpdateRequest"
            },
            "output": {
                "shape": "HostingProductUpdateResponse"
            }
        },
        "hosting_rating_list": {
            "wire_name": "hosting.rating.list",
            "documentation": "\nList credits consumption by resource",
            "errors": [],
            "input": {
                "shape": "HostingRatingListRequest"
            },
            "output": {
                "shape": "HostingRatingListResponse"
            }
        },
        "hosting_rproxy_count": {
            "wire_name": "hosting.rproxy.count",
            "documentation": "\nCount reverse proxies.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyCountRequest"
            },
            "output": {
                "shape": "HostingRproxyCountResponse"
            }
        },
        "hosting_rproxy_create": {
            "wire_name": "hosting.rproxy.create",
            "documentation": "\nCreate a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyCreateRequest"
            },
            "output": {
                "shape": "HostingRproxyCreateResponse"
            }
        },
        "hosting_rproxy_delete": {
            "wire_name": "hosting.rproxy.delete",
            "documentation": "\nDelete a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyDeleteRequest"
            },
            "output": {
                "shape": "HostingRproxyDeleteResponse"
            }
        },
        "hosting_rproxy_info": {
            "wire_name": "hosting.rproxy.info",
            "documentation": "\nGet reverse proxy information.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyInfoRequest"
            },
            "output": {
                "shape": "HostingRproxyInfoResponse"
            }
        },
        "hosting_rproxy_list": {
            "wire_name": "hosting.rproxy.list",
            "documentation": "\nList reverse proxies.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyListRequest"
            },
            "output": {
                "shape": "HostingRproxyListResponse"
            }
        },
        "hosting_rproxy_probe_check_server": {
            "wire_name": "hosting.rproxy.probe.check_server",
            "documentation": "\nTest the current probe on a server.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyProbeCheckServerRequest"
            },
            "output": {
                "shape": "HostingRproxyProbeCheckServerResponse"
            }
        },
        "hosting_rproxy_probe_disable": {
            "wire_name": "hosting.rproxy.probe.disable",
            "documentation": "\nDisable probe for a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyProbeDisableRequest"
            },
            "output": {
                "shape": "HostingRproxyProbeDisableResponse"
            }
        },
        "hosting_rproxy_probe_enable": {
            "wire_name": "hosting.rproxy.probe.enable",
            "documentation": "\nEnable probe for a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyProbeEnableRequest"
            },
            "output": {
                "shape": "HostingRproxyProbeEnableResponse"
            }
        },
        "hosting_rproxy_probe_test": {
            "wire_name": "hosting.rproxy.probe.test",
            "documentation": "\nTest a given probe on all active servers of a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyProbeTestRequest"
            },
            "output": {
                "shape": "HostingRproxyProbeTestResponse"
            }
        },
        "hosting_rproxy_probe_update": {
            "wire_name": "hosting.rproxy.probe.update",
            "documentation": "\nUpdate probe definition for a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyProbeUpdateRequest"
            },
            "output": {
                "shape": "HostingRproxyProbeUpdateResponse"
            }
        },
        "hosting_rproxy_server_count": {
            "wire_name": "hosting.rproxy.server.count",
            "documentation": "\nCount reverse proxy servers.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyServerCountRequest"
            },
            "output": {
                "shape": "HostingRproxyServerCountResponse"
            }
        },
        "hosting_rproxy_server_create": {
            "wire_name": "hosting.rproxy.server.create",
            "documentation": "\nCreate a server for a reverse proxy.\n\n.. versionadded:: 3.3.7\n\n.. note::\nThe  server will be declared in the instance\n**rproxy_id**",
            "errors": [],
            "input": {
                "shape": "HostingRproxyServerCreateRequest"
            },
            "output": {
                "shape": "HostingRproxyServerCreateResponse"
            }
        },
        "hosting_rproxy_server_delete": {
            "wire_name": "hosting.rproxy.server.delete",
            "documentation": "\nDelete a server of a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyServerDeleteRequest"
            },
            "output": {
                "shape": "HostingRproxyServerDeleteResponse"
            }
        },
        "hosting_rproxy_server_disable": {
            "wire_name": "hosting.rproxy.server.disable",
            "documentation": "\nDisable a server.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyServerDisableRequest"
            },
            "output": {
                "shape": "HostingRproxyServerDisableResponse"
            }
        },
        "hosting_rproxy_server_enable": {
            "wire_name": "hosting.rproxy.server.enable",
            "documentation": "\nEnable a server.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyServerEnableRequest"
            },
            "output": {
                "shape": "HostingRproxyServerEnableResponse"
            }
        },
        "hosting_rproxy_server_list": {
            "wire_name": "hosting.rproxy.server.list",
            "documentation": "\nList reverse proxy servers.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyServerListRequest"
            },
            "output": {
                "shape": "HostingRproxyServerListResponse"
            }
        },
        "hosting_rproxy_update": {
            "wire_name": "hosting.rproxy.update",
            "documentation": "\nUpdate a reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyUpdateRequest"
            },
            "output": {
                "shape": "HostingRproxyUpdateResponse"
            }
        },
        "hosting_rproxy_vhost_alter_zone": {
            "wire_name": "hosting.rproxy.vhost.alter_zone",
            "documentation": "\nCreate a record in the domain zone for this virtual host.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostAlterZoneRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostAlterZoneResponse"
            }
        },
        "hosting_rproxy_vhost_count": {
            "wire_name": "hosting.rproxy.vhost.count",
            "documentation": "\nCount virtual hosts related to reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostCountRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostCountResponse"
            }
        },
        "hosting_rproxy_vhost_create": {
            "wire_name": "hosting.rproxy.vhost.create",
            "documentation": "\nCreate a virtual host.\n\n.. versionadded:: 3.3.7\n\n.. note::\nThe virtual host will be declared in the instance\n**rproxy_id**\n\n.. warning::\nIf you are not using Gandi DNS,\na DNS record must be created for this host name separately.\nsee :ref:`rproxy-dns-check` for more information.",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostCreateRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostCreateResponse"
            }
        },
        "hosting_rproxy_vhost_delete": {
            "wire_name": "hosting.rproxy.vhost.delete",
            "documentation": "\nDelete a virtual host.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostDeleteRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostDeleteResponse"
            }
        },
        "hosting_rproxy_vhost_get_dns_entries": {
            "wire_name": "hosting.rproxy.vhost.get_dns_entries",
            "documentation": "\nGet the keys you need to put in your zone (including the TXT record).\nIf **vhost** is a domain name, you have to put @=key.\nOtherwise, you have to put subdomain=key.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostGetDnsEntriesRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostGetDnsEntriesResponse"
            }
        },
        "hosting_rproxy_vhost_info": {
            "wire_name": "hosting.rproxy.vhost.info",
            "documentation": "\nGet virtual host information.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostInfoRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostInfoResponse"
            }
        },
        "hosting_rproxy_vhost_list": {
            "wire_name": "hosting.rproxy.vhost.list",
            "documentation": "\nList virtual hosts related to reverse proxy.\n\n.. versionadded:: 3.3.7",
            "errors": [],
            "input": {
                "shape": "HostingRproxyVhostListRequest"
            },
            "output": {
                "shape": "HostingRproxyVhostListResponse"
            }
        },
        "hosting_snapshotprofile_count": {
            "wire_name": "hosting.snapshotprofile.count",
            "documentation": "\nCount snapshot profiles matching params (type)",
            "errors": [],
            "input": {
                "shape": "HostingSnapshotprofileCountRequest"
            },
            "output": {
                "shape": "HostingSnapshotprofileCountResponse"
            }
        },
        "hosting_snapshotprofile_list": {
            "wire_name": "hosting.snapshotprofile.list",
            "documentation": "\nList snapshot profiles matching params (type)",
            "errors": [],
            "input": {
                "shape": "HostingSnapshotprofileListRequest"
            },
            "output": {
                "shape": "HostingSnapshotprofileListResponse"
            }
        },
        "hosting_ssh_count": {
            "wire_name": "hosting.ssh.count",
            "documentation": "\nCount ssh keys for an hosting account\n\n.. versionadded:: 3.3.19",
            "errors": [],
            "input": {
                "shape": "HostingSshCountRequest"
            },
            "output": {
                "shape": "HostingSshCountResponse"
            }
        },
        "hosting_ssh_create": {
            "wire_name": "hosting.ssh.create",
            "documentation": "\nCreate a new ssh key.\n\n.. versionadded:: 3.3.19",
            "errors": [],
            "input": {
                "shape": "HostingSshCreateRequest"
            },
            "output": {
                "shape": "HostingSshCreateResponse"
            }
        },
        "hosting_ssh_delete": {
            "wire_name": "hosting.ssh.delete",
            "documentation": "\nDelete a ssh key\n\n.. versionadded:: 3.3.19",
            "errors": [],
            "input": {
                "shape": "HostingSshDeleteRequest"
            },
            "output": {
                "shape": "HostingSshDeleteResponse"
            }
        },
        "hosting_ssh_info": {
            "wire_name": "hosting.ssh.info",
            "documentation": "\nReturn information about a public ssh key\n\n.. versionadded:: 3.3.19",
            "errors": [],
            "input": {
                "shape": "HostingSshInfoRequest"
            },
            "output": {
                "shape": "HostingSshInfoResponse"
            }
        },
        "hosting_ssh_list": {
            "wire_name": "hosting.ssh.list",
            "documentation": "\nList ssh keys for an hosting account\n\n.. versionadded:: 3.3.19",
            "errors": [],
            "input": {
                "shape": "HostingSshListRequest"
            },
            "output": {
                "shape": "HostingSshListResponse"
            }
        },
        "hosting_vlan_count": {
            "wire_name": "hosting.vlan.count",
            "documentation": "\nCount private VLAN handled by this account.",
            "errors": [],
            "input": {
                "shape": "HostingVlanCountRequest"
            },
            "output": {
                "shape": "HostingVlanCountResponse"
            }
        },
        "hosting_vlan_create": {
            "wire_name": "hosting.vlan.create",
            "documentation": "\nCreate a private VLAN using attributes specified by params.\n\nThe private VLAN name is uniq.",
            "errors": [],
            "input": {
                "shape": "HostingVlanCreateRequest"
            },
            "output": {
                "shape": "HostingVlanCreateResponse"
            }
        },
        "hosting_vlan_delete": {
            "wire_name": "hosting.vlan.delete",
            "documentation": "\nDelete a private VLAN if nothing is associated.",
            "errors": [],
            "input": {
                "shape": "HostingVlanDeleteRequest"
            },
            "output": {
                "shape": "HostingVlanDeleteResponse"
            }
        },
        "hosting_vlan_info": {
            "wire_name": "hosting.vlan.info",
            "documentation": "\nGet information about a private VLAN.",
            "errors": [],
            "input": {
                "shape": "HostingVlanInfoRequest"
            },
            "output": {
                "shape": "HostingVlanInfoResponse"
            }
        },
        "hosting_vlan_list": {
            "wire_name": "hosting.vlan.list",
            "documentation": "\nList private VLAN handled by this account.",
            "errors": [],
            "input": {
                "shape": "HostingVlanListRequest"
            },
            "output": {
                "shape": "HostingVlanListResponse"
            }
        },
        "hosting_vlan_update": {
            "wire_name": "hosting.vlan.update",
            "documentation": "\nUpdate a private VLAN name.\n\n/!\\ the return changed from the vlan to an update operation.",
            "errors": [],
            "input": {
                "shape": "HostingVlanUpdateRequest"
            },
            "output": {
                "shape": "HostingVlanUpdateResponse"
            }
        },
        "hosting_vm_count": {
            "wire_name": "hosting.vm.count",
            "documentation": "\nCount virtual machines.",
            "errors": [],
            "input": {
                "shape": "HostingVmCountRequest"
            },
            "output": {
                "shape": "HostingVmCountResponse"
            }
        },
        "hosting_vm_create": {
            "wire_name": "hosting.vm.create",
            "documentation": "\nCreate a new virtual machine using attributes specified by **vm_spec**.\nDisk, iface, and vm must be in the same datacenter.",
            "errors": [],
            "input": {
                "shape": "HostingVmCreateRequest"
            },
            "output": {
                "shape": "HostingVmCreateResponse"
            }
        },
        "hosting_vm_create_from": {
            "wire_name": "hosting.vm.create_from",
            "documentation": "\nCreate a disk and a virtual machine.\nThis is a convenient method to do the disk.create and vm.create in a     single API call.",
            "errors": [],
            "input": {
                "shape": "HostingVmCreateFromRequest"
            },
            "output": {
                "shape": "HostingVmCreateFromResponse"
            }
        },
        "hosting_vm_delete": {
            "wire_name": "hosting.vm.delete",
            "documentation": "\nDelete a VM.\nDelete the disk attached in position 0, i.e. the disk used as         system disk.\nAlso delete the first network interface.\nDetach all extra disks and network interfaces.",
            "errors": [],
            "input": {
                "shape": "HostingVmDeleteRequest"
            },
            "output": {
                "shape": "HostingVmDeleteResponse"
            }
        },
        "hosting_vm_disk_attach": {
            "wire_name": "hosting.vm.disk_attach",
            "documentation": "\nAttach a disk to a virtual machine.\nTo access the disk data inside the VM, it **MUST** be attached to the VM.\nWhen ``options.position`` is 0, swaps position with current disk 0.\nA disk can be attached to only one VM.",
            "errors": [],
            "input": {
                "shape": "HostingVmDiskAttachRequest"
            },
            "output": {
                "shape": "HostingVmDiskAttachResponse"
            }
        },
        "hosting_vm_disk_detach": {
            "wire_name": "hosting.vm.disk_detach",
            "documentation": "\nDetach a disk from a virtual machine.\nIf the disk position is 0, i.e. the system disk, the virtual machine     must be halted to detach the disk.",
            "errors": [],
            "input": {
                "shape": "HostingVmDiskDetachRequest"
            },
            "output": {
                "shape": "HostingVmDiskDetachResponse"
            }
        },
        "hosting_vm_disk_rollback": {
            "wire_name": "hosting.vm.disk_rollback",
            "documentation": "\nHelper method to rollback a disk (instead of     :meth:`hosting.disk.rollback_from`).\nRollbacking a disk is done by creating a new disk using the given snapshot\nas source, the old disk is deleted afterwards. So, if the disk you try to\nrollback is attached to the VM, this method will create operations to stop\nthe VM, detach the old disk, create and attach the new one, and start\nthe VM.",
            "errors": [],
            "input": {
                "shape": "HostingVmDiskRollbackRequest"
            },
            "output": {
                "shape": "HostingVmDiskRollbackResponse"
            }
        },
        "hosting_vm_iface_attach": {
            "wire_name": "hosting.vm.iface_attach",
            "documentation": "\nAttach a network interface to the VM.\nNo *magic* update is made on the interface bandwidth when attaching.\nYou have to manually update interface bandwidth as you desire.",
            "errors": [],
            "input": {
                "shape": "HostingVmIfaceAttachRequest"
            },
            "output": {
                "shape": "HostingVmIfaceAttachResponse"
            }
        },
        "hosting_vm_iface_detach": {
            "wire_name": "hosting.vm.iface_detach",
            "documentation": "\nDetach a network interface from the VM.\nThere is **no** restriction on detaching every interface.\nThe VM will be unreachable if you choose to detach all interfaces.",
            "errors": [],
            "input": {
                "shape": "HostingVmIfaceDetachRequest"
            },
            "output": {
                "shape": "HostingVmIfaceDetachResponse"
            }
        },
        "hosting_vm_info": {
            "wire_name": "hosting.vm.info",
            "documentation": "\nGet information about a virtual machine.",
            "errors": [],
            "input": {
                "shape": "HostingVmInfoRequest"
            },
            "output": {
                "shape": "HostingVmInfoResponse"
            }
        },
        "hosting_vm_reboot": {
            "wire_name": "hosting.vm.reboot",
            "documentation": "\nReboot a Virtual Machine.\nA reboot message is sent to the VM. If it does not reboot properly     after 2 minutes, it is hard-reset (\"power cycled\").",
            "errors": [],
            "input": {
                "shape": "HostingVmRebootRequest"
            },
            "output": {
                "shape": "HostingVmRebootResponse"
            }
        },
        "hosting_vm_start": {
            "wire_name": "hosting.vm.start",
            "documentation": "\nStart a virtual machine.",
            "errors": [],
            "input": {
                "shape": "HostingVmStartRequest"
            },
            "output": {
                "shape": "HostingVmStartResponse"
            }
        },
        "hosting_vm_stop": {
            "wire_name": "hosting.vm.stop",
            "documentation": "\nStop a virtual machine.\nA stop message is sent to the VM. If it does not shutdown properly     after two stop messages and 5 minutes, the VM is \"power switched\".",
            "errors": [],
            "input": {
                "shape": "HostingVmStopRequest"
            },
            "output": {
                "shape": "HostingVmStopResponse"
            }
        },
        "hosting_vm_update": {
            "wire_name": "hosting.vm.update",
            "documentation": "\nUpdate a virtual machine using attributes specified by **update_spec**.",
            "errors": [],
            "input": {
                "shape": "HostingVmUpdateRequest"
            },
            "output": {
                "shape": "HostingVmUpdateResponse"
            }
        },
        "iface_count": {
            "wire_name": "iface.count",
            "documentation": "\nCount network interfaces.",
            "errors": [],
            "input": {
                "shape": "IfaceCountRequest"
            },
            "output": {
                "shape": "IfaceCountResponse"
            }
        },
        "iface_create": {
            "wire_name": "iface.create",
            "documentation": "\nCreate a network interface using attributes specified by **iface_spec**.",
            "errors": [],
            "input": {
                "shape": "IfaceCreateRequest"
            },
            "output": {
                "shape": "IfaceCreateResponse"
            }
        },
        "iface_delete": {
            "wire_name": "iface.delete",
            "documentation": "\nDelete a network interface.",
            "errors": [],
            "input": {
                "shape": "IfaceDeleteRequest"
            },
            "output": {
                "shape": "IfaceDeleteResponse"
            }
        },
        "iface_info": {
            "wire_name": "iface.info",
            "documentation": "\nGet information about a network interface.",
            "errors": [],
            "input": {
                "shape": "IfaceInfoRequest"
            },
            "output": {
                "shape": "IfaceInfoResponse"
            }
        },
        "iface_list": {
            "wire_name": "iface.list",
            "documentation": "\nList network interfaces.",
            "errors": [],
            "input": {
                "shape": "IfaceListRequest"
            },
            "output": {
                "shape": "IfaceListResponse"
            }
        },
        "iface_update": {
            "wire_name": "iface.update",
            "documentation": "\nUpdates a network interface using attributes specified by **iface_spec**.",
            "errors": [],
            "input": {
                "shape": "IfaceUpdateRequest"
            },
            "output": {
                "shape": "IfaceUpdateResponse"
            }
        },
        "image_info": {
            "wire_name": "image.info",
            "documentation": "\nGet information about a disk image.",
            "errors": [],
            "input": {
                "shape": "ImageInfoRequest"
            },
            "output": {
                "shape": "ImageInfoResponse"
            }
        },
        "image_list": {
            "wire_name": "image.list",
            "documentation": "\nList available disk images.",
            "errors": [],
            "input": {
                "shape": "ImageListRequest"
            },
            "output": {
                "shape": "ImageListResponse"
            }
        },
        "ip_count": {
            "wire_name": "ip.count",
            "documentation": "\nCount IP addresses.",
            "errors": [],
            "input": {
                "shape": "IpCountRequest"
            },
            "output": {
                "shape": "IpCountResponse"
            }
        },
        "ip_info": {
            "wire_name": "ip.info",
            "documentation": "\nGet information about an IP Address.",
            "errors": [],
            "input": {
                "shape": "IpInfoRequest"
            },
            "output": {
                "shape": "IpInfoResponse"
            }
        },
        "ip_list": {
            "wire_name": "ip.list",
            "documentation": "\nList IP addresses.",
            "errors": [],
            "input": {
                "shape": "IpListRequest"
            },
            "output": {
                "shape": "IpListResponse"
            }
        },
        "ip_update": {
            "wire_name": "ip.update",
            "documentation": "\nUpdate an IP address using the attributes specified by **ip_spec**",
            "errors": [],
            "input": {
                "shape": "IpUpdateRequest"
            },
            "output": {
                "shape": "IpUpdateResponse"
            }
        },
        "notification_count": {
            "wire_name": "notification.count",
            "documentation": "\nCount notification entries.",
            "errors": [],
            "input": {
                "shape": "NotificationCountRequest"
            },
            "output": {
                "shape": "NotificationCountResponse"
            }
        },
        "notification_list": {
            "wire_name": "notification.list",
            "documentation": "\nList notifications and their associated channels.",
            "errors": [],
            "input": {
                "shape": "NotificationListRequest"
            },
            "output": {
                "shape": "NotificationListResponse"
            }
        },
        "notification_subscription_count": {
            "wire_name": "notification.subscription.count",
            "documentation": "\nCount subscriptions to notification channels.",
            "errors": [],
            "input": {
                "shape": "NotificationSubscriptionCountRequest"
            },
            "output": {
                "shape": "NotificationSubscriptionCountResponse"
            }
        },
        "notification_subscription_create": {
            "wire_name": "notification.subscription.create",
            "documentation": "\nSubscribe to a notification.",
            "errors": [],
            "input": {
                "shape": "NotificationSubscriptionCreateRequest"
            },
            "output": {
                "shape": "NotificationSubscriptionCreateResponse"
            }
        },
        "notification_subscription_delete": {
            "wire_name": "notification.subscription.delete",
            "documentation": "\nUnsubscribe to a notification.",
            "errors": [],
            "input": {
                "shape": "NotificationSubscriptionDeleteRequest"
            },
            "output": {
                "shape": "NotificationSubscriptionDeleteResponse"
            }
        },
        "notification_subscription_list": {
            "wire_name": "notification.subscription.list",
            "documentation": "\nList subscriptions to notification channels.",
            "errors": [],
            "input": {
                "shape": "NotificationSubscriptionListRequest"
            },
            "output": {
                "shape": "NotificationSubscriptionListResponse"
            }
        },
        "notification_test": {
            "wire_name": "notification.test",
            "documentation": "\nSend a test message through all subscribed protocols\nfor specified notification.\n\n.. versionadded:: 3.3.24",
            "errors": [],
            "input": {
                "shape": "NotificationTestRequest"
            },
            "output": {
                "shape": "NotificationTestResponse"
            }
        },
        "operation_cancel": {
            "wire_name": "operation.cancel",
            "documentation": "\nCancel an operation.\n\nSet the `step` of an operation to ``CANCEL``.",
            "errors": [],
            "input": {
                "shape": "OperationCancelRequest"
            },
            "output": {
                "shape": "OperationCancelResponse"
            }
        },
        "operation_count": {
            "wire_name": "operation.count",
            "documentation": "\nCount operations created by this contact.",
            "errors": [],
            "input": {
                "shape": "OperationCountRequest"
            },
            "output": {
                "shape": "OperationCountResponse"
            }
        },
        "operation_info": {
            "wire_name": "operation.info",
            "documentation": "\nGet operation information.",
            "errors": [],
            "input": {
                "shape": "OperationInfoRequest"
            },
            "output": {
                "shape": "OperationInfoResponse"
            }
        },
        "operation_list": {
            "wire_name": "operation.list",
            "documentation": "\nList operations created by this contact.",
            "errors": [],
            "input": {
                "shape": "OperationListRequest"
            },
            "output": {
                "shape": "OperationListResponse"
            }
        },
        "operation_relaunch": {
            "wire_name": "operation.relaunch",
            "documentation": "\nrelaunch an operation.\n\nRelaunch an operation and modify parameters.\n\n.. versionadded:: 3.1.7",
            "errors": [],
            "input": {
                "shape": "OperationRelaunchRequest"
            },
            "output": {
                "shape": "OperationRelaunchResponse"
            }
        },
        "paas_count": {
            "wire_name": "paas.count",
            "documentation": "\nCount PaaS instances associated to contact represented by **apikey**.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasCountRequest"
            },
            "output": {
                "shape": "PaasCountResponse"
            }
        },
        "paas_create": {
            "wire_name": "paas.create",
            "documentation": "\nCreate a PaaS instance.\n\n.. warning::\nIf you are not using Gandi DNS,\na DNS record must be created for this host name separately.\nsee :ref:`paas-dns-check` for more information.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasCreateRequest"
            },
            "output": {
                "shape": "PaasCreateResponse"
            }
        },
        "paas_delete": {
            "wire_name": "paas.delete",
            "documentation": "\nDelete a PaaS instance.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasDeleteRequest"
            },
            "output": {
                "shape": "PaasDeleteResponse"
            }
        },
        "paas_info": {
            "wire_name": "paas.info",
            "documentation": "\nGet PaaS instance information.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasInfoRequest"
            },
            "output": {
                "shape": "PaasInfoResponse"
            }
        },
        "paas_list": {
            "wire_name": "paas.list",
            "documentation": "\nList PaaS instances associated to contact represented by **apikey**.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasListRequest"
            },
            "output": {
                "shape": "PaasListResponse"
            }
        },
        "paas_renew": {
            "wire_name": "paas.renew",
            "documentation": "\nRenew a PaaS instance.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasRenewRequest"
            },
            "output": {
                "shape": "PaasRenewResponse"
            }
        },
        "paas_restart": {
            "wire_name": "paas.restart",
            "documentation": "\nRestart a PaaS instance.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasRestartRequest"
            },
            "output": {
                "shape": "PaasRestartResponse"
            }
        },
        "paas_snapshot_count": {
            "wire_name": "paas.snapshot.count",
            "documentation": "\nCount PaaS snapshot associated to contact represented by **apikey**.\n\n.. versionadded:: 3.2.1",
            "errors": [],
            "input": {
                "shape": "PaasSnapshotCountRequest"
            },
            "output": {
                "shape": "PaasSnapshotCountResponse"
            }
        },
        "paas_snapshot_info": {
            "wire_name": "paas.snapshot.info",
            "documentation": "\nGet PaaS paas snaphost information.\n\n.. versionadded:: 3.2.1",
            "errors": [],
            "input": {
                "shape": "PaasSnapshotInfoRequest"
            },
            "output": {
                "shape": "PaasSnapshotInfoResponse"
            }
        },
        "paas_snapshot_list": {
            "wire_name": "paas.snapshot.list",
            "documentation": "\nList PaaS snapshot associated to the contact represented by **apikey**.\n\n.. versionadded:: 3.2.1",
            "errors": [],
            "input": {
                "shape": "PaasSnapshotListRequest"
            },
            "output": {
                "shape": "PaasSnapshotListResponse"
            }
        },
        "paas_snapshotprofile_count": {
            "wire_name": "paas.snapshotprofile.count",
            "documentation": "\nCount snapshot profiles matching params (type)",
            "errors": [],
            "input": {
                "shape": "PaasSnapshotprofileCountRequest"
            },
            "output": {
                "shape": "PaasSnapshotprofileCountResponse"
            }
        },
        "paas_snapshotprofile_list": {
            "wire_name": "paas.snapshotprofile.list",
            "documentation": "\nList snapshot profiles matching params (type)",
            "errors": [],
            "input": {
                "shape": "PaasSnapshotprofileListRequest"
            },
            "output": {
                "shape": "PaasSnapshotprofileListResponse"
            }
        },
        "paas_type_count": {
            "wire_name": "paas.type.count",
            "documentation": "\nCount PaaS types.\n\n.. versionadded:: 3.2.2",
            "errors": [],
            "input": {
                "shape": "PaasTypeCountRequest"
            },
            "output": {
                "shape": "PaasTypeCountResponse"
            }
        },
        "paas_type_list": {
            "wire_name": "paas.type.list",
            "documentation": "\nList PaaS types.\n\n.. versionadded:: 3.2.2",
            "errors": [],
            "input": {
                "shape": "PaasTypeListRequest"
            },
            "output": {
                "shape": "PaasTypeListResponse"
            }
        },
        "paas_update": {
            "wire_name": "paas.update",
            "documentation": "\nUpdate a PaaS instance.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasUpdateRequest"
            },
            "output": {
                "shape": "PaasUpdateResponse"
            }
        },
        "paas_vhost_count": {
            "wire_name": "paas.vhost.count",
            "documentation": "\nCount virtual hosts associated to contact represented by **apikey**.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasVhostCountRequest"
            },
            "output": {
                "shape": "PaasVhostCountResponse"
            }
        },
        "paas_vhost_create": {
            "wire_name": "paas.vhost.create",
            "documentation": "\nCreate a virtual host.\n\n.. note::\nThe virtual host will be declared in the instance\n**paas_id** and a new folder will be created in the\n`/lamp0/web/vhosts` folder of the instance's disk.\n\n.. warning::\nIf you are not using Gandi DNS,\na DNS record must be created for this host name separately.\nsee :ref:`paas-dns-check` for more information.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasVhostCreateRequest"
            },
            "output": {
                "shape": "PaasVhostCreateResponse"
            }
        },
        "paas_vhost_delete": {
            "wire_name": "paas.vhost.delete",
            "documentation": "\nDelete a virtual host.\n\n.. note:: The files will be kept in a new folder in `/lamp0/web/trash`.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasVhostDeleteRequest"
            },
            "output": {
                "shape": "PaasVhostDeleteResponse"
            }
        },
        "paas_vhost_get_dns_entries": {
            "wire_name": "paas.vhost.get_dns_entries",
            "documentation": "\nGet the keys you need to put in your zone (including the TXT record).\nIf **vhost** is a domain name, you have to put @=key.\nOtherwise, you have to put subdomain=key.\n\n.. versionadded:: 3.2.3",
            "errors": [],
            "input": {
                "shape": "PaasVhostGetDnsEntriesRequest"
            },
            "output": {
                "shape": "PaasVhostGetDnsEntriesResponse"
            }
        },
        "paas_vhost_info": {
            "wire_name": "paas.vhost.info",
            "documentation": "\nGet virtual host information.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasVhostInfoRequest"
            },
            "output": {
                "shape": "PaasVhostInfoResponse"
            }
        },
        "paas_vhost_list": {
            "wire_name": "paas.vhost.list",
            "documentation": "\nList virtual hosts associated to contact represented by **apikey**.\n\n.. versionadded:: 3.1.1",
            "errors": [],
            "input": {
                "shape": "PaasVhostListRequest"
            },
            "output": {
                "shape": "PaasVhostListResponse"
            }
        },
        "product_create": {
            "wire_name": "product.create",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "ProductCreateRequest"
            },
            "output": {
                "shape": "ProductCreateResponse"
            }
        },
        "product_delete": {
            "wire_name": "product.delete",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "ProductDeleteRequest"
            },
            "output": {
                "shape": "ProductDeleteResponse"
            }
        },
        "product_renew": {
            "wire_name": "product.renew",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "ProductRenewRequest"
            },
            "output": {
                "shape": "ProductRenewResponse"
            }
        },
        "product_update": {
            "wire_name": "product.update",
            "documentation": "\nThis method does nothing and will be removed in the next major release.\n\n.. versionadded:: 3.1.2\n.. deprecated:: Gandi IaaS billing is based on Gandi credits.                         use :func:`hosting.account.credit`",
            "errors": [],
            "input": {
                "shape": "ProductUpdateRequest"
            },
            "output": {
                "shape": "ProductUpdateResponse"
            }
        },
        "security_key_renew": {
            "wire_name": "security.key.renew",
            "documentation": "\nChange the API key for the given user.\n\n.. versionadded:: 3.3.14",
            "errors": [],
            "input": {
                "shape": "SecurityKeyRenewRequest"
            },
            "output": {
                "shape": "SecurityKeyRenewResponse"
            }
        },
        "site_alter_zone": {
            "wire_name": "site.alter_zone",
            "documentation": "\nCreate a record in the domain zone for all this site's host",
            "errors": [],
            "input": {
                "shape": "SiteAlterZoneRequest"
            },
            "output": {
                "shape": "SiteAlterZoneResponse"
            }
        },
        "site_autorenew_activate": {
            "wire_name": "site.autorenew.activate",
            "documentation": "\nActivate the autorenewal functionality for a site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteAutorenewActivateRequest"
            },
            "output": {
                "shape": "SiteAutorenewActivateResponse"
            }
        },
        "site_autorenew_deactivate": {
            "wire_name": "site.autorenew.deactivate",
            "documentation": "\nDeactivate the autorenewal functionality for a site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteAutorenewDeactivateRequest"
            },
            "output": {
                "shape": "SiteAutorenewDeactivateResponse"
            }
        },
        "site_count": {
            "wire_name": "site.count",
            "documentation": "\nCount sites.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteCountRequest"
            },
            "output": {
                "shape": "SiteCountResponse"
            }
        },
        "site_create": {
            "wire_name": "site.create",
            "documentation": "\nCreate a site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteCreateRequest"
            },
            "output": {
                "shape": "SiteCreateResponse"
            }
        },
        "site_delete": {
            "wire_name": "site.delete",
            "documentation": "\nDelete a site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteDeleteRequest"
            },
            "output": {
                "shape": "SiteDeleteResponse"
            }
        },
        "site_edit": {
            "wire_name": "site.edit",
            "documentation": "\nEdit a site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteEditRequest"
            },
            "output": {
                "shape": "SiteEditResponse"
            }
        },
        "site_get_dns_entries": {
            "wire_name": "site.get_dns_entries",
            "documentation": "\nGet the keys you need to put in your zone (including the TXT record).\nIf **host** is a domain name, you have to put @=key.\nOtherwise, you have to put subdomain=key.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteGetDnsEntriesRequest"
            },
            "output": {
                "shape": "SiteGetDnsEntriesResponse"
            }
        },
        "site_info": {
            "wire_name": "site.info",
            "documentation": "\nGet site information.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteInfoRequest"
            },
            "output": {
                "shape": "SiteInfoResponse"
            }
        },
        "site_key_create": {
            "wire_name": "site.key.create",
            "documentation": "\nCreate a key for a given site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteKeyCreateRequest"
            },
            "output": {
                "shape": "SiteKeyCreateResponse"
            }
        },
        "site_key_delete": {
            "wire_name": "site.key.delete",
            "documentation": "\nDelete a key.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteKeyDeleteRequest"
            },
            "output": {
                "shape": "SiteKeyDeleteResponse"
            }
        },
        "site_key_list": {
            "wire_name": "site.key.list",
            "documentation": "\nList keys for a given site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteKeyListRequest"
            },
            "output": {
                "shape": "SiteKeyListResponse"
            }
        },
        "site_key_update": {
            "wire_name": "site.key.update",
            "documentation": "\nUpdate a key.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteKeyUpdateRequest"
            },
            "output": {
                "shape": "SiteKeyUpdateResponse"
            }
        },
        "site_list": {
            "wire_name": "site.list",
            "documentation": "\nList sites.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteListRequest"
            },
            "output": {
                "shape": "SiteListResponse"
            }
        },
        "site_package_list": {
            "wire_name": "site.package.list",
            "documentation": "\nList packages.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SitePackageListRequest"
            },
            "output": {
                "shape": "SitePackageListResponse"
            }
        },
        "site_renew": {
            "wire_name": "site.renew",
            "documentation": "\nRenew a site.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteRenewRequest"
            },
            "output": {
                "shape": "SiteRenewResponse"
            }
        },
        "site_update": {
            "wire_name": "site.update",
            "documentation": "\nUpdate a site.\n**Updating the package is a site package upgrade and is not a\nfree operation.**. In other case, this operation is free.\n\n.. versionadded:: 3.2.14",
            "errors": [],
            "input": {
                "shape": "SiteUpdateRequest"
            },
            "output": {
                "shape": "SiteUpdateResponse"
            }
        },
        "snapshotprofile_count": {
            "wire_name": "snapshotprofile.count",
            "documentation": "\nCount snapshot profiles matching params (type)",
            "errors": [],
            "input": {
                "shape": "SnapshotprofileCountRequest"
            },
            "output": {
                "shape": "SnapshotprofileCountResponse"
            }
        },
        "snapshotprofile_list": {
            "wire_name": "snapshotprofile.list",
            "documentation": "\nList snapshot profiles matching params (type)",
            "errors": [],
            "input": {
                "shape": "SnapshotprofileListRequest"
            },
            "output": {
                "shape": "SnapshotprofileListResponse"
            }
        },
        "vm_count": {
            "wire_name": "vm.count",
            "documentation": "\nCount virtual machines.",
            "errors": [],
            "input": {
                "shape": "VmCountRequest"
            },
            "output": {
                "shape": "VmCountResponse"
            }
        },
        "vm_create": {
            "wire_name": "vm.create",
            "documentation": "\nCreate a new virtual machine using attributes specified by **vm_spec**.\nDisk, iface, and vm must be in the same datacenter.",
            "errors": [],
            "input": {
                "shape": "VmCreateRequest"
            },
            "output": {
                "shape": "VmCreateResponse"
            }
        },
        "vm_create_from": {
            "wire_name": "vm.create_from",
            "documentation": "\nCreate a disk and a virtual machine.\nThis is a convenient method to do the disk.create and vm.create in a     single API call.",
            "errors": [],
            "input": {
                "shape": "VmCreateFromRequest"
            },
            "output": {
                "shape": "VmCreateFromResponse"
            }
        },
        "vm_delete": {
            "wire_name": "vm.delete",
            "documentation": "\nDelete a VM.\nDelete the disk attached in position 0, i.e. the disk used as         system disk.\nAlso delete the first network interface.\nDetach all extra disks and network interfaces.",
            "errors": [],
            "input": {
                "shape": "VmDeleteRequest"
            },
            "output": {
                "shape": "VmDeleteResponse"
            }
        },
        "vm_disk_attach": {
            "wire_name": "vm.disk_attach",
            "documentation": "\nAttach a disk to a virtual machine.\nTo access the disk data inside the VM, it **MUST** be attached to the VM.\nWhen ``options.position`` is 0, swaps position with current disk 0.\nA disk can be attached to only one VM.",
            "errors": [],
            "input": {
                "shape": "VmDiskAttachRequest"
            },
            "output": {
                "shape": "VmDiskAttachResponse"
            }
        },
        "vm_disk_detach": {
            "wire_name": "vm.disk_detach",
            "documentation": "\nDetach a disk from a virtual machine.\nIf the disk position is 0, i.e. the system disk, the virtual machine     must be halted to detach the disk.",
            "errors": [],
            "input": {
                "shape": "VmDiskDetachRequest"
            },
            "output": {
                "shape": "VmDiskDetachResponse"
            }
        },
        "vm_disk_rollback": {
            "wire_name": "vm.disk_rollback",
            "documentation": "\nHelper method to rollback a disk (instead of     :meth:`hosting.disk.rollback_from`).\nRollbacking a disk is done by creating a new disk using the given snapshot\nas source, the old disk is deleted afterwards. So, if the disk you try to\nrollback is attached to the VM, this method will create operations to stop\nthe VM, detach the old disk, create and attach the new one, and start\nthe VM.",
            "errors": [],
            "input": {
                "shape": "VmDiskRollbackRequest"
            },
            "output": {
                "shape": "VmDiskRollbackResponse"
            }
        },
        "vm_iface_attach": {
            "wire_name": "vm.iface_attach",
            "documentation": "\nAttach a network interface to the VM.\nNo *magic* update is made on the interface bandwidth when attaching.\nYou have to manually update interface bandwidth as you desire.",
            "errors": [],
            "input": {
                "shape": "VmIfaceAttachRequest"
            },
            "output": {
                "shape": "VmIfaceAttachResponse"
            }
        },
        "vm_iface_detach": {
            "wire_name": "vm.iface_detach",
            "documentation": "\nDetach a network interface from the VM.\nThere is **no** restriction on detaching every interface.\nThe VM will be unreachable if you choose to detach all interfaces.",
            "errors": [],
            "input": {
                "shape": "VmIfaceDetachRequest"
            },
            "output": {
                "shape": "VmIfaceDetachResponse"
            }
        },
        "vm_info": {
            "wire_name": "vm.info",
            "documentation": "\nGet information about a virtual machine.",
            "errors": [],
            "input": {
                "shape": "VmInfoRequest"
            },
            "output": {
                "shape": "VmInfoResponse"
            }
        },
        "vm_list": {
            "wire_name": "vm.list",
            "documentation": "\nList virtual machines.",
            "errors": [],
            "input": {
                "shape": "VmListRequest"
            },
            "output": {
                "shape": "VmListResponse"
            }
        },
        "vm_reboot": {
            "wire_name": "vm.reboot",
            "documentation": "\nReboot a Virtual Machine.\nA reboot message is sent to the VM. If it does not reboot properly     after 2 minutes, it is hard-reset (\"power cycled\").",
            "errors": [],
            "input": {
                "shape": "VmRebootRequest"
            },
            "output": {
                "shape": "VmRebootResponse"
            }
        },
        "vm_start": {
            "wire_name": "vm.start",
            "documentation": "\nStart a virtual machine.",
            "errors": [],
            "input": {
                "shape": "VmStartRequest"
            },
            "output": {
                "shape": "VmStartResponse"
            }
        },
        "vm_stop": {
            "wire_name": "vm.stop",
            "documentation": "\nStop a virtual machine.\nA stop message is sent to the VM. If it does not shutdown properly     after two stop messages and 5 minutes, the VM is \"power switched\".",
            "errors": [],
            "input": {
                "shape": "VmStopRequest"
            },
            "output": {
                "shape": "VmStopResponse"
            }
        },
        "vm_update": {
            "wire_name": "vm.update",
            "documentation": "\nUpdate a virtual machine using attributes specified by **update_spec**.",
            "errors": [],
            "input": {
                "shape": "VmUpdateRequest"
            },
            "output": {
                "shape": "VmUpdateResponse"
            }
        }
    },
    "shapes": {
        "String": {
            "type": "string"
        },
        "ApiKey": {
            "type": "string",
            "regex": "^[a-z0-9]{24}$",
            "min": 24,
            "max": 24
        },
        "HostingVmListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "ApiKey"
                }
            ]
        },
        "HostingVmListResponse": {
            "type": "structure",
            "members": []
        },
        "VersionInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "ApiKey"
                }
            ]
        },
        "VersionInfoResponse": {
            "type": "structure",
            "members": [
                {
                    "name": "api_version",
                    "shape": "String"
                }
            ]
        },
        "AccountCreditRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "AccountCreditResponse": {
            "type": "structure",
            "members": []
        },
        "AccountInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "AccountInfoResponse": {
            "type": "structure",
            "members": []
        },
        "CatalogListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "currency",
                    "shape": "String"
                },
                {
                    "name": "grid",
                    "shape": "String"
                }
            ]
        },
        "CatalogListResponse": {
            "type": "structure",
            "members": []
        },
        "CertChangeDcvRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "operation",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "dcv_method",
                    "shape": "String"
                }
            ]
        },
        "CertChangeDcvResponse": {
            "type": "structure",
            "members": []
        },
        "CertCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "CertCountResponse": {
            "type": "structure",
            "members": []
        },
        "CertCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertCreateResponse": {
            "type": "structure",
            "members": []
        },
        "CertDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "cert",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "CertDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "CertGetDcvParamsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertGetDcvParamsResponse": {
            "type": "structure",
            "members": []
        },
        "CertHostedCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "CertHostedCountResponse": {
            "type": "structure",
            "members": []
        },
        "CertHostedCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertHostedCreateResponse": {
            "type": "structure",
            "members": []
        },
        "CertHostedDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ssl",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertHostedDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "CertHostedInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ssl",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertHostedInfoResponse": {
            "type": "structure",
            "members": []
        },
        "CertHostedListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "CertHostedListResponse": {
            "type": "structure",
            "members": []
        },
        "CertInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "cert",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertInfoResponse": {
            "type": "structure",
            "members": []
        },
        "CertListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "CertListResponse": {
            "type": "structure",
            "members": []
        },
        "CertPackageListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "CertPackageListResponse": {
            "type": "structure",
            "members": []
        },
        "CertRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "cert",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertRenewResponse": {
            "type": "structure",
            "members": []
        },
        "CertResendDcvRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "operation",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertResendDcvResponse": {
            "type": "structure",
            "members": []
        },
        "CertUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "cert",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "CertUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "ChangeownerCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ChangeownerCreateResponse": {
            "type": "structure",
            "members": []
        },
        "ContactBalanceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactBalanceResponse": {
            "type": "structure",
            "members": []
        },
        "ContactCanAssociateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "contact",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactCanAssociateResponse": {
            "type": "structure",
            "members": []
        },
        "ContactCanAssociateDomainRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "handle",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactCanAssociateDomainResponse": {
            "type": "structure",
            "members": []
        },
        "ContactCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "ContactCountResponse": {
            "type": "structure",
            "members": []
        },
        "ContactCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactCreateResponse": {
            "type": "structure",
            "members": []
        },
        "ContactDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "handle",
                    "shape": "String"
                }
            ]
        },
        "ContactDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "ContactInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "handle",
                    "shape": "String"
                }
            ]
        },
        "ContactInfoResponse": {
            "type": "structure",
            "members": []
        },
        "ContactListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "ContactListResponse": {
            "type": "structure",
            "members": []
        },
        "ContactReachabilityResendRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactReachabilityResendResponse": {
            "type": "structure",
            "members": []
        },
        "ContactReleaseRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "handle",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactReleaseResponse": {
            "type": "structure",
            "members": []
        },
        "ContactUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "handle",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ContactUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DatacenterListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DatacenterListResponse": {
            "type": "structure",
            "members": []
        },
        "DiskCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DiskCountResponse": {
            "type": "structure",
            "members": []
        },
        "DiskCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DiskCreateFromRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "src_disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskCreateFromResponse": {
            "type": "structure",
            "members": []
        },
        "DiskDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DiskInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DiskListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DiskListResponse": {
            "type": "structure",
            "members": []
        },
        "DiskListKernelsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "datacenter_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskListKernelsResponse": {
            "type": "structure",
            "members": []
        },
        "DiskListOptionsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "kernel_version",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskListOptionsResponse": {
            "type": "structure",
            "members": []
        },
        "DiskRollbackFromRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "snapshot_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskRollbackFromResponse": {
            "type": "structure",
            "members": []
        },
        "DiskUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DiskUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainAutorenewActivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "DomainAutorenewActivateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainAutorenewDeactivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainAutorenewDeactivateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainAvailableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domains",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainAvailableResponse": {
            "type": "structure",
            "members": []
        },
        "DomainClaimsAcceptRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "notice_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainClaimsAcceptResponse": {
            "type": "structure",
            "members": []
        },
        "DomainClaimsCheckRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domains",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "force",
                    "shape": "String"
                }
            ]
        },
        "DomainClaimsCheckResponse": {
            "type": "structure",
            "members": []
        },
        "DomainClaimsInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainClaimsInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainContactsSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainContactsSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDeleteAcceptRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "authcode",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDeleteAcceptResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDeleteAvailableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDeleteAvailableResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDeleteDeclineRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "authcode",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDeleteDeclineResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDeleteInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "authcode",
                    "shape": "String"
                }
            ]
        },
        "DomainDeleteInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDeleteProceedRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDeleteProceedResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDnssecCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDnssecCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDnssecDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "key_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDnssecDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainDnssecListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainDnssecListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainEoiCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainEoiCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainEoiCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainEoiCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainEoiDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainEoiDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainEoiInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainEoiInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainEoiListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainEoiListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainForwardCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainForwardCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainForwardCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "source",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainForwardCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainForwardDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "source",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainForwardDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainForwardListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainForwardListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainForwardUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "source",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainForwardUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainGandimailActivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainGandimailActivateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainGandimailDeactivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainGandimailDeactivateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainGandimailInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainGandimailInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainHostCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainHostCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainHostCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ips",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainHostCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainHostDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainHostDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainHostInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainHostInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainHostListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainHostListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainHostUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ips",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainHostUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxAliasSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "aliases",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxAliasSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainMailboxCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainMailboxListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxPurgeRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxPurgeResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxResponderActivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxResponderActivateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxResponderDeactivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "DomainMailboxResponderDeactivateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMailboxUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "login",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMailboxUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainMiscUkrightsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainMiscUkrightsResponse": {
            "type": "structure",
            "members": []
        },
        "DomainNameserversSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "nameservers",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "options",
                    "shape": "String"
                }
            ]
        },
        "DomainNameserversSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainOwnerSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainOwnerSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPackmailAutorenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "gmail",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPackmailAutorenewResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPackmailCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "gmail",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPackmailCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPackmailDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "gmail",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPackmailDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPackmailInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "gmail",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPackmailInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPackmailRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "gmail",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPackmailRenewResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPackmailUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "gmail",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPackmailUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPriceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domains",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainPriceResponse": {
            "type": "structure",
            "members": []
        },
        "DomainPushRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "target",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainPushResponse": {
            "type": "structure",
            "members": []
        },
        "DomainReleaseRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainReleaseResponse": {
            "type": "structure",
            "members": []
        },
        "DomainRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainRenewResponse": {
            "type": "structure",
            "members": []
        },
        "DomainResellerSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainResellerSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainRestoreRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainRestoreResponse": {
            "type": "structure",
            "members": []
        },
        "DomainSmdCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainSmdCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainSmdCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "smd",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainSmdCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainSmdDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "smd_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainSmdDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainSmdExtractRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "smd",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainSmdExtractResponse": {
            "type": "structure",
            "members": []
        },
        "DomainSmdInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "smd_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainSmdInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainSmdListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainSmdListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainStatusLockRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainStatusLockResponse": {
            "type": "structure",
            "members": []
        },
        "DomainStatusUnlockRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainStatusUnlockResponse": {
            "type": "structure",
            "members": []
        },
        "DomainTldListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainTldListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainTldRegionRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainTldRegionResponse": {
            "type": "structure",
            "members": []
        },
        "DomainTransferinAvailableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "fqdn",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "authinfo",
                    "shape": "String"
                }
            ]
        },
        "DomainTransferinAvailableResponse": {
            "type": "structure",
            "members": []
        },
        "DomainTransferinProceedRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainTransferinProceedResponse": {
            "type": "structure",
            "members": []
        },
        "DomainWebredirCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainWebredirCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainWebredirCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainWebredirCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainWebredirDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "host",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainWebredirDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainWebredirListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainWebredirListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainWebredirUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "host",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainWebredirUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneCloneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String"
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneCloneResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneCreateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneInfoResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneRecordAddRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneRecordAddResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneRecordCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneRecordCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneRecordDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneRecordDeleteResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneRecordListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneRecordListResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneRecordSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneRecordSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneRecordUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneRecordUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "domain",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneSetResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneUpdateResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneVersionCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneVersionCountResponse": {
            "type": "structure",
            "members": []
        },
        "DomainZoneVersionDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneVersionDeleteResponse": {
            "type": "structure"
        },
        "DomainZoneVersionListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneVersionListResponse": {
            "type": "structure"
        },
        "DomainZoneVersionNewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String"
                }
            ]
        },
        "DomainZoneVersionNewResponse": {
            "type": "structure"
        },
        "DomainZoneVersionSetRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "zone_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "version_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "DomainZoneVersionSetResponse": {
            "type": "structure"
        },
        "HostingAccountCreditRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingAccountCreditResponse": {
            "type": "structure"
        },
        "HostingAccountInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingAccountInfoResponse": {
            "type": "structure"
        },
        "HostingCatalogListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingCatalogListResponse": {
            "type": "structure"
        },
        "HostingCatalogPriceRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "items",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingCatalogPriceResponse": {
            "type": "structure"
        },
        "HostingDatacenterListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingDatacenterListResponse": {
            "type": "structure"
        },
        "HostingDiskCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingDiskCountResponse": {
            "type": "structure"
        },
        "HostingDiskCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskCreateResponse": {
            "type": "structure"
        },
        "HostingDiskCreateFromRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "src_disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskCreateFromResponse": {
            "type": "structure"
        },
        "HostingDiskDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskDeleteResponse": {
            "type": "structure"
        },
        "HostingDiskInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskInfoResponse": {
            "type": "structure"
        },
        "HostingDiskListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingDiskListResponse": {
            "type": "structure"
        },
        "HostingDiskListKernelsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "datacenter_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskListKernelsResponse": {
            "type": "structure"
        },
        "HostingDiskListOptionsRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "kernel_version",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskListOptionsResponse": {
            "type": "structure"
        },
        "HostingDiskRollbackFromRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "snapshot_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskRollbackFromResponse": {
            "type": "structure"
        },
        "HostingDiskUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingDiskUpdateResponse": {
            "type": "structure"
        },
        "HostingIfaceCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingIfaceCountResponse": {
            "type": "structure"
        },
        "HostingIfaceCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingIfaceCreateResponse": {
            "type": "structure"
        },
        "HostingIfaceDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingIfaceDeleteResponse": {
            "type": "structure"
        },
        "HostingIfaceInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingIfaceInfoResponse": {
            "type": "structure"
        },
        "HostingIfaceListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingIfaceListResponse": {
            "type": "structure"
        },
        "HostingIfaceUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingIfaceUpdateResponse": {
            "type": "structure"
        },
        "HostingImageInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "image",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingImageInfoResponse": {
            "type": "structure"
        },
        "HostingImageListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingImageListResponse": {
            "type": "structure"
        },
        "HostingIpCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingIpCountResponse": {
            "type": "structure"
        },
        "HostingIpInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ip_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingIpInfoResponse": {
            "type": "structure"
        },
        "HostingIpListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingIpListResponse": {
            "type": "structure"
        },
        "HostingIpUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ip_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ip_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingIpUpdateResponse": {
            "type": "structure"
        },
        "HostingMetricAvailableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingMetricAvailableResponse": {
            "type": "structure"
        },
        "HostingMetricQueryRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingMetricQueryResponse": {
            "type": "structure"
        },
        "HostingPackageCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "HostingPackageCountResponse": {
            "type": "structure"
        },
        "HostingPackageListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "HostingPackageListResponse": {
            "type": "structure"
        },
        "HostingProductCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingProductCreateResponse": {
            "type": "structure"
        },
        "HostingProductDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingProductDeleteResponse": {
            "type": "structure"
        },
        "HostingProductRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingProductRenewResponse": {
            "type": "structure"
        },
        "HostingProductUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingProductUpdateResponse": {
            "type": "structure"
        },
        "HostingRatingListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRatingListResponse": {
            "type": "structure"
        },
        "HostingRproxyCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRproxyCountResponse": {
            "type": "structure"
        },
        "HostingRproxyCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyCreateResponse": {
            "type": "structure"
        },
        "HostingRproxyDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyDeleteResponse": {
            "type": "structure"
        },
        "HostingRproxyInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyInfoResponse": {
            "type": "structure"
        },
        "HostingRproxyListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRproxyListResponse": {
            "type": "structure"
        },
        "HostingRproxyProbeCheckServerRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "server",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyProbeCheckServerResponse": {
            "type": "structure"
        },
        "HostingRproxyProbeDisableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyProbeDisableResponse": {
            "type": "structure"
        },
        "HostingRproxyProbeEnableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyProbeEnableResponse": {
            "type": "structure"
        },
        "HostingRproxyProbeTestRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyProbeTestResponse": {
            "type": "structure"
        },
        "HostingRproxyProbeUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyProbeUpdateResponse": {
            "type": "structure"
        },
        "HostingRproxyServerCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRproxyServerCountResponse": {
            "type": "structure"
        },
        "HostingRproxyServerCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyServerCreateResponse": {
            "type": "structure"
        },
        "HostingRproxyServerDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "server",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyServerDeleteResponse": {
            "type": "structure"
        },
        "HostingRproxyServerDisableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "server",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyServerDisableResponse": {
            "type": "structure"
        },
        "HostingRproxyServerEnableRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "server",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyServerEnableResponse": {
            "type": "structure"
        },
        "HostingRproxyServerListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRproxyServerListResponse": {
            "type": "structure"
        },
        "HostingRproxyUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyUpdateResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostAlterZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vhost",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyVhostAlterZoneResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRproxyVhostCountResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "rproxy",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyVhostCreateResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vhost",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyVhostDeleteResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostGetDnsEntriesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyVhostGetDnsEntriesResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vhost",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingRproxyVhostInfoResponse": {
            "type": "structure"
        },
        "HostingRproxyVhostListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingRproxyVhostListResponse": {
            "type": "structure"
        },
        "HostingSnapshotprofileCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingSnapshotprofileCountResponse": {
            "type": "structure"
        },
        "HostingSnapshotprofileListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingSnapshotprofileListResponse": {
            "type": "structure"
        },
        "HostingSshCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingSshCountResponse": {
            "type": "structure"
        },
        "HostingSshCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingSshCreateResponse": {
            "type": "structure"
        },
        "HostingSshDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "key_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingSshDeleteResponse": {
            "type": "structure"
        },
        "HostingSshInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "key_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingSshInfoResponse": {
            "type": "structure"
        },
        "HostingSshListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingSshListResponse": {
            "type": "structure"
        },
        "HostingVlanCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingVlanCountResponse": {
            "type": "structure"
        },
        "HostingVlanCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVlanCreateResponse": {
            "type": "structure"
        },
        "HostingVlanDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vlan",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVlanDeleteResponse": {
            "type": "structure"
        },
        "HostingVlanInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vlan",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVlanInfoResponse": {
            "type": "structure"
        },
        "HostingVlanListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingVlanListResponse": {
            "type": "structure"
        },
        "HostingVlanUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vlan",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVlanUpdateResponse": {
            "type": "structure"
        },
        "HostingVmCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "HostingVmCountResponse": {
            "type": "structure"
        },
        "HostingVmCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmCreateResponse": {
            "type": "structure"
        },
        "HostingVmCreateFromRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_spec",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "src_disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmCreateFromResponse": {
            "type": "structure"
        },
        "HostingVmDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmDeleteResponse": {
            "type": "structure"
        },
        "HostingVmDiskAttachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "options",
                    "shape": "String"
                }
            ]
        },
        "HostingVmDiskAttachResponse": {
            "type": "structure"
        },
        "HostingVmDiskDetachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmDiskDetachResponse": {
            "type": "structure"
        },
        "HostingVmDiskRollbackRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "snapshot_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmDiskRollbackResponse": {
            "type": "structure"
        },
        "HostingVmIfaceAttachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmIfaceAttachResponse": {
            "type": "structure"
        },
        "HostingVmIfaceDetachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmIfaceDetachResponse": {
            "type": "structure"
        },
        "HostingVmInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmInfoResponse": {
            "type": "structure"
        },
        "HostingVmRebootRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmRebootResponse": {
            "type": "structure"
        },
        "HostingVmStartRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "HostingVmStartResponse": {
            "type": "structure"
        },
        "HostingVmStopRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmStopResponse": {
            "type": "structure"
        },
        "HostingVmUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "update_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "HostingVmUpdateResponse": {
            "type": "structure"
        },
        "IfaceCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "IfaceCountResponse": {
            "type": "structure"
        },
        "IfaceCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "IfaceCreateResponse": {
            "type": "structure"
        },
        "IfaceDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "IfaceDeleteResponse": {
            "type": "structure"
        },
        "IfaceInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "IfaceInfoResponse": {
            "type": "structure"
        },
        "IfaceListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "IfaceListResponse": {
            "type": "structure"
        },
        "IfaceUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "IfaceUpdateResponse": {
            "type": "structure"
        },
        "ImageInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "image",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ImageInfoResponse": {
            "type": "structure"
        },
        "ImageListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "ImageListResponse": {
            "type": "structure"
        },
        "IpCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "IpCountResponse": {
            "type": "structure"
        },
        "IpInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ip_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "IpInfoResponse": {
            "type": "structure"
        },
        "IpListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "IpListResponse": {
            "type": "structure"
        },
        "IpUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ip_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "ip_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "IpUpdateResponse": {
            "type": "structure"
        },
        "NotificationCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationCountResponse": {
            "type": "structure"
        },
        "NotificationListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationListResponse": {
            "type": "structure"
        },
        "NotificationSubscriptionCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationSubscriptionCountResponse": {
            "type": "structure"
        },
        "NotificationSubscriptionCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationSubscriptionCreateResponse": {
            "type": "structure"
        },
        "NotificationSubscriptionDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationSubscriptionDeleteResponse": {
            "type": "structure"
        },
        "NotificationSubscriptionListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationSubscriptionListResponse": {
            "type": "structure"
        },
        "NotificationTestRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "notification",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "NotificationTestResponse": {
            "type": "structure"
        },
        "OperationCancelRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "operation",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "OperationCancelResponse": {
            "type": "structure"
        },
        "OperationCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "OperationCountResponse": {
            "type": "structure"
        },
        "OperationInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "operation",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "OperationInfoResponse": {
            "type": "structure"
        },
        "OperationListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "OperationListResponse": {
            "type": "structure"
        },
        "OperationRelaunchRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "operation",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "OperationRelaunchResponse": {
            "type": "structure"
        },
        "PaasCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasCountResponse": {
            "type": "structure"
        },
        "PaasCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasCreateResponse": {
            "type": "structure"
        },
        "PaasDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "paas_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasDeleteResponse": {
            "type": "structure"
        },
        "PaasInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "paas_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasInfoResponse": {
            "type": "structure"
        },
        "PaasListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasListResponse": {
            "type": "structure"
        },
        "PaasRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "paas_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasRenewResponse": {
            "type": "structure"
        },
        "PaasRestartRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "paas_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasRestartResponse": {
            "type": "structure"
        },
        "PaasSnapshotCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasSnapshotCountResponse": {
            "type": "structure"
        },
        "PaasSnapshotInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "snapshot",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasSnapshotInfoResponse": {
            "type": "structure"
        },
        "PaasSnapshotListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasSnapshotListResponse": {
            "type": "structure"
        },
        "PaasSnapshotprofileCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasSnapshotprofileCountResponse": {
            "type": "structure"
        },
        "PaasSnapshotprofileListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasSnapshotprofileListResponse": {
            "type": "structure"
        },
        "PaasTypeCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasTypeCountResponse": {
            "type": "structure"
        },
        "PaasTypeListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasTypeListResponse": {
            "type": "structure"
        },
        "PaasUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "paas_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasUpdateResponse": {
            "type": "structure"
        },
        "PaasVhostCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasVhostCountResponse": {
            "type": "structure"
        },
        "PaasVhostCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasVhostCreateResponse": {
            "type": "structure"
        },
        "PaasVhostDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vhost",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasVhostDeleteResponse": {
            "type": "structure"
        },
        "PaasVhostGetDnsEntriesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasVhostGetDnsEntriesResponse": {
            "type": "structure"
        },
        "PaasVhostInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vhost",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "PaasVhostInfoResponse": {
            "type": "structure"
        },
        "PaasVhostListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "PaasVhostListResponse": {
            "type": "structure"
        },
        "ProductCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ProductCreateResponse": {
            "type": "structure"
        },
        "ProductDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ProductDeleteResponse": {
            "type": "structure"
        },
        "ProductRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ProductRenewResponse": {
            "type": "structure"
        },
        "ProductUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "product",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "ProductUpdateResponse": {
            "type": "structure"
        },
        "SecurityKeyRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SecurityKeyRenewResponse": {
            "type": "structure"
        },
        "SiteAlterZoneRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "host",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteAlterZoneResponse": {
            "type": "structure"
        },
        "SiteAutorenewActivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteAutorenewActivateResponse": {
            "type": "structure"
        },
        "SiteAutorenewDeactivateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteAutorenewDeactivateResponse": {
            "type": "structure"
        },
        "SiteCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "SiteCountResponse": {
            "type": "structure"
        },
        "SiteCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteCreateResponse": {
            "type": "structure"
        },
        "SiteDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteDeleteResponse": {
            "type": "structure"
        },
        "SiteEditRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "token",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteEditResponse": {
            "type": "structure"
        },
        "SiteGetDnsEntriesRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteGetDnsEntriesResponse": {
            "type": "structure"
        },
        "SiteInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteInfoResponse": {
            "type": "structure"
        },
        "SiteKeyCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteKeyCreateResponse": {
            "type": "structure"
        },
        "SiteKeyDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "token",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteKeyDeleteResponse": {
            "type": "structure"
        },
        "SiteKeyListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteKeyListResponse": {
            "type": "structure"
        },
        "SiteKeyUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "token",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteKeyUpdateResponse": {
            "type": "structure"
        },
        "SiteListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "SiteListResponse": {
            "type": "structure"
        },
        "SitePackageListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SitePackageListResponse": {
            "type": "structure"
        },
        "SiteRenewRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteRenewResponse": {
            "type": "structure"
        },
        "SiteUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "site",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SiteUpdateResponse": {
            "type": "structure"
        },
        "SnapshotprofileCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SnapshotprofileCountResponse": {
            "type": "structure"
        },
        "SnapshotprofileListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "SnapshotprofileListResponse": {
            "type": "structure"
        },
        "VmCountRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "VmCountResponse": {
            "type": "structure"
        },
        "VmCreateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmCreateResponse": {
            "type": "structure"
        },
        "VmCreateFromRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_spec",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_spec",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "src_disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmCreateFromResponse": {
            "type": "structure"
        },
        "VmDeleteRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmDeleteResponse": {
            "type": "structure"
        },
        "VmDiskAttachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "options",
                    "shape": "String"
                }
            ]
        },
        "VmDiskAttachResponse": {
            "type": "structure"
        },
        "VmDiskDetachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "disk_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmDiskDetachResponse": {
            "type": "structure"
        },
        "VmDiskRollbackRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "snapshot_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmDiskRollbackResponse": {
            "type": "structure"
        },
        "VmIfaceAttachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmIfaceAttachResponse": {
            "type": "structure"
        },
        "VmIfaceDetachRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "iface_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmIfaceDetachResponse": {
            "type": "structure"
        },
        "VmInfoRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmInfoResponse": {
            "type": "structure"
        },
        "VmListRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "opts",
                    "shape": "String"
                }
            ]
        },
        "VmListResponse": {
            "type": "structure"
        },
        "VmRebootRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmRebootResponse": {
            "type": "structure"
        },
        "VmStartRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "params",
                    "shape": "String"
                }
            ]
        },
        "VmStartResponse": {
            "type": "structure"
        },
        "VmStopRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmStopResponse": {
            "type": "structure"
        },
        "VmUpdateRequest": {
            "type": "structure",
            "members": [
                {
                    "name": "apikey",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "vm_id",
                    "shape": "String",
                    "required": true
                },
                {
                    "name": "update_spec",
                    "shape": "String",
                    "required": true
                }
            ]
        },
        "VmUpdateResponse": {
            "type": "structure"
        }
    }
}
